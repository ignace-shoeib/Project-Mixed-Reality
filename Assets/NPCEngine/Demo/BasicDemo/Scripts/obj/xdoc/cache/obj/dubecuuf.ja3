id: cs.temp.dll
language: CSharp
name:
  Default: cs.temp.dll
qualifiedName:
  Default: cs.temp.dll
type: Assembly
modifiers: {}
items:
- id: NPCEngine
  commentId: N:NPCEngine
  language: CSharp
  name:
    CSharp: NPCEngine
    VB: NPCEngine
  nameWithType:
    CSharp: NPCEngine
    VB: NPCEngine
  qualifiedName:
    CSharp: NPCEngine
    VB: NPCEngine
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: NPCEngine.ServiceConfigDescriptor
    commentId: T:NPCEngine.ServiceConfigDescriptor
    language: CSharp
    name:
      CSharp: ServiceConfigDescriptor
      VB: ServiceConfigDescriptor
    nameWithType:
      CSharp: ServiceConfigDescriptor
      VB: ServiceConfigDescriptor
    qualifiedName:
      CSharp: NPCEngine.ServiceConfigDescriptor
      VB: NPCEngine.ServiceConfigDescriptor
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: NPCEngine
    source:
      id: ServiceConfigDescriptor
      path: ''
      startLine: 272
    syntax:
      content:
        CSharp: public class ServiceConfigDescriptor
        VB: Public Class ServiceConfigDescriptor
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: NPCEngine.ServiceConfigDescriptor.name
      commentId: F:NPCEngine.ServiceConfigDescriptor.name
      language: CSharp
      name:
        CSharp: name
        VB: name
      nameWithType:
        CSharp: ServiceConfigDescriptor.name
        VB: ServiceConfigDescriptor.name
      qualifiedName:
        CSharp: NPCEngine.ServiceConfigDescriptor.name
        VB: NPCEngine.ServiceConfigDescriptor.name
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine
      source:
        id: name
        path: ''
        startLine: 276
      syntax:
        content:
          CSharp: public string name
          VB: Public name As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.ServiceConfigDescriptor.type
      commentId: F:NPCEngine.ServiceConfigDescriptor.type
      language: CSharp
      name:
        CSharp: type
        VB: type
      nameWithType:
        CSharp: ServiceConfigDescriptor.type
        VB: ServiceConfigDescriptor.type
      qualifiedName:
        CSharp: NPCEngine.ServiceConfigDescriptor.type
        VB: NPCEngine.ServiceConfigDescriptor.type
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine
      source:
        id: type
        path: ''
        startLine: 278
      syntax:
        content:
          CSharp: public string type
          VB: Public type As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.ServiceConfigDescriptor.path
      commentId: F:NPCEngine.ServiceConfigDescriptor.path
      language: CSharp
      name:
        CSharp: path
        VB: path
      nameWithType:
        CSharp: ServiceConfigDescriptor.path
        VB: ServiceConfigDescriptor.path
      qualifiedName:
        CSharp: NPCEngine.ServiceConfigDescriptor.path
        VB: NPCEngine.ServiceConfigDescriptor.path
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine
      source:
        id: path
        path: ''
        startLine: 280
      syntax:
        content:
          CSharp: public string path
          VB: Public path As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.ServiceConfigDescriptor.start
      commentId: F:NPCEngine.ServiceConfigDescriptor.start
      language: CSharp
      name:
        CSharp: start
        VB: start
      nameWithType:
        CSharp: ServiceConfigDescriptor.start
        VB: ServiceConfigDescriptor.start
      qualifiedName:
        CSharp: NPCEngine.ServiceConfigDescriptor.start
        VB: NPCEngine.ServiceConfigDescriptor.start
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine
      source:
        id: start
        path: ''
        startLine: 282
      syntax:
        content:
          CSharp: public bool start
          VB: Public start As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: NPCEngine.NPCEngineConfig
    commentId: T:NPCEngine.NPCEngineConfig
    language: CSharp
    name:
      CSharp: NPCEngineConfig
      VB: NPCEngineConfig
    nameWithType:
      CSharp: NPCEngineConfig
      VB: NPCEngineConfig
    qualifiedName:
      CSharp: NPCEngine.NPCEngineConfig
      VB: NPCEngine.NPCEngineConfig
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: NPCEngine
    source:
      id: NPCEngineConfig
      path: ''
      startLine: 285
    syntax:
      content:
        CSharp: 'public class NPCEngineConfig : Singleton<NPCEngineConfig>'
        VB: >-
          Public Class NPCEngineConfig

              Inherits Singleton(Of NPCEngineConfig)
    inheritance:
    - System.Object
    - NPCEngine.Utility.Singleton{NPCEngine.NPCEngineConfig}
    inheritedMembers:
    - NPCEngine.Utility.Singleton{NPCEngine.NPCEngineConfig}.Instance
    - NPCEngine.Utility.Singleton{NPCEngine.NPCEngineConfig}.GetInstance
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: NPCEngine.NPCEngineConfig.services
      commentId: F:NPCEngine.NPCEngineConfig.services
      language: CSharp
      name:
        CSharp: services
        VB: services
      nameWithType:
        CSharp: NPCEngineConfig.services
        VB: NPCEngineConfig.services
      qualifiedName:
        CSharp: NPCEngine.NPCEngineConfig.services
        VB: NPCEngine.NPCEngineConfig.services
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine
      source:
        id: services
        path: ''
        startLine: 293
      syntax:
        content:
          CSharp: public List<ServiceConfigDescriptor> services
          VB: Public services As List(Of ServiceConfigDescriptor)
        return:
          type: Global.List{NPCEngine.ServiceConfigDescriptor}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.NPCEngineConfig.serverType
      commentId: F:NPCEngine.NPCEngineConfig.serverType
      language: CSharp
      name:
        CSharp: serverType
        VB: serverType
      nameWithType:
        CSharp: NPCEngineConfig.serverType
        VB: NPCEngineConfig.serverType
      qualifiedName:
        CSharp: NPCEngine.NPCEngineConfig.serverType
        VB: NPCEngine.NPCEngineConfig.serverType
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine
      source:
        id: serverType
        path: ''
        startLine: 295
      syntax:
        content:
          CSharp: public ServerType serverType
          VB: Public serverType As ServerType
        return:
          type: Global.ServerType
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.NPCEngineConfig.serverAddress
      commentId: F:NPCEngine.NPCEngineConfig.serverAddress
      language: CSharp
      name:
        CSharp: serverAddress
        VB: serverAddress
      nameWithType:
        CSharp: NPCEngineConfig.serverAddress
        VB: NPCEngineConfig.serverAddress
      qualifiedName:
        CSharp: NPCEngine.NPCEngineConfig.serverAddress
        VB: NPCEngine.NPCEngineConfig.serverAddress
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine
      source:
        id: serverAddress
        path: ''
        startLine: 297
      syntax:
        content:
          CSharp: public string serverAddress
          VB: Public serverAddress As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.NPCEngineConfig.Port
      commentId: P:NPCEngine.NPCEngineConfig.Port
      language: CSharp
      name:
        CSharp: Port
        VB: Port
      nameWithType:
        CSharp: NPCEngineConfig.Port
        VB: NPCEngineConfig.Port
      qualifiedName:
        CSharp: NPCEngine.NPCEngineConfig.Port
        VB: NPCEngine.NPCEngineConfig.Port
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine
      source:
        id: Port
        path: ''
        startLine: 299
      syntax:
        content:
          CSharp: public string Port { get; }
          VB: Public ReadOnly Property Port As String
        parameters: []
        return:
          type: System.String
      overload: NPCEngine.NPCEngineConfig.Port*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: NPCEngine.NPCEngineConfig.NPCEngineInstalled
      commentId: P:NPCEngine.NPCEngineConfig.NPCEngineInstalled
      language: CSharp
      name:
        CSharp: NPCEngineInstalled
        VB: NPCEngineInstalled
      nameWithType:
        CSharp: NPCEngineConfig.NPCEngineInstalled
        VB: NPCEngineConfig.NPCEngineInstalled
      qualifiedName:
        CSharp: NPCEngine.NPCEngineConfig.NPCEngineInstalled
        VB: NPCEngine.NPCEngineConfig.NPCEngineInstalled
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine
      source:
        id: NPCEngineInstalled
        path: ''
        startLine: 307
      syntax:
        content:
          CSharp: public bool NPCEngineInstalled { get; }
          VB: Public ReadOnly Property NPCEngineInstalled As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: NPCEngine.NPCEngineConfig.NPCEngineInstalled*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: NPCEngine.NPCEngineConfig.ModelsPathExists
      commentId: P:NPCEngine.NPCEngineConfig.ModelsPathExists
      language: CSharp
      name:
        CSharp: ModelsPathExists
        VB: ModelsPathExists
      nameWithType:
        CSharp: NPCEngineConfig.ModelsPathExists
        VB: NPCEngineConfig.ModelsPathExists
      qualifiedName:
        CSharp: NPCEngine.NPCEngineConfig.ModelsPathExists
        VB: NPCEngine.NPCEngineConfig.ModelsPathExists
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine
      source:
        id: ModelsPathExists
        path: ''
        startLine: 321
      syntax:
        content:
          CSharp: public bool ModelsPathExists { get; }
          VB: Public ReadOnly Property ModelsPathExists As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: NPCEngine.NPCEngineConfig.ModelsPathExists*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: NPCEngine.NPCEngineConfig.modelsPath
      commentId: F:NPCEngine.NPCEngineConfig.modelsPath
      language: CSharp
      name:
        CSharp: modelsPath
        VB: modelsPath
      nameWithType:
        CSharp: NPCEngineConfig.modelsPath
        VB: NPCEngineConfig.modelsPath
      qualifiedName:
        CSharp: NPCEngine.NPCEngineConfig.modelsPath
        VB: NPCEngine.NPCEngineConfig.modelsPath
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine
      source:
        id: modelsPath
        path: ''
        startLine: 336
      syntax:
        content:
          CSharp: public string modelsPath
          VB: Public modelsPath As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.NPCEngineConfig.npcEnginePath
      commentId: F:NPCEngine.NPCEngineConfig.npcEnginePath
      language: CSharp
      name:
        CSharp: npcEnginePath
        VB: npcEnginePath
      nameWithType:
        CSharp: NPCEngineConfig.npcEnginePath
        VB: NPCEngineConfig.npcEnginePath
      qualifiedName:
        CSharp: NPCEngine.NPCEngineConfig.npcEnginePath
        VB: NPCEngine.NPCEngineConfig.npcEnginePath
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine
      source:
        id: npcEnginePath
        path: ''
        startLine: 339
      syntax:
        content:
          CSharp: public string npcEnginePath
          VB: Public npcEnginePath As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.NPCEngineConfig.debugLogs
      commentId: F:NPCEngine.NPCEngineConfig.debugLogs
      language: CSharp
      name:
        CSharp: debugLogs
        VB: debugLogs
      nameWithType:
        CSharp: NPCEngineConfig.debugLogs
        VB: NPCEngineConfig.debugLogs
      qualifiedName:
        CSharp: NPCEngine.NPCEngineConfig.debugLogs
        VB: NPCEngine.NPCEngineConfig.debugLogs
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine
      source:
        id: debugLogs
        path: ''
        startLine: 341
      syntax:
        content:
          CSharp: public bool debugLogs
          VB: Public debugLogs As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.NPCEngineConfig.serverConsole
      commentId: F:NPCEngine.NPCEngineConfig.serverConsole
      language: CSharp
      name:
        CSharp: serverConsole
        VB: serverConsole
      nameWithType:
        CSharp: NPCEngineConfig.serverConsole
        VB: NPCEngineConfig.serverConsole
      qualifiedName:
        CSharp: NPCEngine.NPCEngineConfig.serverConsole
        VB: NPCEngine.NPCEngineConfig.serverConsole
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine
      source:
        id: serverConsole
        path: ''
        startLine: 342
      syntax:
        content:
          CSharp: public bool serverConsole
          VB: Public serverConsole As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.NPCEngineConfig.connectToExistingServer
      commentId: F:NPCEngine.NPCEngineConfig.connectToExistingServer
      language: CSharp
      name:
        CSharp: connectToExistingServer
        VB: connectToExistingServer
      nameWithType:
        CSharp: NPCEngineConfig.connectToExistingServer
        VB: NPCEngineConfig.connectToExistingServer
      qualifiedName:
        CSharp: NPCEngine.NPCEngineConfig.connectToExistingServer
        VB: NPCEngine.NPCEngineConfig.connectToExistingServer
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine
      source:
        id: connectToExistingServer
        path: ''
        startLine: 343
      syntax:
        content:
          CSharp: public bool connectToExistingServer
          VB: Public connectToExistingServer As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.NPCEngineConfig.chunkCharacters
      commentId: F:NPCEngine.NPCEngineConfig.chunkCharacters
      language: CSharp
      name:
        CSharp: chunkCharacters
        VB: chunkCharacters
      nameWithType:
        CSharp: NPCEngineConfig.chunkCharacters
        VB: NPCEngineConfig.chunkCharacters
      qualifiedName:
        CSharp: NPCEngine.NPCEngineConfig.chunkCharacters
        VB: NPCEngine.NPCEngineConfig.chunkCharacters
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine
      source:
        id: chunkCharacters
        path: ''
        startLine: 346
      syntax:
        content:
          CSharp: public int chunkCharacters
          VB: Public chunkCharacters As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.NPCEngineConfig.ToBeStarted(System.String)
      commentId: M:NPCEngine.NPCEngineConfig.ToBeStarted(System.String)
      language: CSharp
      name:
        CSharp: ToBeStarted(String)
        VB: ToBeStarted(String)
      nameWithType:
        CSharp: NPCEngineConfig.ToBeStarted(String)
        VB: NPCEngineConfig.ToBeStarted(String)
      qualifiedName:
        CSharp: NPCEngine.NPCEngineConfig.ToBeStarted(System.String)
        VB: NPCEngine.NPCEngineConfig.ToBeStarted(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine
      source:
        id: ToBeStarted
        path: ''
        startLine: 357
      syntax:
        content:
          CSharp: public bool ToBeStarted(string name)
          VB: Public Function ToBeStarted(name As String) As Boolean
        parameters:
        - id: name
          type: System.String
        return:
          type: System.Boolean
      overload: NPCEngine.NPCEngineConfig.ToBeStarted*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.NPCEngineConfig.RefreshServices
      commentId: M:NPCEngine.NPCEngineConfig.RefreshServices
      language: CSharp
      name:
        CSharp: RefreshServices()
        VB: RefreshServices()
      nameWithType:
        CSharp: NPCEngineConfig.RefreshServices()
        VB: NPCEngineConfig.RefreshServices()
      qualifiedName:
        CSharp: NPCEngine.NPCEngineConfig.RefreshServices()
        VB: NPCEngine.NPCEngineConfig.RefreshServices()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine
      source:
        id: RefreshServices
        path: ''
        startLine: 375
      syntax:
        content:
          CSharp: public void RefreshServices()
          VB: Public Sub RefreshServices
      overload: NPCEngine.NPCEngineConfig.RefreshServices*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: NPCEngine.NonPlayerCharacterEditor
    commentId: T:NPCEngine.NonPlayerCharacterEditor
    language: CSharp
    name:
      CSharp: NonPlayerCharacterEditor
      VB: NonPlayerCharacterEditor
    nameWithType:
      CSharp: NonPlayerCharacterEditor
      VB: NonPlayerCharacterEditor
    qualifiedName:
      CSharp: NPCEngine.NonPlayerCharacterEditor
      VB: NPCEngine.NonPlayerCharacterEditor
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: NPCEngine
    source:
      id: NonPlayerCharacterEditor
      path: ''
      startLine: 2704
    syntax:
      content:
        CSharp: 'public class NonPlayerCharacterEditor : Editor'
        VB: >-
          Public Class NonPlayerCharacterEditor

              Inherits Editor
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: NPCEngine.NonPlayerCharacterEditor.OnInspectorGUI
      commentId: M:NPCEngine.NonPlayerCharacterEditor.OnInspectorGUI
      language: CSharp
      name:
        CSharp: OnInspectorGUI()
        VB: OnInspectorGUI()
      nameWithType:
        CSharp: NonPlayerCharacterEditor.OnInspectorGUI()
        VB: NonPlayerCharacterEditor.OnInspectorGUI()
      qualifiedName:
        CSharp: NPCEngine.NonPlayerCharacterEditor.OnInspectorGUI()
        VB: NPCEngine.NonPlayerCharacterEditor.OnInspectorGUI()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine
      source:
        id: OnInspectorGUI
        path: ''
        startLine: 2769
      syntax:
        content:
          CSharp: public override void OnInspectorGUI()
          VB: Public Overrides Sub OnInspectorGUI
      overload: NPCEngine.NonPlayerCharacterEditor.OnInspectorGUI*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: NPCEngine.NPCEngineConfigEditor
    commentId: T:NPCEngine.NPCEngineConfigEditor
    language: CSharp
    name:
      CSharp: NPCEngineConfigEditor
      VB: NPCEngineConfigEditor
    nameWithType:
      CSharp: NPCEngineConfigEditor
      VB: NPCEngineConfigEditor
    qualifiedName:
      CSharp: NPCEngine.NPCEngineConfigEditor
      VB: NPCEngine.NPCEngineConfigEditor
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: NPCEngine
    source:
      id: NPCEngineConfigEditor
      path: ''
      startLine: 3024
    syntax:
      content:
        CSharp: 'public class NPCEngineConfigEditor : Editor'
        VB: >-
          Public Class NPCEngineConfigEditor

              Inherits Editor
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: NPCEngine.NPCEngineConfigEditor.OnInspectorGUI
      commentId: M:NPCEngine.NPCEngineConfigEditor.OnInspectorGUI
      language: CSharp
      name:
        CSharp: OnInspectorGUI()
        VB: OnInspectorGUI()
      nameWithType:
        CSharp: NPCEngineConfigEditor.OnInspectorGUI()
        VB: NPCEngineConfigEditor.OnInspectorGUI()
      qualifiedName:
        CSharp: NPCEngine.NPCEngineConfigEditor.OnInspectorGUI()
        VB: NPCEngine.NPCEngineConfigEditor.OnInspectorGUI()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine
      source:
        id: OnInspectorGUI
        path: ''
        startLine: 3031
      syntax:
        content:
          CSharp: public override void OnInspectorGUI()
          VB: Public Overrides Sub OnInspectorGUI
      overload: NPCEngine.NPCEngineConfigEditor.OnInspectorGUI*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: NPCEngine.TTSGeneratorEditor
    commentId: T:NPCEngine.TTSGeneratorEditor
    language: CSharp
    name:
      CSharp: TTSGeneratorEditor
      VB: TTSGeneratorEditor
    nameWithType:
      CSharp: TTSGeneratorEditor
      VB: TTSGeneratorEditor
    qualifiedName:
      CSharp: NPCEngine.TTSGeneratorEditor
      VB: NPCEngine.TTSGeneratorEditor
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: NPCEngine
    source:
      id: TTSGeneratorEditor
      path: ''
      startLine: 3985
    syntax:
      content:
        CSharp: 'public class TTSGeneratorEditor : Editor'
        VB: >-
          Public Class TTSGeneratorEditor

              Inherits Editor
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: NPCEngine.TTSGeneratorEditor.OnInspectorGUI
      commentId: M:NPCEngine.TTSGeneratorEditor.OnInspectorGUI
      language: CSharp
      name:
        CSharp: OnInspectorGUI()
        VB: OnInspectorGUI()
      nameWithType:
        CSharp: TTSGeneratorEditor.OnInspectorGUI()
        VB: TTSGeneratorEditor.OnInspectorGUI()
      qualifiedName:
        CSharp: NPCEngine.TTSGeneratorEditor.OnInspectorGUI()
        VB: NPCEngine.TTSGeneratorEditor.OnInspectorGUI()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine
      source:
        id: OnInspectorGUI
        path: ''
        startLine: 3987
      syntax:
        content:
          CSharp: public override void OnInspectorGUI()
          VB: Public Overrides Sub OnInspectorGUI
      overload: NPCEngine.TTSGeneratorEditor.OnInspectorGUI*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: NPCEngine.NPCEngineException
    commentId: T:NPCEngine.NPCEngineException
    language: CSharp
    name:
      CSharp: NPCEngineException
      VB: NPCEngineException
    nameWithType:
      CSharp: NPCEngineException
      VB: NPCEngineException
    qualifiedName:
      CSharp: NPCEngine.NPCEngineException
      VB: NPCEngine.NPCEngineException
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: NPCEngine
    source:
      id: NPCEngineException
      path: ''
      startLine: 4327
    summary: "\nGeneral NPC Engine exception.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class NPCEngineException : Exception, ISerializable, _Exception'
        VB: >-
          Public Class NPCEngineException

              Inherits Exception

              Implements ISerializable, _Exception
    inheritance:
    - System.Object
    - System.Exception
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: NPCEngine.NPCEngineException.data
      commentId: F:NPCEngine.NPCEngineException.data
      language: CSharp
      name:
        CSharp: data
        VB: data
      nameWithType:
        CSharp: NPCEngineException.data
        VB: NPCEngineException.data
      qualifiedName:
        CSharp: NPCEngine.NPCEngineException.data
        VB: NPCEngine.NPCEngineException.data
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine
      source:
        id: data
        path: ''
        startLine: 4330
      syntax:
        content:
          CSharp: public string data
          VB: Public data As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.NPCEngineException.#ctor
      commentId: M:NPCEngine.NPCEngineException.#ctor
      language: CSharp
      name:
        CSharp: NPCEngineException()
        VB: NPCEngineException()
      nameWithType:
        CSharp: NPCEngineException.NPCEngineException()
        VB: NPCEngineException.NPCEngineException()
      qualifiedName:
        CSharp: NPCEngine.NPCEngineException.NPCEngineException()
        VB: NPCEngine.NPCEngineException.NPCEngineException()
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine
      source:
        id: .ctor
        path: ''
        startLine: 4331
      syntax:
        content:
          CSharp: public NPCEngineException()
          VB: Public Sub New
      overload: NPCEngine.NPCEngineException.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.NPCEngineException.#ctor(System.String,System.String)
      commentId: M:NPCEngine.NPCEngineException.#ctor(System.String,System.String)
      language: CSharp
      name:
        CSharp: NPCEngineException(String, String)
        VB: NPCEngineException(String, String)
      nameWithType:
        CSharp: NPCEngineException.NPCEngineException(String, String)
        VB: NPCEngineException.NPCEngineException(String, String)
      qualifiedName:
        CSharp: NPCEngine.NPCEngineException.NPCEngineException(System.String, System.String)
        VB: NPCEngine.NPCEngineException.NPCEngineException(System.String, System.String)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine
      source:
        id: .ctor
        path: ''
        startLine: 4332
      syntax:
        content:
          CSharp: public NPCEngineException(string message, string data = "")
          VB: Public Sub New(message As String, data As String = "")
        parameters:
        - id: message
          type: System.String
        - id: data
          type: System.String
      overload: NPCEngine.NPCEngineException.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.NPCEngineException.#ctor(System.String,System.Exception)
      commentId: M:NPCEngine.NPCEngineException.#ctor(System.String,System.Exception)
      language: CSharp
      name:
        CSharp: NPCEngineException(String, Exception)
        VB: NPCEngineException(String, Exception)
      nameWithType:
        CSharp: NPCEngineException.NPCEngineException(String, Exception)
        VB: NPCEngineException.NPCEngineException(String, Exception)
      qualifiedName:
        CSharp: NPCEngine.NPCEngineException.NPCEngineException(System.String, System.Exception)
        VB: NPCEngine.NPCEngineException.NPCEngineException(System.String, System.Exception)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine
      source:
        id: .ctor
        path: ''
        startLine: 4333
      syntax:
        content:
          CSharp: public NPCEngineException(string message, Exception inner)
          VB: Public Sub New(message As String, inner As Exception)
        parameters:
        - id: message
          type: System.String
        - id: inner
          type: System.Exception
      overload: NPCEngine.NPCEngineException.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.NPCEngineException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
      commentId: M:NPCEngine.NPCEngineException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
      language: CSharp
      name:
        CSharp: NPCEngineException(SerializationInfo, StreamingContext)
        VB: NPCEngineException(SerializationInfo, StreamingContext)
      nameWithType:
        CSharp: NPCEngineException.NPCEngineException(SerializationInfo, StreamingContext)
        VB: NPCEngineException.NPCEngineException(SerializationInfo, StreamingContext)
      qualifiedName:
        CSharp: NPCEngine.NPCEngineException.NPCEngineException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
        VB: NPCEngine.NPCEngineException.NPCEngineException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine
      source:
        id: .ctor
        path: ''
        startLine: 4337
      syntax:
        content:
          CSharp: protected NPCEngineException(SerializationInfo info, StreamingContext context)
          VB: Protected Sub New(info As SerializationInfo, context As StreamingContext)
        parameters:
        - id: info
          type: System.Runtime.Serialization.SerializationInfo
        - id: context
          type: System.Runtime.Serialization.StreamingContext
      overload: NPCEngine.NPCEngineException.#ctor*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
- id: NPCEngine.API
  commentId: N:NPCEngine.API
  language: CSharp
  name:
    CSharp: NPCEngine.API
    VB: NPCEngine.API
  nameWithType:
    CSharp: NPCEngine.API
    VB: NPCEngine.API
  qualifiedName:
    CSharp: NPCEngine.API
    VB: NPCEngine.API
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: NPCEngine.API.Classification
    commentId: T:NPCEngine.API.Classification
    language: CSharp
    name:
      CSharp: Classification
      VB: Classification
    nameWithType:
      CSharp: Classification
      VB: Classification
    qualifiedName:
      CSharp: NPCEngine.API.Classification
      VB: NPCEngine.API.Classification
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: NPCEngine.API
    source:
      id: Classification
      path: ''
      startLine: 440
    summary: "\nClassification services RPC Interface.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class Classification : RPCBase'
        VB: >-
          Public Class Classification

              Inherits RPCBase
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: NPCEngine.API.Classification.Classify(System.String,List{System.String},Action{List{List{System.Single}}},Action{NPCEngine.NPCEngineException})
      commentId: M:NPCEngine.API.Classification.Classify(System.String,List{System.String},Action{List{List{System.Single}}},Action{NPCEngine.NPCEngineException})
      language: CSharp
      name:
        CSharp: Classify(String, List<String>, Action<List<List<Single>>>, Action<NPCEngineException>)
        VB: Classify(String, List(Of String), Action(Of List(Of List(Of Single))), Action(Of NPCEngineException))
      nameWithType:
        CSharp: Classification.Classify(String, List<String>, Action<List<List<Single>>>, Action<NPCEngineException>)
        VB: Classification.Classify(String, List(Of String), Action(Of List(Of List(Of Single))), Action(Of NPCEngineException))
      qualifiedName:
        CSharp: NPCEngine.API.Classification.Classify(System.String, List<System.String>, Action<List<List<System.Single>>>, Action<NPCEngine.NPCEngineException>)
        VB: NPCEngine.API.Classification.Classify(System.String, List(Of System.String), Action(Of List(Of List(Of System.Single))), Action(Of NPCEngine.NPCEngineException))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.API
      source:
        id: Classify
        path: ''
        startLine: 456
      syntax:
        content:
          CSharp: public IEnumerator Classify(string query, List<string> context, Action<List<List<float>>> outputCallback = null, Action<NPCEngineException> errorCallback = null)
          VB: Public Function Classify(query As String, context As List(Of String), outputCallback As Action(Of List(Of List(Of Single))) = Nothing, errorCallback As Action(Of NPCEngineException) = Nothing) As IEnumerator
        parameters:
        - id: query
          type: System.String
        - id: context
          type: Global.List{System.String}
        - id: outputCallback
          type: Global.Action{List{List{System.Single}}}
        - id: errorCallback
          type: Global.Action{NPCEngine.NPCEngineException}
        return:
          type: System.Collections.IEnumerator
      overload: NPCEngine.API.Classification.Classify*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: NPCEngine.API.ServiceMetadata
    commentId: T:NPCEngine.API.ServiceMetadata
    language: CSharp
    name:
      CSharp: ServiceMetadata
      VB: ServiceMetadata
    nameWithType:
      CSharp: ServiceMetadata
      VB: ServiceMetadata
    qualifiedName:
      CSharp: NPCEngine.API.ServiceMetadata
      VB: NPCEngine.API.ServiceMetadata
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: NPCEngine.API
    source:
      id: ServiceMetadata
      path: ''
      startLine: 478
    summary: "\nData class containing service metadata.\n"
    example: []
    syntax:
      content:
        CSharp: public class ServiceMetadata
        VB: Public Class ServiceMetadata
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: NPCEngine.API.ServiceMetadata.id
      commentId: F:NPCEngine.API.ServiceMetadata.id
      language: CSharp
      name:
        CSharp: id
        VB: id
      nameWithType:
        CSharp: ServiceMetadata.id
        VB: ServiceMetadata.id
      qualifiedName:
        CSharp: NPCEngine.API.ServiceMetadata.id
        VB: NPCEngine.API.ServiceMetadata.id
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.API
      source:
        id: id
        path: ''
        startLine: 485
      summary: "\nID of the service.\n"
      example: []
      syntax:
        content:
          CSharp: public string id
          VB: Public id As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.API.ServiceMetadata.service
      commentId: F:NPCEngine.API.ServiceMetadata.service
      language: CSharp
      name:
        CSharp: service
        VB: service
      nameWithType:
        CSharp: ServiceMetadata.service
        VB: ServiceMetadata.service
      qualifiedName:
        CSharp: NPCEngine.API.ServiceMetadata.service
        VB: NPCEngine.API.ServiceMetadata.service
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.API
      source:
        id: service
        path: ''
        startLine: 490
      summary: "\nName of the service class.\n"
      example: []
      syntax:
        content:
          CSharp: public string service
          VB: Public service As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.API.ServiceMetadata.api_name
      commentId: F:NPCEngine.API.ServiceMetadata.api_name
      language: CSharp
      name:
        CSharp: api_name
        VB: api_name
      nameWithType:
        CSharp: ServiceMetadata.api_name
        VB: ServiceMetadata.api_name
      qualifiedName:
        CSharp: NPCEngine.API.ServiceMetadata.api_name
        VB: NPCEngine.API.ServiceMetadata.api_name
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.API
      source:
        id: api_name
        path: ''
        startLine: 495
      summary: "\nName of the API class.\n"
      example: []
      syntax:
        content:
          CSharp: public string api_name
          VB: Public api_name As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.API.ServiceMetadata.path
      commentId: F:NPCEngine.API.ServiceMetadata.path
      language: CSharp
      name:
        CSharp: path
        VB: path
      nameWithType:
        CSharp: ServiceMetadata.path
        VB: ServiceMetadata.path
      qualifiedName:
        CSharp: NPCEngine.API.ServiceMetadata.path
        VB: NPCEngine.API.ServiceMetadata.path
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.API
      source:
        id: path
        path: ''
        startLine: 500
      summary: "\nPath to the service&apos;s folder.\n"
      example: []
      syntax:
        content:
          CSharp: public string path
          VB: Public path As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.API.ServiceMetadata.service_short_description
      commentId: F:NPCEngine.API.ServiceMetadata.service_short_description
      language: CSharp
      name:
        CSharp: service_short_description
        VB: service_short_description
      nameWithType:
        CSharp: ServiceMetadata.service_short_description
        VB: ServiceMetadata.service_short_description
      qualifiedName:
        CSharp: NPCEngine.API.ServiceMetadata.service_short_description
        VB: NPCEngine.API.ServiceMetadata.service_short_description
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.API
      source:
        id: service_short_description
        path: ''
        startLine: 505
      summary: "\nShort service class description\n"
      example: []
      syntax:
        content:
          CSharp: public string service_short_description
          VB: Public service_short_description As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.API.ServiceMetadata.service_description
      commentId: F:NPCEngine.API.ServiceMetadata.service_description
      language: CSharp
      name:
        CSharp: service_description
        VB: service_description
      nameWithType:
        CSharp: ServiceMetadata.service_description
        VB: ServiceMetadata.service_description
      qualifiedName:
        CSharp: NPCEngine.API.ServiceMetadata.service_description
        VB: NPCEngine.API.ServiceMetadata.service_description
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.API
      source:
        id: service_description
        path: ''
        startLine: 510
      summary: "\nLong service class description\n"
      example: []
      syntax:
        content:
          CSharp: public string service_description
          VB: Public service_description As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.API.ServiceMetadata.readme
      commentId: F:NPCEngine.API.ServiceMetadata.readme
      language: CSharp
      name:
        CSharp: readme
        VB: readme
      nameWithType:
        CSharp: ServiceMetadata.readme
        VB: ServiceMetadata.readme
      qualifiedName:
        CSharp: NPCEngine.API.ServiceMetadata.readme
        VB: NPCEngine.API.ServiceMetadata.readme
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.API
      source:
        id: readme
        path: ''
        startLine: 515
      summary: "\nModel specific readme.\n"
      example: []
      syntax:
        content:
          CSharp: public string readme
          VB: Public readme As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: NPCEngine.API.ServiceStatus
    commentId: T:NPCEngine.API.ServiceStatus
    language: CSharp
    name:
      CSharp: ServiceStatus
      VB: ServiceStatus
    nameWithType:
      CSharp: ServiceStatus
      VB: ServiceStatus
    qualifiedName:
      CSharp: NPCEngine.API.ServiceStatus
      VB: NPCEngine.API.ServiceStatus
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: NPCEngine.API
    source:
      id: ServiceStatus
      path: ''
      startLine: 522
    summary: "\nService status enum.\n"
    example: []
    syntax:
      content:
        CSharp: public enum ServiceStatus
        VB: Public Enum ServiceStatus
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: NPCEngine.API.ServiceStatus.UNKNOWN
      commentId: F:NPCEngine.API.ServiceStatus.UNKNOWN
      language: CSharp
      name:
        CSharp: UNKNOWN
        VB: UNKNOWN
      nameWithType:
        CSharp: ServiceStatus.UNKNOWN
        VB: ServiceStatus.UNKNOWN
      qualifiedName:
        CSharp: NPCEngine.API.ServiceStatus.UNKNOWN
        VB: NPCEngine.API.ServiceStatus.UNKNOWN
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.API
      source:
        id: UNKNOWN
        path: ''
        startLine: 524
      syntax:
        content:
          CSharp: UNKNOWN = 0
          VB: UNKNOWN = 0
        return:
          type: NPCEngine.API.ServiceStatus
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: NPCEngine.API.ServiceStatus.STARTING
      commentId: F:NPCEngine.API.ServiceStatus.STARTING
      language: CSharp
      name:
        CSharp: STARTING
        VB: STARTING
      nameWithType:
        CSharp: ServiceStatus.STARTING
        VB: ServiceStatus.STARTING
      qualifiedName:
        CSharp: NPCEngine.API.ServiceStatus.STARTING
        VB: NPCEngine.API.ServiceStatus.STARTING
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.API
      source:
        id: STARTING
        path: ''
        startLine: 525
      syntax:
        content:
          CSharp: STARTING = 1
          VB: STARTING = 1
        return:
          type: NPCEngine.API.ServiceStatus
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: NPCEngine.API.ServiceStatus.RUNNING
      commentId: F:NPCEngine.API.ServiceStatus.RUNNING
      language: CSharp
      name:
        CSharp: RUNNING
        VB: RUNNING
      nameWithType:
        CSharp: ServiceStatus.RUNNING
        VB: ServiceStatus.RUNNING
      qualifiedName:
        CSharp: NPCEngine.API.ServiceStatus.RUNNING
        VB: NPCEngine.API.ServiceStatus.RUNNING
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.API
      source:
        id: RUNNING
        path: ''
        startLine: 526
      syntax:
        content:
          CSharp: RUNNING = 2
          VB: RUNNING = 2
        return:
          type: NPCEngine.API.ServiceStatus
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: NPCEngine.API.ServiceStatus.STOPPED
      commentId: F:NPCEngine.API.ServiceStatus.STOPPED
      language: CSharp
      name:
        CSharp: STOPPED
        VB: STOPPED
      nameWithType:
        CSharp: ServiceStatus.STOPPED
        VB: ServiceStatus.STOPPED
      qualifiedName:
        CSharp: NPCEngine.API.ServiceStatus.STOPPED
        VB: NPCEngine.API.ServiceStatus.STOPPED
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.API
      source:
        id: STOPPED
        path: ''
        startLine: 527
      syntax:
        content:
          CSharp: STOPPED = 3
          VB: STOPPED = 3
        return:
          type: NPCEngine.API.ServiceStatus
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: NPCEngine.API.ServiceStatus.AWAITING
      commentId: F:NPCEngine.API.ServiceStatus.AWAITING
      language: CSharp
      name:
        CSharp: AWAITING
        VB: AWAITING
      nameWithType:
        CSharp: ServiceStatus.AWAITING
        VB: ServiceStatus.AWAITING
      qualifiedName:
        CSharp: NPCEngine.API.ServiceStatus.AWAITING
        VB: NPCEngine.API.ServiceStatus.AWAITING
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.API
      source:
        id: AWAITING
        path: ''
        startLine: 528
      syntax:
        content:
          CSharp: AWAITING = 4
          VB: AWAITING = 4
        return:
          type: NPCEngine.API.ServiceStatus
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: NPCEngine.API.ServiceStatus.TIMEOUT
      commentId: F:NPCEngine.API.ServiceStatus.TIMEOUT
      language: CSharp
      name:
        CSharp: TIMEOUT
        VB: TIMEOUT
      nameWithType:
        CSharp: ServiceStatus.TIMEOUT
        VB: ServiceStatus.TIMEOUT
      qualifiedName:
        CSharp: NPCEngine.API.ServiceStatus.TIMEOUT
        VB: NPCEngine.API.ServiceStatus.TIMEOUT
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.API
      source:
        id: TIMEOUT
        path: ''
        startLine: 529
      syntax:
        content:
          CSharp: TIMEOUT = 5
          VB: TIMEOUT = 5
        return:
          type: NPCEngine.API.ServiceStatus
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: NPCEngine.API.ServiceStatus.ERROR
      commentId: F:NPCEngine.API.ServiceStatus.ERROR
      language: CSharp
      name:
        CSharp: ERROR
        VB: ERROR
      nameWithType:
        CSharp: ServiceStatus.ERROR
        VB: ServiceStatus.ERROR
      qualifiedName:
        CSharp: NPCEngine.API.ServiceStatus.ERROR
        VB: NPCEngine.API.ServiceStatus.ERROR
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.API
      source:
        id: ERROR
        path: ''
        startLine: 530
      syntax:
        content:
          CSharp: ERROR = 6
          VB: ERROR = 6
        return:
          type: NPCEngine.API.ServiceStatus
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: NPCEngine.API.Control
    commentId: T:NPCEngine.API.Control
    language: CSharp
    name:
      CSharp: Control
      VB: Control
    nameWithType:
      CSharp: Control
      VB: Control
    qualifiedName:
      CSharp: NPCEngine.API.Control
      VB: NPCEngine.API.Control
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: NPCEngine.API
    source:
      id: Control
      path: ''
      startLine: 536
    summary: "\n<code>Control</code> provides RPC interface to control service.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class Control : RPCBase'
        VB: >-
          Public Class Control

              Inherits RPCBase
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: NPCEngine.API.Control.StartService(System.String)
      commentId: M:NPCEngine.API.Control.StartService(System.String)
      language: CSharp
      name:
        CSharp: StartService(String)
        VB: StartService(String)
      nameWithType:
        CSharp: Control.StartService(String)
        VB: Control.StartService(String)
      qualifiedName:
        CSharp: NPCEngine.API.Control.StartService(System.String)
        VB: NPCEngine.API.Control.StartService(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.API
      source:
        id: StartService
        path: ''
        startLine: 549
      syntax:
        content:
          CSharp: public IEnumerator StartService(string service_id)
          VB: Public Function StartService(service_id As String) As IEnumerator
        parameters:
        - id: service_id
          type: System.String
        return:
          type: System.Collections.IEnumerator
      overload: NPCEngine.API.Control.StartService*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.API.Control.StopService(System.String)
      commentId: M:NPCEngine.API.Control.StopService(System.String)
      language: CSharp
      name:
        CSharp: StopService(String)
        VB: StopService(String)
      nameWithType:
        CSharp: Control.StopService(String)
        VB: Control.StopService(String)
      qualifiedName:
        CSharp: NPCEngine.API.Control.StopService(System.String)
        VB: NPCEngine.API.Control.StopService(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.API
      source:
        id: StopService
        path: ''
        startLine: 566
      syntax:
        content:
          CSharp: public IEnumerator StopService(string service_id)
          VB: Public Function StopService(service_id As String) As IEnumerator
        parameters:
        - id: service_id
          type: System.String
        return:
          type: System.Collections.IEnumerator
      overload: NPCEngine.API.Control.StopService*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.API.Control.GetServiceStatus(System.String,Action{NPCEngine.API.ServiceStatus},Action{NPCEngine.NPCEngineException})
      commentId: M:NPCEngine.API.Control.GetServiceStatus(System.String,Action{NPCEngine.API.ServiceStatus},Action{NPCEngine.NPCEngineException})
      language: CSharp
      name:
        CSharp: GetServiceStatus(String, Action<ServiceStatus>, Action<NPCEngineException>)
        VB: GetServiceStatus(String, Action(Of ServiceStatus), Action(Of NPCEngineException))
      nameWithType:
        CSharp: Control.GetServiceStatus(String, Action<ServiceStatus>, Action<NPCEngineException>)
        VB: Control.GetServiceStatus(String, Action(Of ServiceStatus), Action(Of NPCEngineException))
      qualifiedName:
        CSharp: NPCEngine.API.Control.GetServiceStatus(System.String, Action<NPCEngine.API.ServiceStatus>, Action<NPCEngine.NPCEngineException>)
        VB: NPCEngine.API.Control.GetServiceStatus(System.String, Action(Of NPCEngine.API.ServiceStatus), Action(Of NPCEngine.NPCEngineException))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.API
      source:
        id: GetServiceStatus
        path: ''
        startLine: 588
      summary: "\nGet service status.\n"
      example: []
      syntax:
        content:
          CSharp: public IEnumerator GetServiceStatus(string service_id, Action<ServiceStatus> outputCallback = null, Action<NPCEngineException> errorCallback = null)
          VB: Public Function GetServiceStatus(service_id As String, outputCallback As Action(Of ServiceStatus) = Nothing, errorCallback As Action(Of NPCEngineException) = Nothing) As IEnumerator
        parameters:
        - id: service_id
          type: System.String
          description: ''
        - id: outputCallback
          type: Global.Action{NPCEngine.API.ServiceStatus}
          description: ''
        - id: errorCallback
          type: Global.Action{NPCEngine.NPCEngineException}
        return:
          type: System.Collections.IEnumerator
          description: ''
      overload: NPCEngine.API.Control.GetServiceStatus*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.API.Control.RestartService(System.String,Action{NPCEngine.API.ServiceStatus},Action{NPCEngine.NPCEngineException})
      commentId: M:NPCEngine.API.Control.RestartService(System.String,Action{NPCEngine.API.ServiceStatus},Action{NPCEngine.NPCEngineException})
      language: CSharp
      name:
        CSharp: RestartService(String, Action<ServiceStatus>, Action<NPCEngineException>)
        VB: RestartService(String, Action(Of ServiceStatus), Action(Of NPCEngineException))
      nameWithType:
        CSharp: Control.RestartService(String, Action<ServiceStatus>, Action<NPCEngineException>)
        VB: Control.RestartService(String, Action(Of ServiceStatus), Action(Of NPCEngineException))
      qualifiedName:
        CSharp: NPCEngine.API.Control.RestartService(System.String, Action<NPCEngine.API.ServiceStatus>, Action<NPCEngine.NPCEngineException>)
        VB: NPCEngine.API.Control.RestartService(System.String, Action(Of NPCEngine.API.ServiceStatus), Action(Of NPCEngine.NPCEngineException))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.API
      source:
        id: RestartService
        path: ''
        startLine: 626
      summary: "\nRestart service.\n"
      example: []
      syntax:
        content:
          CSharp: public IEnumerator RestartService(string service_id, Action<ServiceStatus> outputCallback = null, Action<NPCEngineException> errorCallback = null)
          VB: Public Function RestartService(service_id As String, outputCallback As Action(Of ServiceStatus) = Nothing, errorCallback As Action(Of NPCEngineException) = Nothing) As IEnumerator
        parameters:
        - id: service_id
          type: System.String
          description: Resolvable service name (i.e. id, type or API name)
        - id: outputCallback
          type: Global.Action{NPCEngine.API.ServiceStatus}
        - id: errorCallback
          type: Global.Action{NPCEngine.NPCEngineException}
        return:
          type: System.Collections.IEnumerator
          description: ''
      overload: NPCEngine.API.Control.RestartService*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.API.Control.GetServiceMetadata(System.String,Action{NPCEngine.API.ServiceMetadata},Action{NPCEngine.NPCEngineException})
      commentId: M:NPCEngine.API.Control.GetServiceMetadata(System.String,Action{NPCEngine.API.ServiceMetadata},Action{NPCEngine.NPCEngineException})
      language: CSharp
      name:
        CSharp: GetServiceMetadata(String, Action<ServiceMetadata>, Action<NPCEngineException>)
        VB: GetServiceMetadata(String, Action(Of ServiceMetadata), Action(Of NPCEngineException))
      nameWithType:
        CSharp: Control.GetServiceMetadata(String, Action<ServiceMetadata>, Action<NPCEngineException>)
        VB: Control.GetServiceMetadata(String, Action(Of ServiceMetadata), Action(Of NPCEngineException))
      qualifiedName:
        CSharp: NPCEngine.API.Control.GetServiceMetadata(System.String, Action<NPCEngine.API.ServiceMetadata>, Action<NPCEngine.NPCEngineException>)
        VB: NPCEngine.API.Control.GetServiceMetadata(System.String, Action(Of NPCEngine.API.ServiceMetadata), Action(Of NPCEngine.NPCEngineException))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.API
      source:
        id: GetServiceMetadata
        path: ''
        startLine: 639
      summary: "\nGet metadata for one service.\n"
      example: []
      syntax:
        content:
          CSharp: public IEnumerator GetServiceMetadata(string service_id, Action<ServiceMetadata> outputCallback = null, Action<NPCEngineException> errorCallback = null)
          VB: Public Function GetServiceMetadata(service_id As String, outputCallback As Action(Of ServiceMetadata) = Nothing, errorCallback As Action(Of NPCEngineException) = Nothing) As IEnumerator
        parameters:
        - id: service_id
          type: System.String
          description: Resolvable service name (i.e. id, type or API name)
        - id: outputCallback
          type: Global.Action{NPCEngine.API.ServiceMetadata}
          description: Callback action to consume results.
        - id: errorCallback
          type: Global.Action{NPCEngine.NPCEngineException}
        return:
          type: System.Collections.IEnumerator
          description: <code>ServiceMetadata</code> for resolved service.
      overload: NPCEngine.API.Control.GetServiceMetadata*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.API.Control.GetServicesMetadata(Action{List{NPCEngine.API.ServiceMetadata}},Action{NPCEngine.NPCEngineException})
      commentId: M:NPCEngine.API.Control.GetServicesMetadata(Action{List{NPCEngine.API.ServiceMetadata}},Action{NPCEngine.NPCEngineException})
      language: CSharp
      name:
        CSharp: GetServicesMetadata(Action<List<ServiceMetadata>>, Action<NPCEngineException>)
        VB: GetServicesMetadata(Action(Of List(Of ServiceMetadata)), Action(Of NPCEngineException))
      nameWithType:
        CSharp: Control.GetServicesMetadata(Action<List<ServiceMetadata>>, Action<NPCEngineException>)
        VB: Control.GetServicesMetadata(Action(Of List(Of ServiceMetadata)), Action(Of NPCEngineException))
      qualifiedName:
        CSharp: NPCEngine.API.Control.GetServicesMetadata(Action<List<NPCEngine.API.ServiceMetadata>>, Action<NPCEngine.NPCEngineException>)
        VB: NPCEngine.API.Control.GetServicesMetadata(Action(Of List(Of NPCEngine.API.ServiceMetadata)), Action(Of NPCEngine.NPCEngineException))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.API
      source:
        id: GetServicesMetadata
        path: ''
        startLine: 651
      summary: "\nGet metadata for all the services.\n"
      example: []
      syntax:
        content:
          CSharp: public IEnumerator GetServicesMetadata(Action<List<ServiceMetadata>> outputCallback = null, Action<NPCEngineException> errorCallback = null)
          VB: Public Function GetServicesMetadata(outputCallback As Action(Of List(Of ServiceMetadata)) = Nothing, errorCallback As Action(Of NPCEngineException) = Nothing) As IEnumerator
        parameters:
        - id: outputCallback
          type: Global.Action{List{NPCEngine.API.ServiceMetadata}}
          description: Callback action to consume results.
        - id: errorCallback
          type: Global.Action{NPCEngine.NPCEngineException}
        return:
          type: System.Collections.IEnumerator
          description: A list of <code>ServiceMetadata</code> for each service.
      overload: NPCEngine.API.Control.GetServicesMetadata*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.API.Control.StopServiceNoConfirm(System.String)
      commentId: M:NPCEngine.API.Control.StopServiceNoConfirm(System.String)
      language: CSharp
      name:
        CSharp: StopServiceNoConfirm(String)
        VB: StopServiceNoConfirm(String)
      nameWithType:
        CSharp: Control.StopServiceNoConfirm(String)
        VB: Control.StopServiceNoConfirm(String)
      qualifiedName:
        CSharp: NPCEngine.API.Control.StopServiceNoConfirm(System.String)
        VB: NPCEngine.API.Control.StopServiceNoConfirm(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.API
      source:
        id: StopServiceNoConfirm
        path: ''
        startLine: 658
      syntax:
        content:
          CSharp: public IEnumerator StopServiceNoConfirm(string service_id)
          VB: Public Function StopServiceNoConfirm(service_id As String) As IEnumerator
        parameters:
        - id: service_id
          type: System.String
        return:
          type: System.Collections.IEnumerator
      overload: NPCEngine.API.Control.StopServiceNoConfirm*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.API.Control.StartServiceNoConfirm(System.String)
      commentId: M:NPCEngine.API.Control.StartServiceNoConfirm(System.String)
      language: CSharp
      name:
        CSharp: StartServiceNoConfirm(String)
        VB: StartServiceNoConfirm(String)
      nameWithType:
        CSharp: Control.StartServiceNoConfirm(String)
        VB: Control.StartServiceNoConfirm(String)
      qualifiedName:
        CSharp: NPCEngine.API.Control.StartServiceNoConfirm(System.String)
        VB: NPCEngine.API.Control.StartServiceNoConfirm(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.API
      source:
        id: StartServiceNoConfirm
        path: ''
        startLine: 663
      syntax:
        content:
          CSharp: public IEnumerator StartServiceNoConfirm(string service_id)
          VB: Public Function StartServiceNoConfirm(service_id As String) As IEnumerator
        parameters:
        - id: service_id
          type: System.String
        return:
          type: System.Collections.IEnumerator
      overload: NPCEngine.API.Control.StartServiceNoConfirm*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: NPCEngine.API.PersonaDialogue
    commentId: T:NPCEngine.API.PersonaDialogue
    language: CSharp
    name:
      CSharp: PersonaDialogue
      VB: PersonaDialogue
    nameWithType:
      CSharp: PersonaDialogue
      VB: PersonaDialogue
    qualifiedName:
      CSharp: NPCEngine.API.PersonaDialogue
      VB: NPCEngine.API.PersonaDialogue
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: NPCEngine.API
    source:
      id: PersonaDialogue
      path: ''
      startLine: 683
    summary: "\n<code>Chatbot</code> provides remote procedure calls \nto inference engine&apos;s TextGeneration services.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class PersonaDialogue : RPCBase'
        VB: >-
          Public Class PersonaDialogue

              Inherits RPCBase
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: NPCEngine.API.PersonaDialogue.StartDialogue(System.String,System.String,System.String,System.String,System.String,System.String,Action{System.String},Action{NPCEngine.NPCEngineException},System.String)
      commentId: M:NPCEngine.API.PersonaDialogue.StartDialogue(System.String,System.String,System.String,System.String,System.String,System.String,Action{System.String},Action{NPCEngine.NPCEngineException},System.String)
      language: CSharp
      name:
        CSharp: StartDialogue(String, String, String, String, String, String, Action<String>, Action<NPCEngineException>, String)
        VB: StartDialogue(String, String, String, String, String, String, Action(Of String), Action(Of NPCEngineException), String)
      nameWithType:
        CSharp: PersonaDialogue.StartDialogue(String, String, String, String, String, String, Action<String>, Action<NPCEngineException>, String)
        VB: PersonaDialogue.StartDialogue(String, String, String, String, String, String, Action(Of String), Action(Of NPCEngineException), String)
      qualifiedName:
        CSharp: NPCEngine.API.PersonaDialogue.StartDialogue(System.String, System.String, System.String, System.String, System.String, System.String, Action<System.String>, Action<NPCEngine.NPCEngineException>, System.String)
        VB: NPCEngine.API.PersonaDialogue.StartDialogue(System.String, System.String, System.String, System.String, System.String, System.String, Action(Of System.String), Action(Of NPCEngine.NPCEngineException), System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.API
      source:
        id: StartDialogue
        path: ''
        startLine: 718
      syntax:
        content:
          CSharp: public IEnumerator StartDialogue(string name1, string persona1, string name2, string persona2, string location_name, string location_description, Action<string> outputCallback = null, Action<NPCEngineException> errorCallback = null, string dialogue_id = null)
          VB: Public Function StartDialogue(name1 As String, persona1 As String, name2 As String, persona2 As String, location_name As String, location_description As String, outputCallback As Action(Of String) = Nothing, errorCallback As Action(Of NPCEngineException) = Nothing, dialogue_id As String = Nothing) As IEnumerator
        parameters:
        - id: name1
          type: System.String
        - id: persona1
          type: System.String
        - id: name2
          type: System.String
        - id: persona2
          type: System.String
        - id: location_name
          type: System.String
        - id: location_description
          type: System.String
        - id: outputCallback
          type: Global.Action{System.String}
        - id: errorCallback
          type: Global.Action{NPCEngine.NPCEngineException}
        - id: dialogue_id
          type: System.String
        return:
          type: System.Collections.IEnumerator
      overload: NPCEngine.API.PersonaDialogue.StartDialogue*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.API.PersonaDialogue.StepDialogue(System.String,System.String,System.Boolean,Action{Tuple{System.String,System.Boolean}},Action{NPCEngine.NPCEngineException},System.Single,List{System.String},System.String)
      commentId: M:NPCEngine.API.PersonaDialogue.StepDialogue(System.String,System.String,System.Boolean,Action{Tuple{System.String,System.Boolean}},Action{NPCEngine.NPCEngineException},System.Single,List{System.String},System.String)
      language: CSharp
      name:
        CSharp: StepDialogue(String, String, Boolean, Action<Tuple<String, Boolean>>, Action<NPCEngineException>, Single, List<String>, String)
        VB: StepDialogue(String, String, Boolean, Action(Of Tuple(Of String, Boolean)), Action(Of NPCEngineException), Single, List(Of String), String)
      nameWithType:
        CSharp: PersonaDialogue.StepDialogue(String, String, Boolean, Action<Tuple<String, Boolean>>, Action<NPCEngineException>, Single, List<String>, String)
        VB: PersonaDialogue.StepDialogue(String, String, Boolean, Action(Of Tuple(Of String, Boolean)), Action(Of NPCEngineException), Single, List(Of String), String)
      qualifiedName:
        CSharp: NPCEngine.API.PersonaDialogue.StepDialogue(System.String, System.String, System.Boolean, Action<Tuple<System.String, System.Boolean>>, Action<NPCEngine.NPCEngineException>, System.Single, List<System.String>, System.String)
        VB: NPCEngine.API.PersonaDialogue.StepDialogue(System.String, System.String, System.Boolean, Action(Of Tuple(Of System.String, System.Boolean)), Action(Of NPCEngine.NPCEngineException), System.Single, List(Of System.String), System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.API
      source:
        id: StepDialogue
        path: ''
        startLine: 759
      summary: "\nStep dialogue.\n\nIf utterance is null, it will be generated.\nIf scripted utterances are not null they will be compared to the utterance \nand replace it if similarity score is above scripted_threshold (score is in range [0,1]).\nIf update_history is true, the dialogue history will be updated with the utterance.\n"
      example: []
      syntax:
        content:
          CSharp: public IEnumerator StepDialogue(string dialogue_id, string speaker_id, bool update_history, Action<Tuple<string, bool>> outputCallback = null, Action<NPCEngineException> errorCallback = null, float scripted_threshold = 0.5F, List<string> scripted_utterances = null, string utterance = null)
          VB: Public Function StepDialogue(dialogue_id As String, speaker_id As String, update_history As Boolean, outputCallback As Action(Of Tuple(Of String, Boolean)) = Nothing, errorCallback As Action(Of NPCEngineException) = Nothing, scripted_threshold As Single = 0.5F, scripted_utterances As List(Of String) = Nothing, utterance As String = Nothing) As IEnumerator
        parameters:
        - id: dialogue_id
          type: System.String
          description: ''
        - id: speaker_id
          type: System.String
          description: ''
        - id: update_history
          type: System.Boolean
          description: ''
        - id: outputCallback
          type: Global.Action{Tuple{System.String,System.Boolean}}
          description: "Callback that accepts results: Tuple with utterance \nand bool flag that is True if scripted utterance was used"
        - id: errorCallback
          type: Global.Action{NPCEngine.NPCEngineException}
        - id: scripted_threshold
          type: System.Single
          description: ''
        - id: scripted_utterances
          type: Global.List{System.String}
          description: ''
        - id: utterance
          type: System.String
          description: ''
        return:
          type: System.Collections.IEnumerator
          description: ''
      overload: NPCEngine.API.PersonaDialogue.StepDialogue*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: NPCEngine.API.SemanticQuery
    commentId: T:NPCEngine.API.SemanticQuery
    language: CSharp
    name:
      CSharp: SemanticQuery
      VB: SemanticQuery
    nameWithType:
      CSharp: SemanticQuery
      VB: SemanticQuery
    qualifiedName:
      CSharp: NPCEngine.API.SemanticQuery
      VB: NPCEngine.API.SemanticQuery
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: NPCEngine.API
    source:
      id: SemanticQuery
      path: ''
      startLine: 799
    summary: "\nStatic class <code>SemanticQuery</code> provides remote procedure calls \nto inference engine&apos;s Semantic similarity model.\nPrefer predefining queries via <code>PredefineQuery</code> and then using\n<code>QueryPredefined</code> instead of directly using <code>Query</code>\n"
    example: []
    syntax:
      content:
        CSharp: 'public class SemanticQuery : RPCBase'
        VB: >-
          Public Class SemanticQuery

              Inherits RPCBase
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: NPCEngine.API.SemanticQuery.Cache(List{System.String},Action{NPCEngine.NPCEngineException})
      commentId: M:NPCEngine.API.SemanticQuery.Cache(List{System.String},Action{NPCEngine.NPCEngineException})
      language: CSharp
      name:
        CSharp: Cache(List<String>, Action<NPCEngineException>)
        VB: Cache(List(Of String), Action(Of NPCEngineException))
      nameWithType:
        CSharp: SemanticQuery.Cache(List<String>, Action<NPCEngineException>)
        VB: SemanticQuery.Cache(List(Of String), Action(Of NPCEngineException))
      qualifiedName:
        CSharp: NPCEngine.API.SemanticQuery.Cache(List<System.String>, Action<NPCEngine.NPCEngineException>)
        VB: NPCEngine.API.SemanticQuery.Cache(List(Of System.String), Action(Of NPCEngine.NPCEngineException))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.API
      source:
        id: Cache
        path: ''
        startLine: 817
      syntax:
        content:
          CSharp: public IEnumerable Cache(List<string> queryIds, Action<NPCEngineException> errorCallback = null)
          VB: Public Function Cache(queryIds As List(Of String), errorCallback As Action(Of NPCEngineException) = Nothing) As IEnumerable
        parameters:
        - id: queryIds
          type: Global.List{System.String}
        - id: errorCallback
          type: Global.Action{NPCEngine.NPCEngineException}
        return:
          type: System.Collections.IEnumerable
      overload: NPCEngine.API.SemanticQuery.Cache*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.API.SemanticQuery.Compare(System.String,List{System.String},Action{List{System.Single}},Action{NPCEngine.NPCEngineException})
      commentId: M:NPCEngine.API.SemanticQuery.Compare(System.String,List{System.String},Action{List{System.Single}},Action{NPCEngine.NPCEngineException})
      language: CSharp
      name:
        CSharp: Compare(String, List<String>, Action<List<Single>>, Action<NPCEngineException>)
        VB: Compare(String, List(Of String), Action(Of List(Of Single)), Action(Of NPCEngineException))
      nameWithType:
        CSharp: SemanticQuery.Compare(String, List<String>, Action<List<Single>>, Action<NPCEngineException>)
        VB: SemanticQuery.Compare(String, List(Of String), Action(Of List(Of Single)), Action(Of NPCEngineException))
      qualifiedName:
        CSharp: NPCEngine.API.SemanticQuery.Compare(System.String, List<System.String>, Action<List<System.Single>>, Action<NPCEngine.NPCEngineException>)
        VB: NPCEngine.API.SemanticQuery.Compare(System.String, List(Of System.String), Action(Of List(Of System.Single)), Action(Of NPCEngine.NPCEngineException))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.API
      source:
        id: Compare
        path: ''
        startLine: 823
      syntax:
        content:
          CSharp: public IEnumerator Compare(string query, List<string> context, Action<List<float>> outputCallback = null, Action<NPCEngineException> errorCallback = null)
          VB: Public Function Compare(query As String, context As List(Of String), outputCallback As Action(Of List(Of Single)) = Nothing, errorCallback As Action(Of NPCEngineException) = Nothing) As IEnumerator
        parameters:
        - id: query
          type: System.String
        - id: context
          type: Global.List{System.String}
        - id: outputCallback
          type: Global.Action{List{System.Single}}
        - id: errorCallback
          type: Global.Action{NPCEngine.NPCEngineException}
        return:
          type: System.Collections.IEnumerator
      overload: NPCEngine.API.SemanticQuery.Compare*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: NPCEngine.API.SpeechToText
    commentId: T:NPCEngine.API.SpeechToText
    language: CSharp
    name:
      CSharp: SpeechToText
      VB: SpeechToText
    nameWithType:
      CSharp: SpeechToText
      VB: SpeechToText
    qualifiedName:
      CSharp: NPCEngine.API.SpeechToText
      VB: NPCEngine.API.SpeechToText
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: NPCEngine.API
    source:
      id: SpeechToText
      path: ''
      startLine: 844
    summary: "\nStatic class <code>SpeechToText</code> provides remote procedure calls \nto inference engine&apos;s speech to text module.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class SpeechToText : RPCBase'
        VB: >-
          Public Class SpeechToText

              Inherits RPCBase
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: NPCEngine.API.SpeechToText.Listen(System.String,Action{System.String},Action{NPCEngine.NPCEngineException})
      commentId: M:NPCEngine.API.SpeechToText.Listen(System.String,Action{System.String},Action{NPCEngine.NPCEngineException})
      language: CSharp
      name:
        CSharp: Listen(String, Action<String>, Action<NPCEngineException>)
        VB: Listen(String, Action(Of String), Action(Of NPCEngineException))
      nameWithType:
        CSharp: SpeechToText.Listen(String, Action<String>, Action<NPCEngineException>)
        VB: SpeechToText.Listen(String, Action(Of String), Action(Of NPCEngineException))
      qualifiedName:
        CSharp: NPCEngine.API.SpeechToText.Listen(System.String, Action<System.String>, Action<NPCEngine.NPCEngineException>)
        VB: NPCEngine.API.SpeechToText.Listen(System.String, Action(Of System.String), Action(Of NPCEngine.NPCEngineException))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.API
      source:
        id: Listen
        path: ''
        startLine: 855
      syntax:
        content:
          CSharp: public IEnumerator Listen(string context, Action<string> outputCallback = null, Action<NPCEngineException> errorCallback = null)
          VB: Public Function Listen(context As String, outputCallback As Action(Of String) = Nothing, errorCallback As Action(Of NPCEngineException) = Nothing) As IEnumerator
        parameters:
        - id: context
          type: System.String
        - id: outputCallback
          type: Global.Action{System.String}
        - id: errorCallback
          type: Global.Action{NPCEngine.NPCEngineException}
        return:
          type: System.Collections.IEnumerator
      overload: NPCEngine.API.SpeechToText.Listen*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.API.SpeechToText.Transcribe(List{System.Single},Action{System.String},Action{NPCEngine.NPCEngineException})
      commentId: M:NPCEngine.API.SpeechToText.Transcribe(List{System.Single},Action{System.String},Action{NPCEngine.NPCEngineException})
      language: CSharp
      name:
        CSharp: Transcribe(List<Single>, Action<String>, Action<NPCEngineException>)
        VB: Transcribe(List(Of Single), Action(Of String), Action(Of NPCEngineException))
      nameWithType:
        CSharp: SpeechToText.Transcribe(List<Single>, Action<String>, Action<NPCEngineException>)
        VB: SpeechToText.Transcribe(List(Of Single), Action(Of String), Action(Of NPCEngineException))
      qualifiedName:
        CSharp: NPCEngine.API.SpeechToText.Transcribe(List<System.Single>, Action<System.String>, Action<NPCEngine.NPCEngineException>)
        VB: NPCEngine.API.SpeechToText.Transcribe(List(Of System.Single), Action(Of System.String), Action(Of NPCEngine.NPCEngineException))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.API
      source:
        id: Transcribe
        path: ''
        startLine: 860
      syntax:
        content:
          CSharp: public IEnumerator Transcribe(List<float> audio, Action<string> outputCallback = null, Action<NPCEngineException> errorCallback = null)
          VB: Public Function Transcribe(audio As List(Of Single), outputCallback As Action(Of String) = Nothing, errorCallback As Action(Of NPCEngineException) = Nothing) As IEnumerator
        parameters:
        - id: audio
          type: Global.List{System.Single}
        - id: outputCallback
          type: Global.Action{System.String}
        - id: errorCallback
          type: Global.Action{NPCEngine.NPCEngineException}
        return:
          type: System.Collections.IEnumerator
      overload: NPCEngine.API.SpeechToText.Transcribe*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.API.SpeechToText.GetDevices(Action{List{System.String}},Action{NPCEngine.NPCEngineException})
      commentId: M:NPCEngine.API.SpeechToText.GetDevices(Action{List{System.String}},Action{NPCEngine.NPCEngineException})
      language: CSharp
      name:
        CSharp: GetDevices(Action<List<String>>, Action<NPCEngineException>)
        VB: GetDevices(Action(Of List(Of String)), Action(Of NPCEngineException))
      nameWithType:
        CSharp: SpeechToText.GetDevices(Action<List<String>>, Action<NPCEngineException>)
        VB: SpeechToText.GetDevices(Action(Of List(Of String)), Action(Of NPCEngineException))
      qualifiedName:
        CSharp: NPCEngine.API.SpeechToText.GetDevices(Action<List<System.String>>, Action<NPCEngine.NPCEngineException>)
        VB: NPCEngine.API.SpeechToText.GetDevices(Action(Of List(Of System.String)), Action(Of NPCEngine.NPCEngineException))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.API
      source:
        id: GetDevices
        path: ''
        startLine: 865
      syntax:
        content:
          CSharp: public IEnumerator GetDevices(Action<List<string>> outputCallback = null, Action<NPCEngineException> errorCallback = null)
          VB: Public Function GetDevices(outputCallback As Action(Of List(Of String)) = Nothing, errorCallback As Action(Of NPCEngineException) = Nothing) As IEnumerator
        parameters:
        - id: outputCallback
          type: Global.Action{List{System.String}}
        - id: errorCallback
          type: Global.Action{NPCEngine.NPCEngineException}
        return:
          type: System.Collections.IEnumerator
      overload: NPCEngine.API.SpeechToText.GetDevices*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.API.SpeechToText.SetDevice(System.Int32,Action{List{System.String}},Action{NPCEngine.NPCEngineException})
      commentId: M:NPCEngine.API.SpeechToText.SetDevice(System.Int32,Action{List{System.String}},Action{NPCEngine.NPCEngineException})
      language: CSharp
      name:
        CSharp: SetDevice(Int32, Action<List<String>>, Action<NPCEngineException>)
        VB: SetDevice(Int32, Action(Of List(Of String)), Action(Of NPCEngineException))
      nameWithType:
        CSharp: SpeechToText.SetDevice(Int32, Action<List<String>>, Action<NPCEngineException>)
        VB: SpeechToText.SetDevice(Int32, Action(Of List(Of String)), Action(Of NPCEngineException))
      qualifiedName:
        CSharp: NPCEngine.API.SpeechToText.SetDevice(System.Int32, Action<List<System.String>>, Action<NPCEngine.NPCEngineException>)
        VB: NPCEngine.API.SpeechToText.SetDevice(System.Int32, Action(Of List(Of System.String)), Action(Of NPCEngine.NPCEngineException))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.API
      source:
        id: SetDevice
        path: ''
        startLine: 870
      syntax:
        content:
          CSharp: public IEnumerator SetDevice(int deviceId, Action<List<string>> outputCallback = null, Action<NPCEngineException> errorCallback = null)
          VB: Public Function SetDevice(deviceId As Integer, outputCallback As Action(Of List(Of String)) = Nothing, errorCallback As Action(Of NPCEngineException) = Nothing) As IEnumerator
        parameters:
        - id: deviceId
          type: System.Int32
        - id: outputCallback
          type: Global.Action{List{System.String}}
        - id: errorCallback
          type: Global.Action{NPCEngine.NPCEngineException}
        return:
          type: System.Collections.IEnumerator
      overload: NPCEngine.API.SpeechToText.SetDevice*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.API.SpeechToText.InitializeMicrophoneInput(Action{List{System.String}},Action{NPCEngine.NPCEngineException})
      commentId: M:NPCEngine.API.SpeechToText.InitializeMicrophoneInput(Action{List{System.String}},Action{NPCEngine.NPCEngineException})
      language: CSharp
      name:
        CSharp: InitializeMicrophoneInput(Action<List<String>>, Action<NPCEngineException>)
        VB: InitializeMicrophoneInput(Action(Of List(Of String)), Action(Of NPCEngineException))
      nameWithType:
        CSharp: SpeechToText.InitializeMicrophoneInput(Action<List<String>>, Action<NPCEngineException>)
        VB: SpeechToText.InitializeMicrophoneInput(Action(Of List(Of String)), Action(Of NPCEngineException))
      qualifiedName:
        CSharp: NPCEngine.API.SpeechToText.InitializeMicrophoneInput(Action<List<System.String>>, Action<NPCEngine.NPCEngineException>)
        VB: NPCEngine.API.SpeechToText.InitializeMicrophoneInput(Action(Of List(Of System.String)), Action(Of NPCEngine.NPCEngineException))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.API
      source:
        id: InitializeMicrophoneInput
        path: ''
        startLine: 875
      syntax:
        content:
          CSharp: public IEnumerator InitializeMicrophoneInput(Action<List<string>> outputCallback = null, Action<NPCEngineException> errorCallback = null)
          VB: Public Function InitializeMicrophoneInput(outputCallback As Action(Of List(Of String)) = Nothing, errorCallback As Action(Of NPCEngineException) = Nothing) As IEnumerator
        parameters:
        - id: outputCallback
          type: Global.Action{List{System.String}}
        - id: errorCallback
          type: Global.Action{NPCEngine.NPCEngineException}
        return:
          type: System.Collections.IEnumerator
      overload: NPCEngine.API.SpeechToText.InitializeMicrophoneInput*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: NPCEngine.API.TextGeneration`1
    commentId: T:NPCEngine.API.TextGeneration`1
    language: CSharp
    name:
      CSharp: TextGeneration<ContextType>
      VB: TextGeneration(Of ContextType)
    nameWithType:
      CSharp: TextGeneration<ContextType>
      VB: TextGeneration(Of ContextType)
    qualifiedName:
      CSharp: NPCEngine.API.TextGeneration<ContextType>
      VB: NPCEngine.API.TextGeneration(Of ContextType)
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: NPCEngine.API
    source:
      id: TextGeneration
      path: ''
      startLine: 895
    summary: "\n<code>Chatbot</code> provides remote procedure calls \nto inference engine&apos;s TextGeneration services.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class TextGeneration<ContextType> : RPCBase where ContextType : new()'
        VB: >-
          Public Class TextGeneration(Of ContextType As New)

              Inherits RPCBase
      typeParameters:
      - id: ContextType
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: NPCEngine.API.TextGeneration`1.GenerateReply(`0,System.Single,System.Int32,System.Int32,Action{System.String},Action{NPCEngine.NPCEngineException})
      commentId: M:NPCEngine.API.TextGeneration`1.GenerateReply(`0,System.Single,System.Int32,System.Int32,Action{System.String},Action{NPCEngine.NPCEngineException})
      language: CSharp
      name:
        CSharp: GenerateReply(ContextType, Single, Int32, Int32, Action<String>, Action<NPCEngineException>)
        VB: GenerateReply(ContextType, Single, Int32, Int32, Action(Of String), Action(Of NPCEngineException))
      nameWithType:
        CSharp: TextGeneration<ContextType>.GenerateReply(ContextType, Single, Int32, Int32, Action<String>, Action<NPCEngineException>)
        VB: TextGeneration(Of ContextType).GenerateReply(ContextType, Single, Int32, Int32, Action(Of String), Action(Of NPCEngineException))
      qualifiedName:
        CSharp: NPCEngine.API.TextGeneration<ContextType>.GenerateReply(ContextType, System.Single, System.Int32, System.Int32, Action<System.String>, Action<NPCEngine.NPCEngineException>)
        VB: NPCEngine.API.TextGeneration(Of ContextType).GenerateReply(ContextType, System.Single, System.Int32, System.Int32, Action(Of System.String), Action(Of NPCEngine.NPCEngineException))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.API
      source:
        id: GenerateReply
        path: ''
        startLine: 918
      syntax:
        content:
          CSharp: public IEnumerator GenerateReply(ContextType context, float temperature = 0.8F, int topk = 5, int numSampled = 3, Action<string> outputCallback = null, Action<NPCEngineException> errorCallback = null)
          VB: Public Function GenerateReply(context As ContextType, temperature As Single = 0.8F, topk As Integer = 5, numSampled As Integer = 3, outputCallback As Action(Of String) = Nothing, errorCallback As Action(Of NPCEngineException) = Nothing) As IEnumerator
        parameters:
        - id: context
          type: '{ContextType}'
        - id: temperature
          type: System.Single
        - id: topk
          type: System.Int32
        - id: numSampled
          type: System.Int32
        - id: outputCallback
          type: Global.Action{System.String}
        - id: errorCallback
          type: Global.Action{NPCEngine.NPCEngineException}
        return:
          type: System.Collections.IEnumerator
      overload: NPCEngine.API.TextGeneration`1.GenerateReply*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.API.TextGeneration`1.GetSpecialTokens(Action{Dictionary{System.String,System.String}},Action{NPCEngine.NPCEngineException})
      commentId: M:NPCEngine.API.TextGeneration`1.GetSpecialTokens(Action{Dictionary{System.String,System.String}},Action{NPCEngine.NPCEngineException})
      language: CSharp
      name:
        CSharp: GetSpecialTokens(Action<Dictionary<String, String>>, Action<NPCEngineException>)
        VB: GetSpecialTokens(Action(Of Dictionary(Of String, String)), Action(Of NPCEngineException))
      nameWithType:
        CSharp: TextGeneration<ContextType>.GetSpecialTokens(Action<Dictionary<String, String>>, Action<NPCEngineException>)
        VB: TextGeneration(Of ContextType).GetSpecialTokens(Action(Of Dictionary(Of String, String)), Action(Of NPCEngineException))
      qualifiedName:
        CSharp: NPCEngine.API.TextGeneration<ContextType>.GetSpecialTokens(Action<Dictionary<System.String, System.String>>, Action<NPCEngine.NPCEngineException>)
        VB: NPCEngine.API.TextGeneration(Of ContextType).GetSpecialTokens(Action(Of Dictionary(Of System.String, System.String)), Action(Of NPCEngine.NPCEngineException))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.API
      source:
        id: GetSpecialTokens
        path: ''
        startLine: 938
      syntax:
        content:
          CSharp: public IEnumerator GetSpecialTokens(Action<Dictionary<string, string>> outputCallback = null, Action<NPCEngineException> errorCallback = null)
          VB: Public Function GetSpecialTokens(outputCallback As Action(Of Dictionary(Of String, String)) = Nothing, errorCallback As Action(Of NPCEngineException) = Nothing) As IEnumerator
        parameters:
        - id: outputCallback
          type: Global.Action{Dictionary{System.String,System.String}}
        - id: errorCallback
          type: Global.Action{NPCEngine.NPCEngineException}
        return:
          type: System.Collections.IEnumerator
      overload: NPCEngine.API.TextGeneration`1.GetSpecialTokens*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.API.TextGeneration`1.GetPromptTemplate(Action{System.String},Action{NPCEngine.NPCEngineException})
      commentId: M:NPCEngine.API.TextGeneration`1.GetPromptTemplate(Action{System.String},Action{NPCEngine.NPCEngineException})
      language: CSharp
      name:
        CSharp: GetPromptTemplate(Action<String>, Action<NPCEngineException>)
        VB: GetPromptTemplate(Action(Of String), Action(Of NPCEngineException))
      nameWithType:
        CSharp: TextGeneration<ContextType>.GetPromptTemplate(Action<String>, Action<NPCEngineException>)
        VB: TextGeneration(Of ContextType).GetPromptTemplate(Action(Of String), Action(Of NPCEngineException))
      qualifiedName:
        CSharp: NPCEngine.API.TextGeneration<ContextType>.GetPromptTemplate(Action<System.String>, Action<NPCEngine.NPCEngineException>)
        VB: NPCEngine.API.TextGeneration(Of ContextType).GetPromptTemplate(Action(Of System.String), Action(Of NPCEngine.NPCEngineException))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.API
      source:
        id: GetPromptTemplate
        path: ''
        startLine: 944
      syntax:
        content:
          CSharp: public IEnumerator GetPromptTemplate(Action<string> outputCallback = null, Action<NPCEngineException> errorCallback = null)
          VB: Public Function GetPromptTemplate(outputCallback As Action(Of String) = Nothing, errorCallback As Action(Of NPCEngineException) = Nothing) As IEnumerator
        parameters:
        - id: outputCallback
          type: Global.Action{System.String}
        - id: errorCallback
          type: Global.Action{NPCEngine.NPCEngineException}
        return:
          type: System.Collections.IEnumerator
      overload: NPCEngine.API.TextGeneration`1.GetPromptTemplate*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: NPCEngine.API.TextToSpeech
    commentId: T:NPCEngine.API.TextToSpeech
    language: CSharp
    name:
      CSharp: TextToSpeech
      VB: TextToSpeech
    nameWithType:
      CSharp: TextToSpeech
      VB: TextToSpeech
    qualifiedName:
      CSharp: NPCEngine.API.TextToSpeech
      VB: NPCEngine.API.TextToSpeech
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: NPCEngine.API
    source:
      id: TextToSpeech
      path: ''
      startLine: 963
    summary: "\nStatic class <code>TextToSpeech</code> provides remote procedure calls \nto inference engine&apos;s text to speech module.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class TextToSpeech : RPCBase'
        VB: >-
          Public Class TextToSpeech

              Inherits RPCBase
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: NPCEngine.API.TextToSpeech.StartTTS(System.String,System.String,System.Int32,Action,Action{NPCEngine.NPCEngineException})
      commentId: M:NPCEngine.API.TextToSpeech.StartTTS(System.String,System.String,System.Int32,Action,Action{NPCEngine.NPCEngineException})
      language: CSharp
      name:
        CSharp: StartTTS(String, String, Int32, Action, Action<NPCEngineException>)
        VB: StartTTS(String, String, Int32, Action, Action(Of NPCEngineException))
      nameWithType:
        CSharp: TextToSpeech.StartTTS(String, String, Int32, Action, Action<NPCEngineException>)
        VB: TextToSpeech.StartTTS(String, String, Int32, Action, Action(Of NPCEngineException))
      qualifiedName:
        CSharp: NPCEngine.API.TextToSpeech.StartTTS(System.String, System.String, System.Int32, Action, Action<NPCEngine.NPCEngineException>)
        VB: NPCEngine.API.TextToSpeech.StartTTS(System.String, System.String, System.Int32, Action, Action(Of NPCEngine.NPCEngineException))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.API
      source:
        id: StartTTS
        path: ''
        startLine: 982
      syntax:
        content:
          CSharp: public IEnumerator StartTTS(string voiceId, string line, int n_chunks, Action outputCallback, Action<NPCEngineException> errorCallback = null)
          VB: Public Function StartTTS(voiceId As String, line As String, n_chunks As Integer, outputCallback As Action, errorCallback As Action(Of NPCEngineException) = Nothing) As IEnumerator
        parameters:
        - id: voiceId
          type: System.String
        - id: line
          type: System.String
        - id: n_chunks
          type: System.Int32
        - id: outputCallback
          type: Global.Action
        - id: errorCallback
          type: Global.Action{NPCEngine.NPCEngineException}
        return:
          type: System.Collections.IEnumerator
      overload: NPCEngine.API.TextToSpeech.StartTTS*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.API.TextToSpeech.GetNextResult(Action{List{System.Single}},Action{NPCEngine.NPCEngineException})
      commentId: M:NPCEngine.API.TextToSpeech.GetNextResult(Action{List{System.Single}},Action{NPCEngine.NPCEngineException})
      language: CSharp
      name:
        CSharp: GetNextResult(Action<List<Single>>, Action<NPCEngineException>)
        VB: GetNextResult(Action(Of List(Of Single)), Action(Of NPCEngineException))
      nameWithType:
        CSharp: TextToSpeech.GetNextResult(Action<List<Single>>, Action<NPCEngineException>)
        VB: TextToSpeech.GetNextResult(Action(Of List(Of Single)), Action(Of NPCEngineException))
      qualifiedName:
        CSharp: NPCEngine.API.TextToSpeech.GetNextResult(Action<List<System.Single>>, Action<NPCEngine.NPCEngineException>)
        VB: NPCEngine.API.TextToSpeech.GetNextResult(Action(Of List(Of System.Single)), Action(Of NPCEngine.NPCEngineException))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.API
      source:
        id: GetNextResult
        path: ''
        startLine: 988
      syntax:
        content:
          CSharp: public IEnumerator GetNextResult(Action<List<float>> outputCallback = null, Action<NPCEngineException> errorCallback = null)
          VB: Public Function GetNextResult(outputCallback As Action(Of List(Of Single)) = Nothing, errorCallback As Action(Of NPCEngineException) = Nothing) As IEnumerator
        parameters:
        - id: outputCallback
          type: Global.Action{List{System.Single}}
        - id: errorCallback
          type: Global.Action{NPCEngine.NPCEngineException}
        return:
          type: System.Collections.IEnumerator
      overload: NPCEngine.API.TextToSpeech.GetNextResult*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.API.TextToSpeech.GetSpeakerIds(Action{List{System.String}},Action{NPCEngine.NPCEngineException})
      commentId: M:NPCEngine.API.TextToSpeech.GetSpeakerIds(Action{List{System.String}},Action{NPCEngine.NPCEngineException})
      language: CSharp
      name:
        CSharp: GetSpeakerIds(Action<List<String>>, Action<NPCEngineException>)
        VB: GetSpeakerIds(Action(Of List(Of String)), Action(Of NPCEngineException))
      nameWithType:
        CSharp: TextToSpeech.GetSpeakerIds(Action<List<String>>, Action<NPCEngineException>)
        VB: TextToSpeech.GetSpeakerIds(Action(Of List(Of String)), Action(Of NPCEngineException))
      qualifiedName:
        CSharp: NPCEngine.API.TextToSpeech.GetSpeakerIds(Action<List<System.String>>, Action<NPCEngine.NPCEngineException>)
        VB: NPCEngine.API.TextToSpeech.GetSpeakerIds(Action(Of List(Of System.String)), Action(Of NPCEngine.NPCEngineException))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.API
      source:
        id: GetSpeakerIds
        path: ''
        startLine: 993
      syntax:
        content:
          CSharp: public IEnumerator GetSpeakerIds(Action<List<string>> outputCallback = null, Action<NPCEngineException> errorCallback = null)
          VB: Public Function GetSpeakerIds(outputCallback As Action(Of List(Of String)) = Nothing, errorCallback As Action(Of NPCEngineException) = Nothing) As IEnumerator
        parameters:
        - id: outputCallback
          type: Global.Action{List{System.String}}
        - id: errorCallback
          type: Global.Action{NPCEngine.NPCEngineException}
        return:
          type: System.Collections.IEnumerator
      overload: NPCEngine.API.TextToSpeech.GetSpeakerIds*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: NPCEngine.Components
  commentId: N:NPCEngine.Components
  language: CSharp
  name:
    CSharp: NPCEngine.Components
    VB: NPCEngine.Components
  nameWithType:
    CSharp: NPCEngine.Components
    VB: NPCEngine.Components
  qualifiedName:
    CSharp: NPCEngine.Components
    VB: NPCEngine.Components
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: NPCEngine.Components.AbstractDialogueSystem
    commentId: T:NPCEngine.Components.AbstractDialogueSystem
    language: CSharp
    name:
      CSharp: AbstractDialogueSystem
      VB: AbstractDialogueSystem
    nameWithType:
      CSharp: AbstractDialogueSystem
      VB: AbstractDialogueSystem
    qualifiedName:
      CSharp: NPCEngine.Components.AbstractDialogueSystem
      VB: NPCEngine.Components.AbstractDialogueSystem
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: NPCEngine.Components
    source:
      id: AbstractDialogueSystem
      path: ''
      startLine: 1010
    summary: "\nAbstract class for dialogue system integration. \nConcrete implementations are used by NonPlayerCharacter component for scripted replies. \n"
    example: []
    syntax:
      content:
        CSharp: 'public abstract class AbstractDialogueSystem : MonoBehaviour'
        VB: >-
          Public MustInherit Class AbstractDialogueSystem

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - abstract
      - class
      VB:
      - Public
      - MustInherit
      - Class
    items:
    - id: NPCEngine.Components.AbstractDialogueSystem.StartDialogue
      commentId: M:NPCEngine.Components.AbstractDialogueSystem.StartDialogue
      language: CSharp
      name:
        CSharp: StartDialogue()
        VB: StartDialogue()
      nameWithType:
        CSharp: AbstractDialogueSystem.StartDialogue()
        VB: AbstractDialogueSystem.StartDialogue()
      qualifiedName:
        CSharp: NPCEngine.Components.AbstractDialogueSystem.StartDialogue()
        VB: NPCEngine.Components.AbstractDialogueSystem.StartDialogue()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Components
      source:
        id: StartDialogue
        path: ''
        startLine: 1016
      summary: "\nWill be called when dialogue starts.\n"
      example: []
      syntax:
        content:
          CSharp: public abstract void StartDialogue()
          VB: Public MustOverride Sub StartDialogue
      overload: NPCEngine.Components.AbstractDialogueSystem.StartDialogue*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: NPCEngine.Components.AbstractDialogueSystem.EndDialogue
      commentId: M:NPCEngine.Components.AbstractDialogueSystem.EndDialogue
      language: CSharp
      name:
        CSharp: EndDialogue()
        VB: EndDialogue()
      nameWithType:
        CSharp: AbstractDialogueSystem.EndDialogue()
        VB: AbstractDialogueSystem.EndDialogue()
      qualifiedName:
        CSharp: NPCEngine.Components.AbstractDialogueSystem.EndDialogue()
        VB: NPCEngine.Components.AbstractDialogueSystem.EndDialogue()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Components
      source:
        id: EndDialogue
        path: ''
        startLine: 1021
      summary: "\nWill be called when dialogue ends.\n"
      example: []
      syntax:
        content:
          CSharp: public abstract void EndDialogue()
          VB: Public MustOverride Sub
      overload: NPCEngine.Components.AbstractDialogueSystem.EndDialogue*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: NPCEngine.Components.AbstractDialogueSystem.CurrentNodeIsPlayer
      commentId: M:NPCEngine.Components.AbstractDialogueSystem.CurrentNodeIsPlayer
      language: CSharp
      name:
        CSharp: CurrentNodeIsPlayer()
        VB: CurrentNodeIsPlayer()
      nameWithType:
        CSharp: AbstractDialogueSystem.CurrentNodeIsPlayer()
        VB: AbstractDialogueSystem.CurrentNodeIsPlayer()
      qualifiedName:
        CSharp: NPCEngine.Components.AbstractDialogueSystem.CurrentNodeIsPlayer()
        VB: NPCEngine.Components.AbstractDialogueSystem.CurrentNodeIsPlayer()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Components
      source:
        id: CurrentNodeIsPlayer
        path: ''
        startLine: 1026
      summary: "\nReturns true if it&apos;s players turn in the dialogue.\n"
      example: []
      syntax:
        content:
          CSharp: public abstract bool CurrentNodeIsPlayer()
          VB: Public MustOverride Function CurrentNodeIsPlayer As Boolean
        return:
          type: System.Boolean
      overload: NPCEngine.Components.AbstractDialogueSystem.CurrentNodeIsPlayer*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: NPCEngine.Components.AbstractDialogueSystem.GetCurrentNodeOptions
      commentId: M:NPCEngine.Components.AbstractDialogueSystem.GetCurrentNodeOptions
      language: CSharp
      name:
        CSharp: GetCurrentNodeOptions()
        VB: GetCurrentNodeOptions()
      nameWithType:
        CSharp: AbstractDialogueSystem.GetCurrentNodeOptions()
        VB: AbstractDialogueSystem.GetCurrentNodeOptions()
      qualifiedName:
        CSharp: NPCEngine.Components.AbstractDialogueSystem.GetCurrentNodeOptions()
        VB: NPCEngine.Components.AbstractDialogueSystem.GetCurrentNodeOptions()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Components
      source:
        id: GetCurrentNodeOptions
        path: ''
        startLine: 1031
      summary: "\nGet the lines associated with the current node in the dialogue.\n"
      example: []
      syntax:
        content:
          CSharp: public abstract List<string> GetCurrentNodeOptions()
          VB: Public MustOverride Function GetCurrentNodeOptions As List(Of String)
        return:
          type: Global.List{System.String}
      overload: NPCEngine.Components.AbstractDialogueSystem.GetCurrentNodeOptions*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: NPCEngine.Components.AbstractDialogueSystem.GetCurrentNodeTopics
      commentId: M:NPCEngine.Components.AbstractDialogueSystem.GetCurrentNodeTopics
      language: CSharp
      name:
        CSharp: GetCurrentNodeTopics()
        VB: GetCurrentNodeTopics()
      nameWithType:
        CSharp: AbstractDialogueSystem.GetCurrentNodeTopics()
        VB: AbstractDialogueSystem.GetCurrentNodeTopics()
      qualifiedName:
        CSharp: NPCEngine.Components.AbstractDialogueSystem.GetCurrentNodeTopics()
        VB: NPCEngine.Components.AbstractDialogueSystem.GetCurrentNodeTopics()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Components
      source:
        id: GetCurrentNodeTopics
        path: ''
        startLine: 1036
      summary: "\nGet the short abstract descriptions of the lines associated with the current node in the dialogue.\n"
      example: []
      syntax:
        content:
          CSharp: public abstract List<string> GetCurrentNodeTopics()
          VB: Public MustOverride Function GetCurrentNodeTopics As List(Of String)
        return:
          type: Global.List{System.String}
      overload: NPCEngine.Components.AbstractDialogueSystem.GetCurrentNodeTopics*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: NPCEngine.Components.AbstractDialogueSystem.SelectOption(System.Int32)
      commentId: M:NPCEngine.Components.AbstractDialogueSystem.SelectOption(System.Int32)
      language: CSharp
      name:
        CSharp: SelectOption(Int32)
        VB: SelectOption(Int32)
      nameWithType:
        CSharp: AbstractDialogueSystem.SelectOption(Int32)
        VB: AbstractDialogueSystem.SelectOption(Int32)
      qualifiedName:
        CSharp: NPCEngine.Components.AbstractDialogueSystem.SelectOption(System.Int32)
        VB: NPCEngine.Components.AbstractDialogueSystem.SelectOption(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Components
      source:
        id: SelectOption
        path: ''
        startLine: 1041
      summary: "\nSelect a line from the current node in the dialogue.\n"
      example: []
      syntax:
        content:
          CSharp: public abstract void SelectOption(int optionId)
          VB: Public MustOverride Sub SelectOption(optionId As Integer)
        parameters:
        - id: optionId
          type: System.Int32
      overload: NPCEngine.Components.AbstractDialogueSystem.SelectOption*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: NPCEngine.Components.AbstractDialogueSystem.Next
      commentId: M:NPCEngine.Components.AbstractDialogueSystem.Next
      language: CSharp
      name:
        CSharp: Next()
        VB: Next()
      nameWithType:
        CSharp: AbstractDialogueSystem.Next()
        VB: AbstractDialogueSystem.Next()
      qualifiedName:
        CSharp: NPCEngine.Components.AbstractDialogueSystem.Next()
        VB: NPCEngine.Components.AbstractDialogueSystem.Next()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Components
      source:
        id: Next
        path: ''
        startLine: 1046
      summary: "\nMove to the next node in the dialogue.\n"
      example: []
      syntax:
        content:
          CSharp: public abstract void Next()
          VB: Public MustOverride Sub Next
      overload: NPCEngine.Components.AbstractDialogueSystem.Next*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: NPCEngine.Components.AbstractDialogueSystem.CurrentNodeThreshold
      commentId: M:NPCEngine.Components.AbstractDialogueSystem.CurrentNodeThreshold
      language: CSharp
      name:
        CSharp: CurrentNodeThreshold()
        VB: CurrentNodeThreshold()
      nameWithType:
        CSharp: AbstractDialogueSystem.CurrentNodeThreshold()
        VB: AbstractDialogueSystem.CurrentNodeThreshold()
      qualifiedName:
        CSharp: NPCEngine.Components.AbstractDialogueSystem.CurrentNodeThreshold()
        VB: NPCEngine.Components.AbstractDialogueSystem.CurrentNodeThreshold()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Components
      source:
        id: CurrentNodeThreshold
        path: ''
        startLine: 1052
      summary: "\nGet the semantic similarity threshold for the current node in the dialogue.\nReturn -1 if no threshold is set.\n"
      example: []
      syntax:
        content:
          CSharp: public abstract float CurrentNodeThreshold()
          VB: Public MustOverride Function CurrentNodeThreshold As Single
        return:
          type: System.Single
      overload: NPCEngine.Components.AbstractDialogueSystem.CurrentNodeThreshold*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: NPCEngine.Components.AbstractDialogueSystem.CurrentNodeNPCLine
      commentId: M:NPCEngine.Components.AbstractDialogueSystem.CurrentNodeNPCLine
      language: CSharp
      name:
        CSharp: CurrentNodeNPCLine()
        VB: CurrentNodeNPCLine()
      nameWithType:
        CSharp: AbstractDialogueSystem.CurrentNodeNPCLine()
        VB: AbstractDialogueSystem.CurrentNodeNPCLine()
      qualifiedName:
        CSharp: NPCEngine.Components.AbstractDialogueSystem.CurrentNodeNPCLine()
        VB: NPCEngine.Components.AbstractDialogueSystem.CurrentNodeNPCLine()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Components
      source:
        id: CurrentNodeNPCLine
        path: ''
        startLine: 1058
      summary: "\nIf the current node is NPC, return the NPC&apos;s line.\nelse return empty string.\n"
      example: []
      syntax:
        content:
          CSharp: public abstract string CurrentNodeNPCLine()
          VB: Public MustOverride Function CurrentNodeNPCLine As String
        return:
          type: System.String
      overload: NPCEngine.Components.AbstractDialogueSystem.CurrentNodeNPCLine*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: NPCEngine.Components.AbstractDialogueSystem.CurrentNodeNPCAudio
      commentId: M:NPCEngine.Components.AbstractDialogueSystem.CurrentNodeNPCAudio
      language: CSharp
      name:
        CSharp: CurrentNodeNPCAudio()
        VB: CurrentNodeNPCAudio()
      nameWithType:
        CSharp: AbstractDialogueSystem.CurrentNodeNPCAudio()
        VB: AbstractDialogueSystem.CurrentNodeNPCAudio()
      qualifiedName:
        CSharp: NPCEngine.Components.AbstractDialogueSystem.CurrentNodeNPCAudio()
        VB: NPCEngine.Components.AbstractDialogueSystem.CurrentNodeNPCAudio()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Components
      source:
        id: CurrentNodeNPCAudio
        path: ''
        startLine: 1064
      summary: "\nGet the current node&apos;s audio for the NPC line (Never called for player).\nReturn null if no audio is set or if the node is player.\n"
      example: []
      syntax:
        content:
          CSharp: public abstract AudioClip CurrentNodeNPCAudio()
          VB: Public MustOverride Function CurrentNodeNPCAudio As AudioClip
        return:
          type: Global.AudioClip
      overload: NPCEngine.Components.AbstractDialogueSystem.CurrentNodeNPCAudio*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: NPCEngine.Components.AbstractDialogueSystem.IsEnd
      commentId: M:NPCEngine.Components.AbstractDialogueSystem.IsEnd
      language: CSharp
      name:
        CSharp: IsEnd()
        VB: IsEnd()
      nameWithType:
        CSharp: AbstractDialogueSystem.IsEnd()
        VB: AbstractDialogueSystem.IsEnd()
      qualifiedName:
        CSharp: NPCEngine.Components.AbstractDialogueSystem.IsEnd()
        VB: NPCEngine.Components.AbstractDialogueSystem.IsEnd()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Components
      source:
        id: IsEnd
        path: ''
        startLine: 1066
      syntax:
        content:
          CSharp: public abstract bool IsEnd()
          VB: Public MustOverride Function IsEnd As Boolean
        return:
          type: System.Boolean
      overload: NPCEngine.Components.AbstractDialogueSystem.IsEnd*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
  - id: NPCEngine.Components.AbstractSpeechToText
    commentId: T:NPCEngine.Components.AbstractSpeechToText
    language: CSharp
    name:
      CSharp: AbstractSpeechToText
      VB: AbstractSpeechToText
    nameWithType:
      CSharp: AbstractSpeechToText
      VB: AbstractSpeechToText
    qualifiedName:
      CSharp: NPCEngine.Components.AbstractSpeechToText
      VB: NPCEngine.Components.AbstractSpeechToText
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: NPCEngine.Components
    source:
      id: AbstractSpeechToText
      path: ''
      startLine: 1083
    summary: "\nAbstract class for speech to text system.\nConcrete implementations are used by PlayerCharacter \ncomponent for receiving speech.\n"
    example: []
    syntax:
      content:
        CSharp: 'public abstract class AbstractSpeechToText : MonoBehaviour'
        VB: >-
          Public MustInherit Class AbstractSpeechToText

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - abstract
      - class
      VB:
      - Public
      - MustInherit
      - Class
    items:
    - id: NPCEngine.Components.AbstractSpeechToText.Context
      commentId: P:NPCEngine.Components.AbstractSpeechToText.Context
      language: CSharp
      name:
        CSharp: Context
        VB: Context
      nameWithType:
        CSharp: AbstractSpeechToText.Context
        VB: AbstractSpeechToText.Context
      qualifiedName:
        CSharp: NPCEngine.Components.AbstractSpeechToText.Context
        VB: NPCEngine.Components.AbstractSpeechToText.Context
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Components
      source:
        id: Context
        path: ''
        startLine: 1089
      summary: "\nConsumed context to be used in the next STT request\n"
      example: []
      syntax:
        content:
          CSharp: public string Context { protected get; set; }
          VB: Public Property Context As String
        parameters: []
        return:
          type: System.String
      overload: NPCEngine.Components.AbstractSpeechToText.Context*
      modifiers:
        CSharp:
        - public
        - protected get
        - set
        VB:
        - Public
        - Protected Get
        - Set
    - id: NPCEngine.Components.AbstractSpeechToText.StartListening
      commentId: M:NPCEngine.Components.AbstractSpeechToText.StartListening
      language: CSharp
      name:
        CSharp: StartListening()
        VB: StartListening()
      nameWithType:
        CSharp: AbstractSpeechToText.StartListening()
        VB: AbstractSpeechToText.StartListening()
      qualifiedName:
        CSharp: NPCEngine.Components.AbstractSpeechToText.StartListening()
        VB: NPCEngine.Components.AbstractSpeechToText.StartListening()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Components
      source:
        id: StartListening
        path: ''
        startLine: 1106
      summary: "\nCalled when system must start listening for speech.\n"
      example: []
      syntax:
        content:
          CSharp: public abstract void StartListening()
          VB: Public MustOverride Sub StartListening
      overload: NPCEngine.Components.AbstractSpeechToText.StartListening*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: NPCEngine.Components.AbstractSpeechToText.StopListening
      commentId: M:NPCEngine.Components.AbstractSpeechToText.StopListening
      language: CSharp
      name:
        CSharp: StopListening()
        VB: StopListening()
      nameWithType:
        CSharp: AbstractSpeechToText.StopListening()
        VB: AbstractSpeechToText.StopListening()
      qualifiedName:
        CSharp: NPCEngine.Components.AbstractSpeechToText.StopListening()
        VB: NPCEngine.Components.AbstractSpeechToText.StopListening()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Components
      source:
        id: StopListening
        path: ''
        startLine: 1111
      summary: "\nCalled when system should stop listening for speech.\n"
      example: []
      syntax:
        content:
          CSharp: public abstract void StopListening()
          VB: Public MustOverride Sub StopListening
      overload: NPCEngine.Components.AbstractSpeechToText.StopListening*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: NPCEngine.Components.AbstractSpeechToText.OnSpeechRecognized
      commentId: E:NPCEngine.Components.AbstractSpeechToText.OnSpeechRecognized
      language: CSharp
      name:
        CSharp: OnSpeechRecognized
        VB: OnSpeechRecognized
      nameWithType:
        CSharp: AbstractSpeechToText.OnSpeechRecognized
        VB: AbstractSpeechToText.OnSpeechRecognized
      qualifiedName:
        CSharp: NPCEngine.Components.AbstractSpeechToText.OnSpeechRecognized
        VB: NPCEngine.Components.AbstractSpeechToText.OnSpeechRecognized
      type: Event
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Components
      source:
        id: OnSpeechRecognized
        path: ''
        startLine: 1116
      summary: "\nPlayerCharacter subscribes to this event to get the Speech-to-Text result\n"
      example: []
      syntax:
        content:
          CSharp: public event Action<string> OnSpeechRecognized
          VB: Public Event OnSpeechRecognized As Action(Of String)
        return:
          type: Global.Action{System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.Components.AbstractSpeechToText.OnSpeechRecognitionFailed
      commentId: E:NPCEngine.Components.AbstractSpeechToText.OnSpeechRecognitionFailed
      language: CSharp
      name:
        CSharp: OnSpeechRecognitionFailed
        VB: OnSpeechRecognitionFailed
      nameWithType:
        CSharp: AbstractSpeechToText.OnSpeechRecognitionFailed
        VB: AbstractSpeechToText.OnSpeechRecognitionFailed
      qualifiedName:
        CSharp: NPCEngine.Components.AbstractSpeechToText.OnSpeechRecognitionFailed
        VB: NPCEngine.Components.AbstractSpeechToText.OnSpeechRecognitionFailed
      type: Event
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Components
      source:
        id: OnSpeechRecognitionFailed
        path: ''
        startLine: 1120
      summary: "\nCan be used to handle speech recogintion errors\n"
      example: []
      syntax:
        content:
          CSharp: public event Action<string> OnSpeechRecognitionFailed
          VB: Public Event OnSpeechRecognitionFailed As Action(Of String)
        return:
          type: Global.Action{System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.Components.AbstractSpeechToText.SpeechRecognized(System.String)
      commentId: M:NPCEngine.Components.AbstractSpeechToText.SpeechRecognized(System.String)
      language: CSharp
      name:
        CSharp: SpeechRecognized(String)
        VB: SpeechRecognized(String)
      nameWithType:
        CSharp: AbstractSpeechToText.SpeechRecognized(String)
        VB: AbstractSpeechToText.SpeechRecognized(String)
      qualifiedName:
        CSharp: NPCEngine.Components.AbstractSpeechToText.SpeechRecognized(System.String)
        VB: NPCEngine.Components.AbstractSpeechToText.SpeechRecognized(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Components
      source:
        id: SpeechRecognized
        path: ''
        startLine: 1123
      syntax:
        content:
          CSharp: protected void SpeechRecognized(string result)
          VB: Protected Sub SpeechRecognized(result As String)
        parameters:
        - id: result
          type: System.String
      overload: NPCEngine.Components.AbstractSpeechToText.SpeechRecognized*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
  - id: NPCEngine.Components.Character
    commentId: T:NPCEngine.Components.Character
    language: CSharp
    name:
      CSharp: Character
      VB: Character
    nameWithType:
      CSharp: Character
      VB: Character
    qualifiedName:
      CSharp: NPCEngine.Components.Character
      VB: NPCEngine.Components.Character
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: NPCEngine.Components
    source:
      id: Character
      path: ''
      startLine: 1139
    summary: "\nCharacter natural language descriptions.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class Character : ScriptableObject'
        VB: >-
          Public Class Character

              Inherits ScriptableObject
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: NPCEngine.Components.Character.Name
      commentId: F:NPCEngine.Components.Character.Name
      language: CSharp
      name:
        CSharp: Name
        VB: Name
      nameWithType:
        CSharp: Character.Name
        VB: Character.Name
      qualifiedName:
        CSharp: NPCEngine.Components.Character.Name
        VB: NPCEngine.Components.Character.Name
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Components
      source:
        id: Name
        path: ''
        startLine: 1142
      syntax:
        content:
          CSharp: public string Name
          VB: Public Name As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.Components.Character.Persona
      commentId: F:NPCEngine.Components.Character.Persona
      language: CSharp
      name:
        CSharp: Persona
        VB: Persona
      nameWithType:
        CSharp: Character.Persona
        VB: Character.Persona
      qualifiedName:
        CSharp: NPCEngine.Components.Character.Persona
        VB: NPCEngine.Components.Character.Persona
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Components
      source:
        id: Persona
        path: ''
        startLine: 1148
      summary: "\nCharacter&apos;s persona natural language description.\n"
      example: []
      syntax:
        content:
          CSharp: public string Persona
          VB: Public Persona As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.Components.Character.temperature
      commentId: F:NPCEngine.Components.Character.temperature
      language: CSharp
      name:
        CSharp: temperature
        VB: temperature
      nameWithType:
        CSharp: Character.temperature
        VB: Character.temperature
      qualifiedName:
        CSharp: NPCEngine.Components.Character.temperature
        VB: NPCEngine.Components.Character.temperature
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Components
      source:
        id: temperature
        path: ''
        startLine: 1155
      summary: "\nSampling parameter for the character&apos;s text generation. Higher temperature means more variation in the generated text.\n"
      example: []
      syntax:
        content:
          CSharp: public float temperature
          VB: Public temperature As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.Components.Character.topK
      commentId: F:NPCEngine.Components.Character.topK
      language: CSharp
      name:
        CSharp: topK
        VB: topK
      nameWithType:
        CSharp: Character.topK
        VB: Character.topK
      qualifiedName:
        CSharp: NPCEngine.Components.Character.topK
        VB: NPCEngine.Components.Character.topK
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Components
      source:
        id: topK
        path: ''
        startLine: 1162
      summary: "\nSampling parameter for the character&apos;s text generation. TopK is the number of top tokens to be sampled from.\n"
      example: []
      syntax:
        content:
          CSharp: public int topK
          VB: Public topK As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.Components.Character.numSampled
      commentId: F:NPCEngine.Components.Character.numSampled
      language: CSharp
      name:
        CSharp: numSampled
        VB: numSampled
      nameWithType:
        CSharp: Character.numSampled
        VB: Character.numSampled
      qualifiedName:
        CSharp: NPCEngine.Components.Character.numSampled
        VB: NPCEngine.Components.Character.numSampled
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Components
      source:
        id: numSampled
        path: ''
        startLine: 1168
      summary: "\nSampling parameter for the character&apos;s text generation. Number of sentences generated and selected from.\n"
      example: []
      syntax:
        content:
          CSharp: public int numSampled
          VB: Public numSampled As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: NPCEngine.Components.ColliderLocationTrigger
    commentId: T:NPCEngine.Components.ColliderLocationTrigger
    language: CSharp
    name:
      CSharp: ColliderLocationTrigger
      VB: ColliderLocationTrigger
    nameWithType:
      CSharp: ColliderLocationTrigger
      VB: ColliderLocationTrigger
    qualifiedName:
      CSharp: NPCEngine.Components.ColliderLocationTrigger
      VB: NPCEngine.Components.ColliderLocationTrigger
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: NPCEngine.Components
    source:
      id: ColliderLocationTrigger
      path: ''
      startLine: 1182
    summary: "\nSimple collider trigger that sets location in PlayerCharacter\n\nRequires Trigger collider.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class ColliderLocationTrigger : MonoBehaviour'
        VB: >-
          Public Class ColliderLocationTrigger

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: NPCEngine.Components.ColliderLocationTrigger.location
      commentId: F:NPCEngine.Components.ColliderLocationTrigger.location
      language: CSharp
      name:
        CSharp: location
        VB: location
      nameWithType:
        CSharp: ColliderLocationTrigger.location
        VB: ColliderLocationTrigger.location
      qualifiedName:
        CSharp: NPCEngine.Components.ColliderLocationTrigger.location
        VB: NPCEngine.Components.ColliderLocationTrigger.location
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Components
      source:
        id: location
        path: ''
        startLine: 1188
      summary: "\nLocation to set on trigger enter.\n"
      example: []
      syntax:
        content:
          CSharp: public Location location
          VB: Public location As Location
        return:
          type: NPCEngine.Components.Location
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.Components.ColliderLocationTrigger.locationCollider
      commentId: F:NPCEngine.Components.ColliderLocationTrigger.locationCollider
      language: CSharp
      name:
        CSharp: locationCollider
        VB: locationCollider
      nameWithType:
        CSharp: ColliderLocationTrigger.locationCollider
        VB: ColliderLocationTrigger.locationCollider
      qualifiedName:
        CSharp: NPCEngine.Components.ColliderLocationTrigger.locationCollider
        VB: NPCEngine.Components.ColliderLocationTrigger.locationCollider
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Components
      source:
        id: locationCollider
        path: ''
        startLine: 1193
      summary: "\nTrigger\n"
      example: []
      syntax:
        content:
          CSharp: public Collider locationCollider
          VB: Public locationCollider As Collider
        return:
          type: Global.Collider
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: NPCEngine.Components.DialogueUI
    commentId: T:NPCEngine.Components.DialogueUI
    language: CSharp
    name:
      CSharp: DialogueUI
      VB: DialogueUI
    nameWithType:
      CSharp: DialogueUI
      VB: DialogueUI
    qualifiedName:
      CSharp: NPCEngine.Components.DialogueUI
      VB: NPCEngine.Components.DialogueUI
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: NPCEngine.Components
    source:
      id: DialogueUI
      path: ''
      startLine: 1218
    summary: "\nSimple UI script that uses NonPlayerCharacter callbacks.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class DialogueUI : MonoBehaviour'
        VB: >-
          Public Class DialogueUI

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: NPCEngine.Components.DialogueUI.uiObject
      commentId: F:NPCEngine.Components.DialogueUI.uiObject
      language: CSharp
      name:
        CSharp: uiObject
        VB: uiObject
      nameWithType:
        CSharp: DialogueUI.uiObject
        VB: DialogueUI.uiObject
      qualifiedName:
        CSharp: NPCEngine.Components.DialogueUI.uiObject
        VB: NPCEngine.Components.DialogueUI.uiObject
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Components
      source:
        id: uiObject
        path: ''
        startLine: 1224
      summary: "\nGameobject that will be enabled, disabled and oriented towards the player.\n"
      example: []
      syntax:
        content:
          CSharp: public GameObject uiObject
          VB: Public uiObject As GameObject
        return:
          type: Global.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.Components.DialogueUI.lineLimit
      commentId: F:NPCEngine.Components.DialogueUI.lineLimit
      language: CSharp
      name:
        CSharp: lineLimit
        VB: lineLimit
      nameWithType:
        CSharp: DialogueUI.lineLimit
        VB: DialogueUI.lineLimit
      qualifiedName:
        CSharp: NPCEngine.Components.DialogueUI.lineLimit
        VB: NPCEngine.Components.DialogueUI.lineLimit
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Components
      source:
        id: lineLimit
        path: ''
        startLine: 1229
      summary: "\nLine limit for the text field.\n"
      example: []
      syntax:
        content:
          CSharp: public int lineLimit
          VB: Public lineLimit As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.Components.DialogueUI.dialogueHistory
      commentId: F:NPCEngine.Components.DialogueUI.dialogueHistory
      language: CSharp
      name:
        CSharp: dialogueHistory
        VB: dialogueHistory
      nameWithType:
        CSharp: DialogueUI.dialogueHistory
        VB: DialogueUI.dialogueHistory
      qualifiedName:
        CSharp: NPCEngine.Components.DialogueUI.dialogueHistory
        VB: NPCEngine.Components.DialogueUI.dialogueHistory
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Components
      source:
        id: dialogueHistory
        path: ''
        startLine: 1236
      summary: "\nText field for the dialogue.\n"
      example: []
      syntax:
        content:
          CSharp: protected Text dialogueHistory
          VB: Protected dialogueHistory As Text
        return:
          type: Global.Text
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: NPCEngine.Components.DialogueUI.dialogueTopics
      commentId: F:NPCEngine.Components.DialogueUI.dialogueTopics
      language: CSharp
      name:
        CSharp: dialogueTopics
        VB: dialogueTopics
      nameWithType:
        CSharp: DialogueUI.dialogueTopics
        VB: DialogueUI.dialogueTopics
      qualifiedName:
        CSharp: NPCEngine.Components.DialogueUI.dialogueTopics
        VB: NPCEngine.Components.DialogueUI.dialogueTopics
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Components
      source:
        id: dialogueTopics
        path: ''
        startLine: 1242
      summary: "\nText field for the topics of the possible dialogue options.\n"
      example: []
      syntax:
        content:
          CSharp: protected Text dialogueTopics
          VB: Protected dialogueTopics As Text
        return:
          type: Global.Text
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: NPCEngine.Components.DialogueUI.usernameColor
      commentId: F:NPCEngine.Components.DialogueUI.usernameColor
      language: CSharp
      name:
        CSharp: usernameColor
        VB: usernameColor
      nameWithType:
        CSharp: DialogueUI.usernameColor
        VB: DialogueUI.usernameColor
      qualifiedName:
        CSharp: NPCEngine.Components.DialogueUI.usernameColor
        VB: NPCEngine.Components.DialogueUI.usernameColor
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Components
      source:
        id: usernameColor
        path: ''
        startLine: 1244
      syntax:
        content:
          CSharp: public Color usernameColor
          VB: Public usernameColor As Color
        return:
          type: Global.Color
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.Components.DialogueUI.highlightColor
      commentId: F:NPCEngine.Components.DialogueUI.highlightColor
      language: CSharp
      name:
        CSharp: highlightColor
        VB: highlightColor
      nameWithType:
        CSharp: DialogueUI.highlightColor
        VB: DialogueUI.highlightColor
      qualifiedName:
        CSharp: NPCEngine.Components.DialogueUI.highlightColor
        VB: NPCEngine.Components.DialogueUI.highlightColor
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Components
      source:
        id: highlightColor
        path: ''
        startLine: 1245
      syntax:
        content:
          CSharp: public Color highlightColor
          VB: Public highlightColor As Color
        return:
          type: Global.Color
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.Components.DialogueUI.AddLine(NPCEngine.Components.ChatLine,System.Boolean)
      commentId: M:NPCEngine.Components.DialogueUI.AddLine(NPCEngine.Components.ChatLine,System.Boolean)
      language: CSharp
      name:
        CSharp: AddLine(ChatLine, Boolean)
        VB: AddLine(ChatLine, Boolean)
      nameWithType:
        CSharp: DialogueUI.AddLine(ChatLine, Boolean)
        VB: DialogueUI.AddLine(ChatLine, Boolean)
      qualifiedName:
        CSharp: NPCEngine.Components.DialogueUI.AddLine(NPCEngine.Components.ChatLine, System.Boolean)
        VB: NPCEngine.Components.DialogueUI.AddLine(NPCEngine.Components.ChatLine, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Components
      source:
        id: AddLine
        path: ''
        startLine: 1253
      summary: "\nAdds the given text to the dialogue history. Used with the OnDialogueLine callback.\n"
      example: []
      syntax:
        content:
          CSharp: public void AddLine(ChatLine chatLine, bool highlight = false)
          VB: Public Sub AddLine(chatLine As ChatLine, highlight As Boolean = False)
        parameters:
        - id: chatLine
          type: NPCEngine.Components.ChatLine
        - id: highlight
          type: System.Boolean
      overload: NPCEngine.Components.DialogueUI.AddLine*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.Components.DialogueUI.UpdateTopics(List{System.String})
      commentId: M:NPCEngine.Components.DialogueUI.UpdateTopics(List{System.String})
      language: CSharp
      name:
        CSharp: UpdateTopics(List<String>)
        VB: UpdateTopics(List(Of String))
      nameWithType:
        CSharp: DialogueUI.UpdateTopics(List<String>)
        VB: DialogueUI.UpdateTopics(List(Of String))
      qualifiedName:
        CSharp: NPCEngine.Components.DialogueUI.UpdateTopics(List<System.String>)
        VB: NPCEngine.Components.DialogueUI.UpdateTopics(List(Of System.String))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Components
      source:
        id: UpdateTopics
        path: ''
        startLine: 1273
      summary: "\nUpdates the dialogue topics. Used with NonPlayerCharacter.OnTopicHintsUpdate.\n"
      example: []
      syntax:
        content:
          CSharp: public void UpdateTopics(List<string> topics)
          VB: Public Sub UpdateTopics(topics As List(Of String))
        parameters:
        - id: topics
          type: Global.List{System.String}
      overload: NPCEngine.Components.DialogueUI.UpdateTopics*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.Components.DialogueUI.Enable
      commentId: M:NPCEngine.Components.DialogueUI.Enable
      language: CSharp
      name:
        CSharp: Enable()
        VB: Enable()
      nameWithType:
        CSharp: DialogueUI.Enable()
        VB: DialogueUI.Enable()
      qualifiedName:
        CSharp: NPCEngine.Components.DialogueUI.Enable()
        VB: NPCEngine.Components.DialogueUI.Enable()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Components
      source:
        id: Enable
        path: ''
        startLine: 1281
      summary: "\nEnable Dialogue UI.\n"
      example: []
      syntax:
        content:
          CSharp: public void Enable()
          VB: Public Sub Enable
      overload: NPCEngine.Components.DialogueUI.Enable*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.Components.DialogueUI.Disable
      commentId: M:NPCEngine.Components.DialogueUI.Disable
      language: CSharp
      name:
        CSharp: Disable()
        VB: Disable()
      nameWithType:
        CSharp: DialogueUI.Disable()
        VB: DialogueUI.Disable()
      qualifiedName:
        CSharp: NPCEngine.Components.DialogueUI.Disable()
        VB: NPCEngine.Components.DialogueUI.Disable()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Components
      source:
        id: Disable
        path: ''
        startLine: 1291
      summary: "\nDisable Dialogue UI.\n"
      example: []
      syntax:
        content:
          CSharp: public void Disable()
          VB: Public Sub Disable
      overload: NPCEngine.Components.DialogueUI.Disable*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: NPCEngine.Components.DictationRecognizerSTT
    commentId: T:NPCEngine.Components.DictationRecognizerSTT
    language: CSharp
    name:
      CSharp: DictationRecognizerSTT
      VB: DictationRecognizerSTT
    nameWithType:
      CSharp: DictationRecognizerSTT
      VB: DictationRecognizerSTT
    qualifiedName:
      CSharp: NPCEngine.Components.DictationRecognizerSTT
      VB: NPCEngine.Components.DictationRecognizerSTT
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: NPCEngine.Components
    source:
      id: DictationRecognizerSTT
      path: ''
      startLine: 1323
    summary: "\nSpeech to text component using Windows Speech Recognition DictationRecognizer as backend.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class DictationRecognizerSTT : AbstractSpeechToText'
        VB: >-
          Public Class DictationRecognizerSTT

              Inherits AbstractSpeechToText
    inheritance:
    - System.Object
    - NPCEngine.Components.AbstractSpeechToText
    inheritedMembers:
    - NPCEngine.Components.AbstractSpeechToText.Context
    - NPCEngine.Components.AbstractSpeechToText.OnSpeechRecognized
    - NPCEngine.Components.AbstractSpeechToText.OnSpeechRecognitionFailed
    - NPCEngine.Components.AbstractSpeechToText.SpeechRecognized(System.String)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: NPCEngine.Components.DictationRecognizerSTT.debugLogs
      commentId: F:NPCEngine.Components.DictationRecognizerSTT.debugLogs
      language: CSharp
      name:
        CSharp: debugLogs
        VB: debugLogs
      nameWithType:
        CSharp: DictationRecognizerSTT.debugLogs
        VB: DictationRecognizerSTT.debugLogs
      qualifiedName:
        CSharp: NPCEngine.Components.DictationRecognizerSTT.debugLogs
        VB: NPCEngine.Components.DictationRecognizerSTT.debugLogs
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Components
      source:
        id: debugLogs
        path: ''
        startLine: 1328
      summary: "\nShow debug messages.\n"
      example: []
      syntax:
        content:
          CSharp: public bool debugLogs
          VB: Public debugLogs As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.Components.DictationRecognizerSTT.PolicyNotAccepted
      commentId: P:NPCEngine.Components.DictationRecognizerSTT.PolicyNotAccepted
      language: CSharp
      name:
        CSharp: PolicyNotAccepted
        VB: PolicyNotAccepted
      nameWithType:
        CSharp: DictationRecognizerSTT.PolicyNotAccepted
        VB: DictationRecognizerSTT.PolicyNotAccepted
      qualifiedName:
        CSharp: NPCEngine.Components.DictationRecognizerSTT.PolicyNotAccepted
        VB: NPCEngine.Components.DictationRecognizerSTT.PolicyNotAccepted
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Components
      source:
        id: PolicyNotAccepted
        path: ''
        startLine: 1333
      summary: "\nProperty that indicates that windows speech is not configured.\n"
      example: []
      syntax:
        content:
          CSharp: public bool PolicyNotAccepted { get; }
          VB: Public ReadOnly Property PolicyNotAccepted As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: NPCEngine.Components.DictationRecognizerSTT.PolicyNotAccepted*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: NPCEngine.Components.DictationRecognizerSTT.RecognizerStarted
      commentId: P:NPCEngine.Components.DictationRecognizerSTT.RecognizerStarted
      language: CSharp
      name:
        CSharp: RecognizerStarted
        VB: RecognizerStarted
      nameWithType:
        CSharp: DictationRecognizerSTT.RecognizerStarted
        VB: DictationRecognizerSTT.RecognizerStarted
      qualifiedName:
        CSharp: NPCEngine.Components.DictationRecognizerSTT.RecognizerStarted
        VB: NPCEngine.Components.DictationRecognizerSTT.RecognizerStarted
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Components
      source:
        id: RecognizerStarted
        path: ''
        startLine: 1344
      summary: "\nProperty that indicates that recognizer is running.\n"
      example: []
      syntax:
        content:
          CSharp: public bool RecognizerStarted { get; }
          VB: Public ReadOnly Property RecognizerStarted As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: NPCEngine.Components.DictationRecognizerSTT.RecognizerStarted*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: NPCEngine.Components.DictationRecognizerSTT.StartListening
      commentId: M:NPCEngine.Components.DictationRecognizerSTT.StartListening
      language: CSharp
      name:
        CSharp: StartListening()
        VB: StartListening()
      nameWithType:
        CSharp: DictationRecognizerSTT.StartListening()
        VB: DictationRecognizerSTT.StartListening()
      qualifiedName:
        CSharp: NPCEngine.Components.DictationRecognizerSTT.StartListening()
        VB: NPCEngine.Components.DictationRecognizerSTT.StartListening()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Components
      source:
        id: StartListening
        path: ''
        startLine: 1451
      syntax:
        content:
          CSharp: public override void StartListening()
          VB: Public Overrides Sub StartListening
      overload: NPCEngine.Components.DictationRecognizerSTT.StartListening*
      overridden: NPCEngine.Components.AbstractSpeechToText.StartListening
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: NPCEngine.Components.DictationRecognizerSTT.StopListening
      commentId: M:NPCEngine.Components.DictationRecognizerSTT.StopListening
      language: CSharp
      name:
        CSharp: StopListening()
        VB: StopListening()
      nameWithType:
        CSharp: DictationRecognizerSTT.StopListening()
        VB: DictationRecognizerSTT.StopListening()
      qualifiedName:
        CSharp: NPCEngine.Components.DictationRecognizerSTT.StopListening()
        VB: NPCEngine.Components.DictationRecognizerSTT.StopListening()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Components
      source:
        id: StopListening
        path: ''
        startLine: 1456
      syntax:
        content:
          CSharp: public override void StopListening()
          VB: Public Overrides Sub StopListening
      overload: NPCEngine.Components.DictationRecognizerSTT.StopListening*
      overridden: NPCEngine.Components.AbstractSpeechToText.StopListening
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: NPCEngine.Components.Location
    commentId: T:NPCEngine.Components.Location
    language: CSharp
    name:
      CSharp: Location
      VB: Location
    nameWithType:
      CSharp: Location
      VB: Location
    qualifiedName:
      CSharp: NPCEngine.Components.Location
      VB: NPCEngine.Components.Location
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: NPCEngine.Components
    source:
      id: Location
      path: ''
      startLine: 1484
    summary: "\nLocation natural language description.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class Location : ScriptableObject'
        VB: >-
          Public Class Location

              Inherits ScriptableObject
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: NPCEngine.Components.Location.Name
      commentId: F:NPCEngine.Components.Location.Name
      language: CSharp
      name:
        CSharp: Name
        VB: Name
      nameWithType:
        CSharp: Location.Name
        VB: Location.Name
      qualifiedName:
        CSharp: NPCEngine.Components.Location.Name
        VB: NPCEngine.Components.Location.Name
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Components
      source:
        id: Name
        path: ''
        startLine: 1487
      syntax:
        content:
          CSharp: public string Name
          VB: Public Name As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.Components.Location.Description
      commentId: F:NPCEngine.Components.Location.Description
      language: CSharp
      name:
        CSharp: Description
        VB: Description
      nameWithType:
        CSharp: Location.Description
        VB: Location.Description
      qualifiedName:
        CSharp: NPCEngine.Components.Location.Description
        VB: NPCEngine.Components.Location.Description
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Components
      source:
        id: Description
        path: ''
        startLine: 1490
      syntax:
        content:
          CSharp: public string Description
          VB: Public Description As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: NPCEngine.Components.NonPlayerCharacter
    commentId: T:NPCEngine.Components.NonPlayerCharacter
    language: CSharp
    name:
      CSharp: NonPlayerCharacter
      VB: NonPlayerCharacter
    nameWithType:
      CSharp: NonPlayerCharacter
      VB: NonPlayerCharacter
    qualifiedName:
      CSharp: NPCEngine.Components.NonPlayerCharacter
      VB: NPCEngine.Components.NonPlayerCharacter
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: NPCEngine.Components
    source:
      id: NonPlayerCharacter
      path: ''
      startLine: 1506
    syntax:
      content:
        CSharp: 'public class NonPlayerCharacter : MonoBehaviour'
        VB: >-
          Public Class NonPlayerCharacter

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: NPCEngine.Components.NonPlayerCharacter.maxLines
      commentId: F:NPCEngine.Components.NonPlayerCharacter.maxLines
      language: CSharp
      name:
        CSharp: maxLines
        VB: maxLines
      nameWithType:
        CSharp: NonPlayerCharacter.maxLines
        VB: NonPlayerCharacter.maxLines
      qualifiedName:
        CSharp: NPCEngine.Components.NonPlayerCharacter.maxLines
        VB: NPCEngine.Components.NonPlayerCharacter.maxLines
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Components
      source:
        id: maxLines
        path: ''
        startLine: 1509
      syntax:
        content:
          CSharp: public int maxLines
          VB: Public maxLines As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.Components.NonPlayerCharacter.defaultThreshold
      commentId: F:NPCEngine.Components.NonPlayerCharacter.defaultThreshold
      language: CSharp
      name:
        CSharp: defaultThreshold
        VB: defaultThreshold
      nameWithType:
        CSharp: NonPlayerCharacter.defaultThreshold
        VB: NonPlayerCharacter.defaultThreshold
      qualifiedName:
        CSharp: NPCEngine.Components.NonPlayerCharacter.defaultThreshold
        VB: NPCEngine.Components.NonPlayerCharacter.defaultThreshold
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Components
      source:
        id: defaultThreshold
        path: ''
        startLine: 1513
      summary: "\nDefault semantic similarity threshold for dialogue tree triggers.\n"
      example: []
      syntax:
        content:
          CSharp: public float defaultThreshold
          VB: Public defaultThreshold As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.Components.NonPlayerCharacter.character
      commentId: F:NPCEngine.Components.NonPlayerCharacter.character
      language: CSharp
      name:
        CSharp: character
        VB: character
      nameWithType:
        CSharp: NonPlayerCharacter.character
        VB: NonPlayerCharacter.character
      qualifiedName:
        CSharp: NPCEngine.Components.NonPlayerCharacter.character
        VB: NPCEngine.Components.NonPlayerCharacter.character
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Components
      source:
        id: character
        path: ''
        startLine: 1518
      summary: "\nCharacters assigned to this NPC.\n"
      example: []
      syntax:
        content:
          CSharp: public Character character
          VB: Public character As Character
        return:
          type: NPCEngine.Components.Character
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.Components.NonPlayerCharacter.history
      commentId: F:NPCEngine.Components.NonPlayerCharacter.history
      language: CSharp
      name:
        CSharp: history
        VB: history
      nameWithType:
        CSharp: NonPlayerCharacter.history
        VB: NonPlayerCharacter.history
      qualifiedName:
        CSharp: NPCEngine.Components.NonPlayerCharacter.history
        VB: NPCEngine.Components.NonPlayerCharacter.history
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Components
      source:
        id: history
        path: ''
        startLine: 1523
      summary: "\nDialogue history.\n"
      example: []
      syntax:
        content:
          CSharp: public List<ChatLine> history
          VB: Public history As List(Of ChatLine)
        return:
          type: Global.List{NPCEngine.Components.ChatLine}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.Components.NonPlayerCharacter.OnDialogueStart
      commentId: F:NPCEngine.Components.NonPlayerCharacter.OnDialogueStart
      language: CSharp
      name:
        CSharp: OnDialogueStart
        VB: OnDialogueStart
      nameWithType:
        CSharp: NonPlayerCharacter.OnDialogueStart
        VB: NonPlayerCharacter.OnDialogueStart
      qualifiedName:
        CSharp: NPCEngine.Components.NonPlayerCharacter.OnDialogueStart
        VB: NPCEngine.Components.NonPlayerCharacter.OnDialogueStart
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Components
      source:
        id: OnDialogueStart
        path: ''
        startLine: 1528
      summary: "\nDialogue start event (triggered when the NPC starts talking)\n"
      example: []
      syntax:
        content:
          CSharp: public UnityEvent OnDialogueStart
          VB: Public OnDialogueStart As UnityEvent
        return:
          type: Global.UnityEvent
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.Components.NonPlayerCharacter.OnDialogueLine
      commentId: F:NPCEngine.Components.NonPlayerCharacter.OnDialogueLine
      language: CSharp
      name:
        CSharp: OnDialogueLine
        VB: OnDialogueLine
      nameWithType:
        CSharp: NonPlayerCharacter.OnDialogueLine
        VB: NonPlayerCharacter.OnDialogueLine
      qualifiedName:
        CSharp: NPCEngine.Components.NonPlayerCharacter.OnDialogueLine
        VB: NPCEngine.Components.NonPlayerCharacter.OnDialogueLine
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Components
      source:
        id: OnDialogueLine
        path: ''
        startLine: 1534
      summary: "\nEvent called when new line is added to history \nwhere parameters are (ChatLine newLine, bool scriptedLine)\n"
      example: []
      syntax:
        content:
          CSharp: public UnityEvent<ChatLine, bool> OnDialogueLine
          VB: Public OnDialogueLine As UnityEvent(Of ChatLine, Boolean)
        return:
          type: Global.UnityEvent{NPCEngine.Components.ChatLine,System.Boolean}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.Components.NonPlayerCharacter.OnProcessingStart
      commentId: F:NPCEngine.Components.NonPlayerCharacter.OnProcessingStart
      language: CSharp
      name:
        CSharp: OnProcessingStart
        VB: OnProcessingStart
      nameWithType:
        CSharp: NonPlayerCharacter.OnProcessingStart
        VB: NonPlayerCharacter.OnProcessingStart
      qualifiedName:
        CSharp: NPCEngine.Components.NonPlayerCharacter.OnProcessingStart
        VB: NPCEngine.Components.NonPlayerCharacter.OnProcessingStart
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Components
      source:
        id: OnProcessingStart
        path: ''
        startLine: 1539
      summary: "\nEvent called in the beginning of an input processing\n"
      example: []
      syntax:
        content:
          CSharp: public UnityEvent OnProcessingStart
          VB: Public OnProcessingStart As UnityEvent
        return:
          type: Global.UnityEvent
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.Components.NonPlayerCharacter.OnProcessingEnd
      commentId: F:NPCEngine.Components.NonPlayerCharacter.OnProcessingEnd
      language: CSharp
      name:
        CSharp: OnProcessingEnd
        VB: OnProcessingEnd
      nameWithType:
        CSharp: NonPlayerCharacter.OnProcessingEnd
        VB: NonPlayerCharacter.OnProcessingEnd
      qualifiedName:
        CSharp: NPCEngine.Components.NonPlayerCharacter.OnProcessingEnd
        VB: NPCEngine.Components.NonPlayerCharacter.OnProcessingEnd
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Components
      source:
        id: OnProcessingEnd
        path: ''
        startLine: 1544
      summary: "\nEvent called in the end of an input processing\n"
      example: []
      syntax:
        content:
          CSharp: public UnityEvent OnProcessingEnd
          VB: Public OnProcessingEnd As UnityEvent
        return:
          type: Global.UnityEvent
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.Components.NonPlayerCharacter.OnTopicHintsUpdate
      commentId: F:NPCEngine.Components.NonPlayerCharacter.OnTopicHintsUpdate
      language: CSharp
      name:
        CSharp: OnTopicHintsUpdate
        VB: OnTopicHintsUpdate
      nameWithType:
        CSharp: NonPlayerCharacter.OnTopicHintsUpdate
        VB: NonPlayerCharacter.OnTopicHintsUpdate
      qualifiedName:
        CSharp: NPCEngine.Components.NonPlayerCharacter.OnTopicHintsUpdate
        VB: NPCEngine.Components.NonPlayerCharacter.OnTopicHintsUpdate
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Components
      source:
        id: OnTopicHintsUpdate
        path: ''
        startLine: 1549
      summary: "\nEvent called when new dialogue topic hints appear\n"
      example: []
      syntax:
        content:
          CSharp: public UnityEvent<List<string>> OnTopicHintsUpdate
          VB: Public OnTopicHintsUpdate As UnityEvent(Of List(Of String))
        return:
          type: Global.UnityEvent{List{System.String}}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.Components.NonPlayerCharacter.OnDialogueEnd
      commentId: F:NPCEngine.Components.NonPlayerCharacter.OnDialogueEnd
      language: CSharp
      name:
        CSharp: OnDialogueEnd
        VB: OnDialogueEnd
      nameWithType:
        CSharp: NonPlayerCharacter.OnDialogueEnd
        VB: NonPlayerCharacter.OnDialogueEnd
      qualifiedName:
        CSharp: NPCEngine.Components.NonPlayerCharacter.OnDialogueEnd
        VB: NPCEngine.Components.NonPlayerCharacter.OnDialogueEnd
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Components
      source:
        id: OnDialogueEnd
        path: ''
        startLine: 1554
      summary: "\nEvent called when dialogue ends\n"
      example: []
      syntax:
        content:
          CSharp: public UnityEvent OnDialogueEnd
          VB: Public OnDialogueEnd As UnityEvent
        return:
          type: Global.UnityEvent
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.Components.NonPlayerCharacter.audioSourceQueue
      commentId: F:NPCEngine.Components.NonPlayerCharacter.audioSourceQueue
      language: CSharp
      name:
        CSharp: audioSourceQueue
        VB: audioSourceQueue
      nameWithType:
        CSharp: NonPlayerCharacter.audioSourceQueue
        VB: NonPlayerCharacter.audioSourceQueue
      qualifiedName:
        CSharp: NPCEngine.Components.NonPlayerCharacter.audioSourceQueue
        VB: NPCEngine.Components.NonPlayerCharacter.audioSourceQueue
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Components
      source:
        id: audioSourceQueue
        path: ''
        startLine: 1559
      summary: "\nAudio source queue that plays generated speech on the fly one-by-one.\n"
      example: []
      syntax:
        content:
          CSharp: public AudioSourceQueue audioSourceQueue
          VB: Public audioSourceQueue As AudioSourceQueue
        return:
          type: NPCEngine.Utility.AudioSourceQueue
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.Components.NonPlayerCharacter.voiceId
      commentId: F:NPCEngine.Components.NonPlayerCharacter.voiceId
      language: CSharp
      name:
        CSharp: voiceId
        VB: voiceId
      nameWithType:
        CSharp: NonPlayerCharacter.voiceId
        VB: NonPlayerCharacter.voiceId
      qualifiedName:
        CSharp: NPCEngine.Components.NonPlayerCharacter.voiceId
        VB: NPCEngine.Components.NonPlayerCharacter.voiceId
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Components
      source:
        id: voiceId
        path: ''
        startLine: 1564
      summary: "\nVoice ID of the character for TTS.\n"
      example: []
      syntax:
        content:
          CSharp: public string voiceId
          VB: Public voiceId As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.Components.NonPlayerCharacter.dialogueSystem
      commentId: F:NPCEngine.Components.NonPlayerCharacter.dialogueSystem
      language: CSharp
      name:
        CSharp: dialogueSystem
        VB: dialogueSystem
      nameWithType:
        CSharp: NonPlayerCharacter.dialogueSystem
        VB: NonPlayerCharacter.dialogueSystem
      qualifiedName:
        CSharp: NPCEngine.Components.NonPlayerCharacter.dialogueSystem
        VB: NPCEngine.Components.NonPlayerCharacter.dialogueSystem
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Components
      source:
        id: dialogueSystem
        path: ''
        startLine: 1569
      summary: "\nDialogue System integration.\n"
      example: []
      syntax:
        content:
          CSharp: public AbstractDialogueSystem dialogueSystem
          VB: Public dialogueSystem As AbstractDialogueSystem
        return:
          type: NPCEngine.Components.AbstractDialogueSystem
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.Components.NonPlayerCharacter.testLocation
      commentId: F:NPCEngine.Components.NonPlayerCharacter.testLocation
      language: CSharp
      name:
        CSharp: testLocation
        VB: testLocation
      nameWithType:
        CSharp: NonPlayerCharacter.testLocation
        VB: NonPlayerCharacter.testLocation
      qualifiedName:
        CSharp: NPCEngine.Components.NonPlayerCharacter.testLocation
        VB: NPCEngine.Components.NonPlayerCharacter.testLocation
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Components
      source:
        id: testLocation
        path: ''
        startLine: 1583
      syntax:
        content:
          CSharp: public Location testLocation
          VB: Public testLocation As Location
        return:
          type: NPCEngine.Components.Location
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.Components.NonPlayerCharacter.testOtherCharacter
      commentId: F:NPCEngine.Components.NonPlayerCharacter.testOtherCharacter
      language: CSharp
      name:
        CSharp: testOtherCharacter
        VB: testOtherCharacter
      nameWithType:
        CSharp: NonPlayerCharacter.testOtherCharacter
        VB: NonPlayerCharacter.testOtherCharacter
      qualifiedName:
        CSharp: NPCEngine.Components.NonPlayerCharacter.testOtherCharacter
        VB: NPCEngine.Components.NonPlayerCharacter.testOtherCharacter
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Components
      source:
        id: testOtherCharacter
        path: ''
        startLine: 1586
      syntax:
        content:
          CSharp: public Character testOtherCharacter
          VB: Public testOtherCharacter As Character
        return:
          type: NPCEngine.Components.Character
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.Components.NonPlayerCharacter.StartDialogue
      commentId: M:NPCEngine.Components.NonPlayerCharacter.StartDialogue
      language: CSharp
      name:
        CSharp: StartDialogue()
        VB: StartDialogue()
      nameWithType:
        CSharp: NonPlayerCharacter.StartDialogue()
        VB: NonPlayerCharacter.StartDialogue()
      qualifiedName:
        CSharp: NPCEngine.Components.NonPlayerCharacter.StartDialogue()
        VB: NPCEngine.Components.NonPlayerCharacter.StartDialogue()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Components
      source:
        id: StartDialogue
        path: ''
        startLine: 1605
      summary: "\nInitialize dialogue.\n"
      example: []
      syntax:
        content:
          CSharp: public void StartDialogue()
          VB: Public Sub StartDialogue
      overload: NPCEngine.Components.NonPlayerCharacter.StartDialogue*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.Components.NonPlayerCharacter.EndDialogue
      commentId: M:NPCEngine.Components.NonPlayerCharacter.EndDialogue
      language: CSharp
      name:
        CSharp: EndDialogue()
        VB: EndDialogue()
      nameWithType:
        CSharp: NonPlayerCharacter.EndDialogue()
        VB: NonPlayerCharacter.EndDialogue()
      qualifiedName:
        CSharp: NPCEngine.Components.NonPlayerCharacter.EndDialogue()
        VB: NPCEngine.Components.NonPlayerCharacter.EndDialogue()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Components
      source:
        id: EndDialogue
        path: ''
        startLine: 1620
      summary: "\nEnd dialogue.\n"
      example: []
      syntax:
        content:
          CSharp: public void EndDialogue()
          VB: Public Sub
      overload: NPCEngine.Components.NonPlayerCharacter.EndDialogue*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.Components.NonPlayerCharacter.HandleLine(System.String,System.String,System.String)
      commentId: M:NPCEngine.Components.NonPlayerCharacter.HandleLine(System.String,System.String,System.String)
      language: CSharp
      name:
        CSharp: HandleLine(String, String, String)
        VB: HandleLine(String, String, String)
      nameWithType:
        CSharp: NonPlayerCharacter.HandleLine(String, String, String)
        VB: NonPlayerCharacter.HandleLine(String, String, String)
      qualifiedName:
        CSharp: NPCEngine.Components.NonPlayerCharacter.HandleLine(System.String, System.String, System.String)
        VB: NPCEngine.Components.NonPlayerCharacter.HandleLine(System.String, System.String, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Components
      source:
        id: HandleLine
        path: ''
        startLine: 1637
      summary: "\nStep dialogue by line from player.\n"
      example: []
      syntax:
        content:
          CSharp: public void HandleLine(string otherName, string otherPersona, string line)
          VB: Public Sub HandleLine(otherName As String, otherPersona As String, line As String)
        parameters:
        - id: otherName
          type: System.String
          description: ''
        - id: otherPersona
          type: System.String
          description: ''
        - id: line
          type: System.String
          description: ''
      overload: NPCEngine.Components.NonPlayerCharacter.HandleLine*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.Components.NonPlayerCharacter.HandleLineCoroutine(System.String,System.String,System.String)
      commentId: M:NPCEngine.Components.NonPlayerCharacter.HandleLineCoroutine(System.String,System.String,System.String)
      language: CSharp
      name:
        CSharp: HandleLineCoroutine(String, String, String)
        VB: HandleLineCoroutine(String, String, String)
      nameWithType:
        CSharp: NonPlayerCharacter.HandleLineCoroutine(String, String, String)
        VB: NonPlayerCharacter.HandleLineCoroutine(String, String, String)
      qualifiedName:
        CSharp: NPCEngine.Components.NonPlayerCharacter.HandleLineCoroutine(System.String, System.String, System.String)
        VB: NPCEngine.Components.NonPlayerCharacter.HandleLineCoroutine(System.String, System.String, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Components
      source:
        id: HandleLineCoroutine
        path: ''
        startLine: 1646
      summary: "\nLine handling coroutine\n"
      example: []
      syntax:
        content:
          CSharp: public IEnumerator HandleLineCoroutine(string otherName, string otherPersona, string line)
          VB: Public Function HandleLineCoroutine(otherName As String, otherPersona As String, line As String) As IEnumerator
        parameters:
        - id: otherName
          type: System.String
        - id: otherPersona
          type: System.String
        - id: line
          type: System.String
        return:
          type: System.Collections.IEnumerator
      overload: NPCEngine.Components.NonPlayerCharacter.HandleLineCoroutine*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.Components.NonPlayerCharacter.HandlePlayerLineCoroutine(System.String,System.String,System.String)
      commentId: M:NPCEngine.Components.NonPlayerCharacter.HandlePlayerLineCoroutine(System.String,System.String,System.String)
      language: CSharp
      name:
        CSharp: HandlePlayerLineCoroutine(String, String, String)
        VB: HandlePlayerLineCoroutine(String, String, String)
      nameWithType:
        CSharp: NonPlayerCharacter.HandlePlayerLineCoroutine(String, String, String)
        VB: NonPlayerCharacter.HandlePlayerLineCoroutine(String, String, String)
      qualifiedName:
        CSharp: NPCEngine.Components.NonPlayerCharacter.HandlePlayerLineCoroutine(System.String, System.String, System.String)
        VB: NPCEngine.Components.NonPlayerCharacter.HandlePlayerLineCoroutine(System.String, System.String, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Components
      source:
        id: HandlePlayerLineCoroutine
        path: ''
        startLine: 1678
      summary: "\nPlayer line handling coroutine\n"
      example: []
      syntax:
        content:
          CSharp: public IEnumerator HandlePlayerLineCoroutine(string otherName, string otherPersona, string line)
          VB: Public Function HandlePlayerLineCoroutine(otherName As String, otherPersona As String, line As String) As IEnumerator
        parameters:
        - id: otherName
          type: System.String
        - id: otherPersona
          type: System.String
        - id: line
          type: System.String
        return:
          type: System.Collections.IEnumerator
      overload: NPCEngine.Components.NonPlayerCharacter.HandlePlayerLineCoroutine*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.Components.NonPlayerCharacter.GenerateReply(System.String,System.String,System.String)
      commentId: M:NPCEngine.Components.NonPlayerCharacter.GenerateReply(System.String,System.String,System.String)
      language: CSharp
      name:
        CSharp: GenerateReply(String, String, String)
        VB: GenerateReply(String, String, String)
      nameWithType:
        CSharp: NonPlayerCharacter.GenerateReply(String, String, String)
        VB: NonPlayerCharacter.GenerateReply(String, String, String)
      qualifiedName:
        CSharp: NPCEngine.Components.NonPlayerCharacter.GenerateReply(System.String, System.String, System.String)
        VB: NPCEngine.Components.NonPlayerCharacter.GenerateReply(System.String, System.String, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Components
      source:
        id: GenerateReply
        path: ''
        startLine: 1720
      summary: "\nRun Chatbot API and generate and play speech\n"
      example: []
      syntax:
        content:
          CSharp: public IEnumerator GenerateReply(string otherName, string otherPersona, string line)
          VB: Public Function GenerateReply(otherName As String, otherPersona As String, line As String) As IEnumerator
        parameters:
        - id: otherName
          type: System.String
          description: Other conversant name
        - id: otherPersona
          type: System.String
          description: Other conversant persona
        - id: line
          type: System.String
          description: Utterance to generate reply to.
        return:
          type: System.Collections.IEnumerator
          description: ''
      overload: NPCEngine.Components.NonPlayerCharacter.GenerateReply*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.Components.NonPlayerCharacter.SayNPCLines
      commentId: M:NPCEngine.Components.NonPlayerCharacter.SayNPCLines
      language: CSharp
      name:
        CSharp: SayNPCLines()
        VB: SayNPCLines()
      nameWithType:
        CSharp: NonPlayerCharacter.SayNPCLines()
        VB: NonPlayerCharacter.SayNPCLines()
      qualifiedName:
        CSharp: NPCEngine.Components.NonPlayerCharacter.SayNPCLines()
        VB: NPCEngine.Components.NonPlayerCharacter.SayNPCLines()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Components
      source:
        id: SayNPCLines
        path: ''
        startLine: 1749
      summary: "\nScan dialogue tree and say all scripted NPC lines\n"
      example: []
      syntax:
        content:
          CSharp: public IEnumerator SayNPCLines()
          VB: Public Function SayNPCLines As IEnumerator
        return:
          type: System.Collections.IEnumerator
          description: ''
      overload: NPCEngine.Components.NonPlayerCharacter.SayNPCLines*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.Components.NonPlayerCharacter.GenerateAndPlaySpeech(System.String)
      commentId: M:NPCEngine.Components.NonPlayerCharacter.GenerateAndPlaySpeech(System.String)
      language: CSharp
      name:
        CSharp: GenerateAndPlaySpeech(String)
        VB: GenerateAndPlaySpeech(String)
      nameWithType:
        CSharp: NonPlayerCharacter.GenerateAndPlaySpeech(String)
        VB: NonPlayerCharacter.GenerateAndPlaySpeech(String)
      qualifiedName:
        CSharp: NPCEngine.Components.NonPlayerCharacter.GenerateAndPlaySpeech(System.String)
        VB: NPCEngine.Components.NonPlayerCharacter.GenerateAndPlaySpeech(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Components
      source:
        id: GenerateAndPlaySpeech
        path: ''
        startLine: 1788
      summary: "\nCoroutine to generate speech from text.\n"
      example: []
      syntax:
        content:
          CSharp: public IEnumerator GenerateAndPlaySpeech(string line)
          VB: Public Function GenerateAndPlaySpeech(line As String) As IEnumerator
        parameters:
        - id: line
          type: System.String
          description: ''
        return:
          type: System.Collections.IEnumerator
          description: ''
      overload: NPCEngine.Components.NonPlayerCharacter.GenerateAndPlaySpeech*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: NPCEngine.Components.NPCEngineManager
    commentId: T:NPCEngine.Components.NPCEngineManager
    language: CSharp
    name:
      CSharp: NPCEngineManager
      VB: NPCEngineManager
    nameWithType:
      CSharp: NPCEngineManager
      VB: NPCEngineManager
    qualifiedName:
      CSharp: NPCEngine.Components.NPCEngineManager
      VB: NPCEngine.Components.NPCEngineManager
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: NPCEngine.Components
    source:
      id: NPCEngineManager
      path: ''
      startLine: 1882
    summary: "\nManager class that handles services and server lifetime and status.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class NPCEngineManager : Singleton<NPCEngineManager>'
        VB: >-
          Public Class NPCEngineManager

              Inherits Singleton(Of NPCEngineManager)
    inheritance:
    - System.Object
    - NPCEngine.Utility.Singleton{NPCEngine.Components.NPCEngineManager}
    inheritedMembers:
    - NPCEngine.Utility.Singleton{NPCEngine.Components.NPCEngineManager}.Instance
    - NPCEngine.Utility.Singleton{NPCEngine.Components.NPCEngineManager}.GetInstance
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: NPCEngine.Components.NPCEngineManager.Services
      commentId: P:NPCEngine.Components.NPCEngineManager.Services
      language: CSharp
      name:
        CSharp: Services
        VB: Services
      nameWithType:
        CSharp: NPCEngineManager.Services
        VB: NPCEngineManager.Services
      qualifiedName:
        CSharp: NPCEngine.Components.NPCEngineManager.Services
        VB: NPCEngine.Components.NPCEngineManager.Services
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Components
      source:
        id: Services
        path: ''
        startLine: 1888
      syntax:
        content:
          CSharp: public List<ServiceMetadata> Services { get; }
          VB: Public ReadOnly Property Services As List(Of ServiceMetadata)
        parameters: []
        return:
          type: Global.List{NPCEngine.API.ServiceMetadata}
      overload: NPCEngine.Components.NPCEngineManager.Services*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: NPCEngine.Components.NPCEngineManager.ServicesById
      commentId: P:NPCEngine.Components.NPCEngineManager.ServicesById
      language: CSharp
      name:
        CSharp: ServicesById
        VB: ServicesById
      nameWithType:
        CSharp: NPCEngineManager.ServicesById
        VB: NPCEngineManager.ServicesById
      qualifiedName:
        CSharp: NPCEngine.Components.NPCEngineManager.ServicesById
        VB: NPCEngine.Components.NPCEngineManager.ServicesById
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Components
      source:
        id: ServicesById
        path: ''
        startLine: 1900
      syntax:
        content:
          CSharp: public Dictionary<string, ServiceMetadata> ServicesById { get; }
          VB: Public ReadOnly Property ServicesById As Dictionary(Of String, ServiceMetadata)
        parameters: []
        return:
          type: Global.Dictionary{System.String,NPCEngine.API.ServiceMetadata}
      overload: NPCEngine.Components.NPCEngineManager.ServicesById*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: NPCEngine.Components.NPCEngineManager.ServiceStatuses
      commentId: P:NPCEngine.Components.NPCEngineManager.ServiceStatuses
      language: CSharp
      name:
        CSharp: ServiceStatuses
        VB: ServiceStatuses
      nameWithType:
        CSharp: NPCEngineManager.ServiceStatuses
        VB: NPCEngineManager.ServiceStatuses
      qualifiedName:
        CSharp: NPCEngine.Components.NPCEngineManager.ServiceStatuses
        VB: NPCEngine.Components.NPCEngineManager.ServiceStatuses
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Components
      source:
        id: ServiceStatuses
        path: ''
        startLine: 1915
      syntax:
        content:
          CSharp: public List<ServiceStatus> ServiceStatuses { get; }
          VB: Public ReadOnly Property ServiceStatuses As List(Of ServiceStatus)
        parameters: []
        return:
          type: Global.List{NPCEngine.API.ServiceStatus}
      overload: NPCEngine.Components.NPCEngineManager.ServiceStatuses*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: NPCEngine.Components.NPCEngineManager.ServiceStatusesById
      commentId: P:NPCEngine.Components.NPCEngineManager.ServiceStatusesById
      language: CSharp
      name:
        CSharp: ServiceStatusesById
        VB: ServiceStatusesById
      nameWithType:
        CSharp: NPCEngineManager.ServiceStatusesById
        VB: NPCEngineManager.ServiceStatusesById
      qualifiedName:
        CSharp: NPCEngine.Components.NPCEngineManager.ServiceStatusesById
        VB: NPCEngine.Components.NPCEngineManager.ServiceStatusesById
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Components
      source:
        id: ServiceStatusesById
        path: ''
        startLine: 1927
      syntax:
        content:
          CSharp: public Dictionary<string, ServiceStatus> ServiceStatusesById { get; }
          VB: Public ReadOnly Property ServiceStatusesById As Dictionary(Of String, ServiceStatus)
        parameters: []
        return:
          type: Global.Dictionary{System.String,NPCEngine.API.ServiceStatus}
      overload: NPCEngine.Components.NPCEngineManager.ServiceStatusesById*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: NPCEngine.Components.NPCEngineManager.InferenceEngineProcessId
      commentId: P:NPCEngine.Components.NPCEngineManager.InferenceEngineProcessId
      language: CSharp
      name:
        CSharp: InferenceEngineProcessId
        VB: InferenceEngineProcessId
      nameWithType:
        CSharp: NPCEngineManager.InferenceEngineProcessId
        VB: NPCEngineManager.InferenceEngineProcessId
      qualifiedName:
        CSharp: NPCEngine.Components.NPCEngineManager.InferenceEngineProcessId
        VB: NPCEngine.Components.NPCEngineManager.InferenceEngineProcessId
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Components
      source:
        id: InferenceEngineProcessId
        path: ''
        startLine: 1948
      syntax:
        content:
          CSharp: protected int InferenceEngineProcessId { get; set; }
          VB: Protected Property InferenceEngineProcessId As Integer
        parameters: []
        return:
          type: System.Int32
      overload: NPCEngine.Components.NPCEngineManager.InferenceEngineProcessId*
      modifiers:
        CSharp:
        - protected
        - get
        - set
        VB:
        - Protected
    - id: NPCEngine.Components.NPCEngineManager.InferenceEngineRunning
      commentId: P:NPCEngine.Components.NPCEngineManager.InferenceEngineRunning
      language: CSharp
      name:
        CSharp: InferenceEngineRunning
        VB: InferenceEngineRunning
      nameWithType:
        CSharp: NPCEngineManager.InferenceEngineRunning
        VB: NPCEngineManager.InferenceEngineRunning
      qualifiedName:
        CSharp: NPCEngine.Components.NPCEngineManager.InferenceEngineRunning
        VB: NPCEngine.Components.NPCEngineManager.InferenceEngineRunning
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Components
      source:
        id: InferenceEngineRunning
        path: ''
        startLine: 1971
      syntax:
        content:
          CSharp: public bool InferenceEngineRunning { get; }
          VB: Public ReadOnly Property InferenceEngineRunning As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: NPCEngine.Components.NPCEngineManager.InferenceEngineRunning*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: NPCEngine.Components.NPCEngineManager.StartInferenceEngine
      commentId: M:NPCEngine.Components.NPCEngineManager.StartInferenceEngine
      language: CSharp
      name:
        CSharp: StartInferenceEngine()
        VB: StartInferenceEngine()
      nameWithType:
        CSharp: NPCEngineManager.StartInferenceEngine()
        VB: NPCEngineManager.StartInferenceEngine()
      qualifiedName:
        CSharp: NPCEngine.Components.NPCEngineManager.StartInferenceEngine()
        VB: NPCEngine.Components.NPCEngineManager.StartInferenceEngine()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Components
      source:
        id: StartInferenceEngine
        path: ''
        startLine: 2002
      summary: "\nStarts the inference engine server and managing coroutines.\n"
      example: []
      syntax:
        content:
          CSharp: public void StartInferenceEngine()
          VB: Public Sub StartInferenceEngine
      overload: NPCEngine.Components.NPCEngineManager.StartInferenceEngine*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.Components.NPCEngineManager.DownloadModel(System.String)
      commentId: M:NPCEngine.Components.NPCEngineManager.DownloadModel(System.String)
      language: CSharp
      name:
        CSharp: DownloadModel(String)
        VB: DownloadModel(String)
      nameWithType:
        CSharp: NPCEngineManager.DownloadModel(String)
        VB: NPCEngineManager.DownloadModel(String)
      qualifiedName:
        CSharp: NPCEngine.Components.NPCEngineManager.DownloadModel(System.String)
        VB: NPCEngine.Components.NPCEngineManager.DownloadModel(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Components
      source:
        id: DownloadModel
        path: ''
        startLine: 2099
      summary: "\nDownload model by ID\n"
      example: []
      syntax:
        content:
          CSharp: public void DownloadModel(string id)
          VB: Public Sub DownloadModel(id As String)
        parameters:
        - id: id
          type: System.String
          description: ''
      overload: NPCEngine.Components.NPCEngineManager.DownloadModel*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.Components.NPCEngineManager.StopInferenceEngine
      commentId: M:NPCEngine.Components.NPCEngineManager.StopInferenceEngine
      language: CSharp
      name:
        CSharp: StopInferenceEngine()
        VB: StopInferenceEngine()
      nameWithType:
        CSharp: NPCEngineManager.StopInferenceEngine()
        VB: NPCEngineManager.StopInferenceEngine()
      qualifiedName:
        CSharp: NPCEngine.Components.NPCEngineManager.StopInferenceEngine()
        VB: NPCEngine.Components.NPCEngineManager.StopInferenceEngine()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Components
      source:
        id: StopInferenceEngine
        path: ''
        startLine: 2118
      summary: "\nStop the inference engine server, services and dispose resources.\n"
      example: []
      syntax:
        content:
          CSharp: public void StopInferenceEngine()
          VB: Public Sub StopInferenceEngine
      overload: NPCEngine.Components.NPCEngineManager.StopInferenceEngine*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.Components.NPCEngineManager.GetAPI``1
      commentId: M:NPCEngine.Components.NPCEngineManager.GetAPI``1
      language: CSharp
      name:
        CSharp: GetAPI<T>()
        VB: GetAPI(Of T)()
      nameWithType:
        CSharp: NPCEngineManager.GetAPI<T>()
        VB: NPCEngineManager.GetAPI(Of T)()
      qualifiedName:
        CSharp: NPCEngine.Components.NPCEngineManager.GetAPI<T>()
        VB: NPCEngine.Components.NPCEngineManager.GetAPI(Of T)()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Components
      source:
        id: GetAPI
        path: ''
        startLine: 2215
      summary: "\nGet or construct API for the given type.\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public T GetAPI<T>()

                where T : RPCBase
          VB: Public Function GetAPI(Of T As RPCBase) As T
        typeParameters:
        - id: T
          description: API type
        return:
          type: '{T}'
          description: ''
      overload: NPCEngine.Components.NPCEngineManager.GetAPI*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.Components.NPCEngineManager.GetAPI``1(System.String)
      commentId: M:NPCEngine.Components.NPCEngineManager.GetAPI``1(System.String)
      language: CSharp
      name:
        CSharp: GetAPI<T>(String)
        VB: GetAPI(Of T)(String)
      nameWithType:
        CSharp: NPCEngineManager.GetAPI<T>(String)
        VB: NPCEngineManager.GetAPI(Of T)(String)
      qualifiedName:
        CSharp: NPCEngine.Components.NPCEngineManager.GetAPI<T>(System.String)
        VB: NPCEngine.Components.NPCEngineManager.GetAPI(Of T)(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Components
      source:
        id: GetAPI
        path: ''
        startLine: 2231
      summary: "\nGet or construct API for the given type and service ID.\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public T GetAPI<T>(string id)

                where T : RPCBase
          VB: Public Function GetAPI(Of T As RPCBase)(id As String) As T
        parameters:
        - id: id
          type: System.String
          description: Service ID or otherwise resolvable name
        typeParameters:
        - id: T
          description: API Type
        return:
          type: '{T}'
          description: ''
      overload: NPCEngine.Components.NPCEngineManager.GetAPI*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.Components.NPCEngineManager.StartAndMonitorServerLife
      commentId: M:NPCEngine.Components.NPCEngineManager.StartAndMonitorServerLife
      language: CSharp
      name:
        CSharp: StartAndMonitorServerLife()
        VB: StartAndMonitorServerLife()
      nameWithType:
        CSharp: NPCEngineManager.StartAndMonitorServerLife()
        VB: NPCEngineManager.StartAndMonitorServerLife()
      qualifiedName:
        CSharp: NPCEngine.Components.NPCEngineManager.StartAndMonitorServerLife()
        VB: NPCEngine.Components.NPCEngineManager.StartAndMonitorServerLife()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Components
      source:
        id: StartAndMonitorServerLife
        path: ''
        startLine: 2249
      summary: "\n\n"
      example: []
      syntax:
        content:
          CSharp: public IEnumerator StartAndMonitorServerLife()
          VB: Public Function StartAndMonitorServerLife As IEnumerator
        return:
          type: System.Collections.IEnumerator
      overload: NPCEngine.Components.NPCEngineManager.StartAndMonitorServerLife*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.Components.NPCEngineManager.UpdateServiceStatuses
      commentId: M:NPCEngine.Components.NPCEngineManager.UpdateServiceStatuses
      language: CSharp
      name:
        CSharp: UpdateServiceStatuses()
        VB: UpdateServiceStatuses()
      nameWithType:
        CSharp: NPCEngineManager.UpdateServiceStatuses()
        VB: NPCEngineManager.UpdateServiceStatuses()
      qualifiedName:
        CSharp: NPCEngine.Components.NPCEngineManager.UpdateServiceStatuses()
        VB: NPCEngine.Components.NPCEngineManager.UpdateServiceStatuses()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Components
      source:
        id: UpdateServiceStatuses
        path: ''
        startLine: 2270
      summary: "\nCoroutine that updates service statuses.\n"
      example: []
      syntax:
        content:
          CSharp: public IEnumerator UpdateServiceStatuses()
          VB: Public Function UpdateServiceStatuses As IEnumerator
        return:
          type: System.Collections.IEnumerator
      overload: NPCEngine.Components.NPCEngineManager.UpdateServiceStatuses*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.Components.NPCEngineManager.UpdateServices
      commentId: M:NPCEngine.Components.NPCEngineManager.UpdateServices
      language: CSharp
      name:
        CSharp: UpdateServices()
        VB: UpdateServices()
      nameWithType:
        CSharp: NPCEngineManager.UpdateServices()
        VB: NPCEngineManager.UpdateServices()
      qualifiedName:
        CSharp: NPCEngine.Components.NPCEngineManager.UpdateServices()
        VB: NPCEngine.Components.NPCEngineManager.UpdateServices()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Components
      source:
        id: UpdateServices
        path: ''
        startLine: 2305
      summary: "\nCoroutine that updates service list.\n"
      example: []
      syntax:
        content:
          CSharp: public IEnumerator UpdateServices()
          VB: Public Function UpdateServices As IEnumerator
        return:
          type: System.Collections.IEnumerator
      overload: NPCEngine.Components.NPCEngineManager.UpdateServices*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: NPCEngine.Components.NPCEngineSTT
    commentId: T:NPCEngine.Components.NPCEngineSTT
    language: CSharp
    name:
      CSharp: NPCEngineSTT
      VB: NPCEngineSTT
    nameWithType:
      CSharp: NPCEngineSTT
      VB: NPCEngineSTT
    qualifiedName:
      CSharp: NPCEngine.Components.NPCEngineSTT
      VB: NPCEngine.Components.NPCEngineSTT
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: NPCEngine.Components
    source:
      id: NPCEngineSTT
      path: ''
      startLine: 2332
    syntax:
      content:
        CSharp: 'public class NPCEngineSTT : AbstractSpeechToText'
        VB: >-
          Public Class NPCEngineSTT

              Inherits AbstractSpeechToText
    inheritance:
    - System.Object
    - NPCEngine.Components.AbstractSpeechToText
    inheritedMembers:
    - NPCEngine.Components.AbstractSpeechToText.Context
    - NPCEngine.Components.AbstractSpeechToText.OnSpeechRecognized
    - NPCEngine.Components.AbstractSpeechToText.OnSpeechRecognitionFailed
    - NPCEngine.Components.AbstractSpeechToText.SpeechRecognized(System.String)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: NPCEngine.Components.NPCEngineSTT.CallSpeechToText
      commentId: M:NPCEngine.Components.NPCEngineSTT.CallSpeechToText
      language: CSharp
      name:
        CSharp: CallSpeechToText()
        VB: CallSpeechToText()
      nameWithType:
        CSharp: NPCEngineSTT.CallSpeechToText()
        VB: NPCEngineSTT.CallSpeechToText()
      qualifiedName:
        CSharp: NPCEngine.Components.NPCEngineSTT.CallSpeechToText()
        VB: NPCEngine.Components.NPCEngineSTT.CallSpeechToText()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Components
      source:
        id: CallSpeechToText
        path: ''
        startLine: 2345
      syntax:
        content:
          CSharp: public void CallSpeechToText()
          VB: Public Sub CallSpeechToText
      overload: NPCEngine.Components.NPCEngineSTT.CallSpeechToText*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.Components.NPCEngineSTT.StartListening
      commentId: M:NPCEngine.Components.NPCEngineSTT.StartListening
      language: CSharp
      name:
        CSharp: StartListening()
        VB: StartListening()
      nameWithType:
        CSharp: NPCEngineSTT.StartListening()
        VB: NPCEngineSTT.StartListening()
      qualifiedName:
        CSharp: NPCEngine.Components.NPCEngineSTT.StartListening()
        VB: NPCEngine.Components.NPCEngineSTT.StartListening()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Components
      source:
        id: StartListening
        path: ''
        startLine: 2350
      syntax:
        content:
          CSharp: public override void StartListening()
          VB: Public Overrides Sub StartListening
      overload: NPCEngine.Components.NPCEngineSTT.StartListening*
      overridden: NPCEngine.Components.AbstractSpeechToText.StartListening
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: NPCEngine.Components.NPCEngineSTT.StopListening
      commentId: M:NPCEngine.Components.NPCEngineSTT.StopListening
      language: CSharp
      name:
        CSharp: StopListening()
        VB: StopListening()
      nameWithType:
        CSharp: NPCEngineSTT.StopListening()
        VB: NPCEngineSTT.StopListening()
      qualifiedName:
        CSharp: NPCEngine.Components.NPCEngineSTT.StopListening()
        VB: NPCEngine.Components.NPCEngineSTT.StopListening()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Components
      source:
        id: StopListening
        path: ''
        startLine: 2355
      syntax:
        content:
          CSharp: public override void StopListening()
          VB: Public Overrides Sub StopListening
      overload: NPCEngine.Components.NPCEngineSTT.StopListening*
      overridden: NPCEngine.Components.AbstractSpeechToText.StopListening
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: NPCEngine.Components.PlayerCharacter
    commentId: T:NPCEngine.Components.PlayerCharacter
    language: CSharp
    name:
      CSharp: PlayerCharacter
      VB: PlayerCharacter
    nameWithType:
      CSharp: PlayerCharacter
      VB: PlayerCharacter
    qualifiedName:
      CSharp: NPCEngine.Components.PlayerCharacter
      VB: NPCEngine.Components.PlayerCharacter
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: NPCEngine.Components
    source:
      id: PlayerCharacter
      path: ''
      startLine: 2375
    summary: "\nMonoBehaviour that handles dialogue initiation and passing recognized speech to NPCs.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class PlayerCharacter : Singleton<PlayerCharacter>'
        VB: >-
          Public Class PlayerCharacter

              Inherits Singleton(Of PlayerCharacter)
    inheritance:
    - System.Object
    - NPCEngine.Utility.Singleton{NPCEngine.Components.PlayerCharacter}
    inheritedMembers:
    - NPCEngine.Utility.Singleton{NPCEngine.Components.PlayerCharacter}.Instance
    - NPCEngine.Utility.Singleton{NPCEngine.Components.PlayerCharacter}.GetInstance
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: NPCEngine.Components.PlayerCharacter.currentLocation
      commentId: F:NPCEngine.Components.PlayerCharacter.currentLocation
      language: CSharp
      name:
        CSharp: currentLocation
        VB: currentLocation
      nameWithType:
        CSharp: PlayerCharacter.currentLocation
        VB: PlayerCharacter.currentLocation
      qualifiedName:
        CSharp: NPCEngine.Components.PlayerCharacter.currentLocation
        VB: NPCEngine.Components.PlayerCharacter.currentLocation
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Components
      source:
        id: currentLocation
        path: ''
        startLine: 2386
      summary: "\nLocation description of the player.\n"
      example: []
      syntax:
        content:
          CSharp: public Location currentLocation
          VB: Public currentLocation As Location
        return:
          type: NPCEngine.Components.Location
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.Components.PlayerCharacter.character
      commentId: F:NPCEngine.Components.PlayerCharacter.character
      language: CSharp
      name:
        CSharp: character
        VB: character
      nameWithType:
        CSharp: PlayerCharacter.character
        VB: PlayerCharacter.character
      qualifiedName:
        CSharp: NPCEngine.Components.PlayerCharacter.character
        VB: NPCEngine.Components.PlayerCharacter.character
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Components
      source:
        id: character
        path: ''
        startLine: 2391
      summary: "\nCharacter description of the player.\n"
      example: []
      syntax:
        content:
          CSharp: public Character character
          VB: Public character As Character
        return:
          type: NPCEngine.Components.Character
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.Components.PlayerCharacter.CheckCamera
      commentId: F:NPCEngine.Components.PlayerCharacter.CheckCamera
      language: CSharp
      name:
        CSharp: CheckCamera
        VB: CheckCamera
      nameWithType:
        CSharp: PlayerCharacter.CheckCamera
        VB: PlayerCharacter.CheckCamera
      qualifiedName:
        CSharp: NPCEngine.Components.PlayerCharacter.CheckCamera
        VB: NPCEngine.Components.PlayerCharacter.CheckCamera
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Components
      source:
        id: CheckCamera
        path: ''
        startLine: 2394
      syntax:
        content:
          CSharp: public Camera CheckCamera
          VB: Public CheckCamera As Camera
        return:
          type: Global.Camera
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.Components.PlayerCharacter.MaxRange
      commentId: F:NPCEngine.Components.PlayerCharacter.MaxRange
      language: CSharp
      name:
        CSharp: MaxRange
        VB: MaxRange
      nameWithType:
        CSharp: PlayerCharacter.MaxRange
        VB: PlayerCharacter.MaxRange
      qualifiedName:
        CSharp: NPCEngine.Components.PlayerCharacter.MaxRange
        VB: NPCEngine.Components.PlayerCharacter.MaxRange
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Components
      source:
        id: MaxRange
        path: ''
        startLine: 2397
      syntax:
        content:
          CSharp: public float MaxRange
          VB: Public MaxRange As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.Components.PlayerCharacter.VerticalMargin
      commentId: F:NPCEngine.Components.PlayerCharacter.VerticalMargin
      language: CSharp
      name:
        CSharp: VerticalMargin
        VB: VerticalMargin
      nameWithType:
        CSharp: PlayerCharacter.VerticalMargin
        VB: PlayerCharacter.VerticalMargin
      qualifiedName:
        CSharp: NPCEngine.Components.PlayerCharacter.VerticalMargin
        VB: NPCEngine.Components.PlayerCharacter.VerticalMargin
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Components
      source:
        id: VerticalMargin
        path: ''
        startLine: 2401
      syntax:
        content:
          CSharp: public float VerticalMargin
          VB: Public VerticalMargin As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.Components.PlayerCharacter.HorizontalMargin
      commentId: F:NPCEngine.Components.PlayerCharacter.HorizontalMargin
      language: CSharp
      name:
        CSharp: HorizontalMargin
        VB: HorizontalMargin
      nameWithType:
        CSharp: PlayerCharacter.HorizontalMargin
        VB: PlayerCharacter.HorizontalMargin
      qualifiedName:
        CSharp: NPCEngine.Components.PlayerCharacter.HorizontalMargin
        VB: NPCEngine.Components.PlayerCharacter.HorizontalMargin
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Components
      source:
        id: HorizontalMargin
        path: ''
        startLine: 2405
      syntax:
        content:
          CSharp: public float HorizontalMargin
          VB: Public HorizontalMargin As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.Components.PlayerCharacter.SpeechToText
      commentId: F:NPCEngine.Components.PlayerCharacter.SpeechToText
      language: CSharp
      name:
        CSharp: SpeechToText
        VB: SpeechToText
      nameWithType:
        CSharp: PlayerCharacter.SpeechToText
        VB: PlayerCharacter.SpeechToText
      qualifiedName:
        CSharp: NPCEngine.Components.PlayerCharacter.SpeechToText
        VB: NPCEngine.Components.PlayerCharacter.SpeechToText
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Components
      source:
        id: SpeechToText
        path: ''
        startLine: 2408
      syntax:
        content:
          CSharp: public AbstractSpeechToText SpeechToText
          VB: Public SpeechToText As AbstractSpeechToText
        return:
          type: NPCEngine.Components.AbstractSpeechToText
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.Components.PlayerCharacter.RegisterDialogueCandidate(NPCEngine.Components.NonPlayerCharacter)
      commentId: M:NPCEngine.Components.PlayerCharacter.RegisterDialogueCandidate(NPCEngine.Components.NonPlayerCharacter)
      language: CSharp
      name:
        CSharp: RegisterDialogueCandidate(NonPlayerCharacter)
        VB: RegisterDialogueCandidate(NonPlayerCharacter)
      nameWithType:
        CSharp: PlayerCharacter.RegisterDialogueCandidate(NonPlayerCharacter)
        VB: PlayerCharacter.RegisterDialogueCandidate(NonPlayerCharacter)
      qualifiedName:
        CSharp: NPCEngine.Components.PlayerCharacter.RegisterDialogueCandidate(NPCEngine.Components.NonPlayerCharacter)
        VB: NPCEngine.Components.PlayerCharacter.RegisterDialogueCandidate(NPCEngine.Components.NonPlayerCharacter)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Components
      source:
        id: RegisterDialogueCandidate
        path: ''
        startLine: 2430
      summary: "\nAdds NPC to the list of potential conversants.\n"
      example: []
      syntax:
        content:
          CSharp: public void RegisterDialogueCandidate(NonPlayerCharacter agent)
          VB: Public Sub RegisterDialogueCandidate(agent As NonPlayerCharacter)
        parameters:
        - id: agent
          type: NPCEngine.Components.NonPlayerCharacter
          description: ''
      overload: NPCEngine.Components.PlayerCharacter.RegisterDialogueCandidate*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.Components.PlayerCharacter.DeregisterDialogueCandidate(NPCEngine.Components.NonPlayerCharacter)
      commentId: M:NPCEngine.Components.PlayerCharacter.DeregisterDialogueCandidate(NPCEngine.Components.NonPlayerCharacter)
      language: CSharp
      name:
        CSharp: DeregisterDialogueCandidate(NonPlayerCharacter)
        VB: DeregisterDialogueCandidate(NonPlayerCharacter)
      nameWithType:
        CSharp: PlayerCharacter.DeregisterDialogueCandidate(NonPlayerCharacter)
        VB: PlayerCharacter.DeregisterDialogueCandidate(NonPlayerCharacter)
      qualifiedName:
        CSharp: NPCEngine.Components.PlayerCharacter.DeregisterDialogueCandidate(NPCEngine.Components.NonPlayerCharacter)
        VB: NPCEngine.Components.PlayerCharacter.DeregisterDialogueCandidate(NPCEngine.Components.NonPlayerCharacter)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Components
      source:
        id: DeregisterDialogueCandidate
        path: ''
        startLine: 2439
      summary: "\nRemove NPC from the list of potential conversants.\n"
      example: []
      syntax:
        content:
          CSharp: public void DeregisterDialogueCandidate(NonPlayerCharacter agent)
          VB: Public Sub DeregisterDialogueCandidate(agent As NonPlayerCharacter)
        parameters:
        - id: agent
          type: NPCEngine.Components.NonPlayerCharacter
          description: ''
      overload: NPCEngine.Components.PlayerCharacter.DeregisterDialogueCandidate*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.Components.PlayerCharacter.IsRegistered(NPCEngine.Components.NonPlayerCharacter)
      commentId: M:NPCEngine.Components.PlayerCharacter.IsRegistered(NPCEngine.Components.NonPlayerCharacter)
      language: CSharp
      name:
        CSharp: IsRegistered(NonPlayerCharacter)
        VB: IsRegistered(NonPlayerCharacter)
      nameWithType:
        CSharp: PlayerCharacter.IsRegistered(NonPlayerCharacter)
        VB: PlayerCharacter.IsRegistered(NonPlayerCharacter)
      qualifiedName:
        CSharp: NPCEngine.Components.PlayerCharacter.IsRegistered(NPCEngine.Components.NonPlayerCharacter)
        VB: NPCEngine.Components.PlayerCharacter.IsRegistered(NPCEngine.Components.NonPlayerCharacter)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Components
      source:
        id: IsRegistered
        path: ''
        startLine: 2449
      summary: "\nCheck if NPC is registered as a dialogue candidate.\n"
      example: []
      syntax:
        content:
          CSharp: public bool IsRegistered(NonPlayerCharacter agent)
          VB: Public Function IsRegistered(agent As NonPlayerCharacter) As Boolean
        parameters:
        - id: agent
          type: NPCEngine.Components.NonPlayerCharacter
          description: ''
        return:
          type: System.Boolean
          description: ''
      overload: NPCEngine.Components.PlayerCharacter.IsRegistered*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.Components.PlayerCharacter.CheckIsSeen(Vector3)
      commentId: M:NPCEngine.Components.PlayerCharacter.CheckIsSeen(Vector3)
      language: CSharp
      name:
        CSharp: CheckIsSeen(Vector3)
        VB: CheckIsSeen(Vector3)
      nameWithType:
        CSharp: PlayerCharacter.CheckIsSeen(Vector3)
        VB: PlayerCharacter.CheckIsSeen(Vector3)
      qualifiedName:
        CSharp: NPCEngine.Components.PlayerCharacter.CheckIsSeen(Vector3)
        VB: NPCEngine.Components.PlayerCharacter.CheckIsSeen(Vector3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Components
      source:
        id: CheckIsSeen
        path: ''
        startLine: 2462
      summary: "\nCheck if NPC is seen.\n"
      example: []
      syntax:
        content:
          CSharp: public bool CheckIsSeen(Vector3 dialogAgentPosition)
          VB: Public Function CheckIsSeen(dialogAgentPosition As Vector3) As Boolean
        parameters:
        - id: dialogAgentPosition
          type: Global.Vector3
        return:
          type: System.Boolean
      overload: NPCEngine.Components.PlayerCharacter.CheckIsSeen*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.Components.PlayerCharacter.LeaveDialog
      commentId: M:NPCEngine.Components.PlayerCharacter.LeaveDialog
      language: CSharp
      name:
        CSharp: LeaveDialog()
        VB: LeaveDialog()
      nameWithType:
        CSharp: PlayerCharacter.LeaveDialog()
        VB: PlayerCharacter.LeaveDialog()
      qualifiedName:
        CSharp: NPCEngine.Components.PlayerCharacter.LeaveDialog()
        VB: NPCEngine.Components.PlayerCharacter.LeaveDialog()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Components
      source:
        id: LeaveDialog
        path: ''
        startLine: 2476
      summary: "\nLeave current dialogue.\n"
      example: []
      syntax:
        content:
          CSharp: public void LeaveDialog()
          VB: Public Sub LeaveDialog
      overload: NPCEngine.Components.PlayerCharacter.LeaveDialog*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: NPCEngine.Components.TTSGenerator
    commentId: T:NPCEngine.Components.TTSGenerator
    language: CSharp
    name:
      CSharp: TTSGenerator
      VB: TTSGenerator
    nameWithType:
      CSharp: TTSGenerator
      VB: TTSGenerator
    qualifiedName:
      CSharp: NPCEngine.Components.TTSGenerator
      VB: NPCEngine.Components.TTSGenerator
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: NPCEngine.Components
    source:
      id: TTSGenerator
      path: ''
      startLine: 2556
    summary: "\nScript for generating audio files using text to speech.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class TTSGenerator : MonoBehaviour'
        VB: >-
          Public Class TTSGenerator

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: NPCEngine.Components.TTSGenerator.savePath
      commentId: F:NPCEngine.Components.TTSGenerator.savePath
      language: CSharp
      name:
        CSharp: savePath
        VB: savePath
      nameWithType:
        CSharp: TTSGenerator.savePath
        VB: TTSGenerator.savePath
      qualifiedName:
        CSharp: NPCEngine.Components.TTSGenerator.savePath
        VB: NPCEngine.Components.TTSGenerator.savePath
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Components
      source:
        id: savePath
        path: ''
        startLine: 2558
      syntax:
        content:
          CSharp: public string savePath
          VB: Public savePath As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.Components.TTSGenerator.audioSource
      commentId: F:NPCEngine.Components.TTSGenerator.audioSource
      language: CSharp
      name:
        CSharp: audioSource
        VB: audioSource
      nameWithType:
        CSharp: TTSGenerator.audioSource
        VB: TTSGenerator.audioSource
      qualifiedName:
        CSharp: NPCEngine.Components.TTSGenerator.audioSource
        VB: NPCEngine.Components.TTSGenerator.audioSource
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Components
      source:
        id: audioSource
        path: ''
        startLine: 2559
      syntax:
        content:
          CSharp: public AudioSource audioSource
          VB: Public audioSource As AudioSource
        return:
          type: Global.AudioSource
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.Components.TTSGenerator.voiceId
      commentId: F:NPCEngine.Components.TTSGenerator.voiceId
      language: CSharp
      name:
        CSharp: voiceId
        VB: voiceId
      nameWithType:
        CSharp: TTSGenerator.voiceId
        VB: TTSGenerator.voiceId
      qualifiedName:
        CSharp: NPCEngine.Components.TTSGenerator.voiceId
        VB: NPCEngine.Components.TTSGenerator.voiceId
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Components
      source:
        id: voiceId
        path: ''
        startLine: 2560
      syntax:
        content:
          CSharp: public string voiceId
          VB: Public voiceId As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.Components.TTSGenerator.clip
      commentId: F:NPCEngine.Components.TTSGenerator.clip
      language: CSharp
      name:
        CSharp: clip
        VB: clip
      nameWithType:
        CSharp: TTSGenerator.clip
        VB: TTSGenerator.clip
      qualifiedName:
        CSharp: NPCEngine.Components.TTSGenerator.clip
        VB: NPCEngine.Components.TTSGenerator.clip
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Components
      source:
        id: clip
        path: ''
        startLine: 2562
      syntax:
        content:
          CSharp: public AudioClip clip
          VB: Public clip As AudioClip
        return:
          type: Global.AudioClip
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.Components.TTSGenerator.text
      commentId: F:NPCEngine.Components.TTSGenerator.text
      language: CSharp
      name:
        CSharp: text
        VB: text
      nameWithType:
        CSharp: TTSGenerator.text
        VB: TTSGenerator.text
      qualifiedName:
        CSharp: NPCEngine.Components.TTSGenerator.text
        VB: NPCEngine.Components.TTSGenerator.text
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Components
      source:
        id: text
        path: ''
        startLine: 2564
      syntax:
        content:
          CSharp: public string text
          VB: Public text As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.Components.TTSGenerator.Generating
      commentId: P:NPCEngine.Components.TTSGenerator.Generating
      language: CSharp
      name:
        CSharp: Generating
        VB: Generating
      nameWithType:
        CSharp: TTSGenerator.Generating
        VB: TTSGenerator.Generating
      qualifiedName:
        CSharp: NPCEngine.Components.TTSGenerator.Generating
        VB: NPCEngine.Components.TTSGenerator.Generating
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Components
      source:
        id: Generating
        path: ''
        startLine: 2569
      syntax:
        content:
          CSharp: public bool Generating { get; }
          VB: Public ReadOnly Property Generating As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: NPCEngine.Components.TTSGenerator.Generating*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: NPCEngine.Components.TTSGenerator.Saving
      commentId: P:NPCEngine.Components.TTSGenerator.Saving
      language: CSharp
      name:
        CSharp: Saving
        VB: Saving
      nameWithType:
        CSharp: TTSGenerator.Saving
        VB: TTSGenerator.Saving
      qualifiedName:
        CSharp: NPCEngine.Components.TTSGenerator.Saving
        VB: NPCEngine.Components.TTSGenerator.Saving
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Components
      source:
        id: Saving
        path: ''
        startLine: 2579
      syntax:
        content:
          CSharp: public bool Saving { get; }
          VB: Public ReadOnly Property Saving As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: NPCEngine.Components.TTSGenerator.Saving*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: NPCEngine.Components.TTSGenerator.ResetGeneration
      commentId: M:NPCEngine.Components.TTSGenerator.ResetGeneration
      language: CSharp
      name:
        CSharp: ResetGeneration()
        VB: ResetGeneration()
      nameWithType:
        CSharp: TTSGenerator.ResetGeneration()
        VB: TTSGenerator.ResetGeneration()
      qualifiedName:
        CSharp: NPCEngine.Components.TTSGenerator.ResetGeneration()
        VB: NPCEngine.Components.TTSGenerator.ResetGeneration()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Components
      source:
        id: ResetGeneration
        path: ''
        startLine: 2587
      syntax:
        content:
          CSharp: public void ResetGeneration()
          VB: Public Sub ResetGeneration
      overload: NPCEngine.Components.TTSGenerator.ResetGeneration*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.Components.TTSGenerator.GenerateAudioCoroutine(Action)
      commentId: M:NPCEngine.Components.TTSGenerator.GenerateAudioCoroutine(Action)
      language: CSharp
      name:
        CSharp: GenerateAudioCoroutine(Action)
        VB: GenerateAudioCoroutine(Action)
      nameWithType:
        CSharp: TTSGenerator.GenerateAudioCoroutine(Action)
        VB: TTSGenerator.GenerateAudioCoroutine(Action)
      qualifiedName:
        CSharp: NPCEngine.Components.TTSGenerator.GenerateAudioCoroutine(Action)
        VB: NPCEngine.Components.TTSGenerator.GenerateAudioCoroutine(Action)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Components
      source:
        id: GenerateAudioCoroutine
        path: ''
        startLine: 2593
      syntax:
        content:
          CSharp: public IEnumerator GenerateAudioCoroutine(Action generationReady = null)
          VB: Public Function GenerateAudioCoroutine(generationReady As Action = Nothing) As IEnumerator
        parameters:
        - id: generationReady
          type: Global.Action
        return:
          type: System.Collections.IEnumerator
      overload: NPCEngine.Components.TTSGenerator.GenerateAudioCoroutine*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.Components.TTSGenerator.SaveAudio
      commentId: M:NPCEngine.Components.TTSGenerator.SaveAudio
      language: CSharp
      name:
        CSharp: SaveAudio()
        VB: SaveAudio()
      nameWithType:
        CSharp: TTSGenerator.SaveAudio()
        VB: TTSGenerator.SaveAudio()
      qualifiedName:
        CSharp: NPCEngine.Components.TTSGenerator.SaveAudio()
        VB: NPCEngine.Components.TTSGenerator.SaveAudio()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Components
      source:
        id: SaveAudio
        path: ''
        startLine: 2617
      syntax:
        content:
          CSharp: public IEnumerator SaveAudio()
          VB: Public Function SaveAudio As IEnumerator
        return:
          type: System.Collections.IEnumerator
      overload: NPCEngine.Components.TTSGenerator.SaveAudio*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: NPCEngine.Components.FantasyChatbotContext
    commentId: T:NPCEngine.Components.FantasyChatbotContext
    language: CSharp
    name:
      CSharp: FantasyChatbotContext
      VB: FantasyChatbotContext
    nameWithType:
      CSharp: FantasyChatbotContext
      VB: FantasyChatbotContext
    qualifiedName:
      CSharp: NPCEngine.Components.FantasyChatbotContext
      VB: NPCEngine.Components.FantasyChatbotContext
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: NPCEngine.Components
    source:
      id: FantasyChatbotContext
      path: ''
      startLine: 2644
    summary: "\nText generation context for LIGHT dataset format (2 personas and location)\n"
    example: []
    syntax:
      content:
        CSharp: public class FantasyChatbotContext
        VB: Public Class FantasyChatbotContext
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: NPCEngine.Components.FantasyChatbotContext.location_name
      commentId: F:NPCEngine.Components.FantasyChatbotContext.location_name
      language: CSharp
      name:
        CSharp: location_name
        VB: location_name
      nameWithType:
        CSharp: FantasyChatbotContext.location_name
        VB: FantasyChatbotContext.location_name
      qualifiedName:
        CSharp: NPCEngine.Components.FantasyChatbotContext.location_name
        VB: NPCEngine.Components.FantasyChatbotContext.location_name
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Components
      source:
        id: location_name
        path: ''
        startLine: 2658
      syntax:
        content:
          CSharp: public string location_name
          VB: Public location_name As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.Components.FantasyChatbotContext.location
      commentId: F:NPCEngine.Components.FantasyChatbotContext.location
      language: CSharp
      name:
        CSharp: location
        VB: location
      nameWithType:
        CSharp: FantasyChatbotContext.location
        VB: FantasyChatbotContext.location
      qualifiedName:
        CSharp: NPCEngine.Components.FantasyChatbotContext.location
        VB: NPCEngine.Components.FantasyChatbotContext.location
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Components
      source:
        id: location
        path: ''
        startLine: 2659
      syntax:
        content:
          CSharp: public string location
          VB: Public location As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.Components.FantasyChatbotContext.name
      commentId: F:NPCEngine.Components.FantasyChatbotContext.name
      language: CSharp
      name:
        CSharp: name
        VB: name
      nameWithType:
        CSharp: FantasyChatbotContext.name
        VB: FantasyChatbotContext.name
      qualifiedName:
        CSharp: NPCEngine.Components.FantasyChatbotContext.name
        VB: NPCEngine.Components.FantasyChatbotContext.name
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Components
      source:
        id: name
        path: ''
        startLine: 2660
      syntax:
        content:
          CSharp: public string name
          VB: Public name As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.Components.FantasyChatbotContext.persona
      commentId: F:NPCEngine.Components.FantasyChatbotContext.persona
      language: CSharp
      name:
        CSharp: persona
        VB: persona
      nameWithType:
        CSharp: FantasyChatbotContext.persona
        VB: FantasyChatbotContext.persona
      qualifiedName:
        CSharp: NPCEngine.Components.FantasyChatbotContext.persona
        VB: NPCEngine.Components.FantasyChatbotContext.persona
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Components
      source:
        id: persona
        path: ''
        startLine: 2661
      syntax:
        content:
          CSharp: public string persona
          VB: Public persona As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.Components.FantasyChatbotContext.other_name
      commentId: F:NPCEngine.Components.FantasyChatbotContext.other_name
      language: CSharp
      name:
        CSharp: other_name
        VB: other_name
      nameWithType:
        CSharp: FantasyChatbotContext.other_name
        VB: FantasyChatbotContext.other_name
      qualifiedName:
        CSharp: NPCEngine.Components.FantasyChatbotContext.other_name
        VB: NPCEngine.Components.FantasyChatbotContext.other_name
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Components
      source:
        id: other_name
        path: ''
        startLine: 2662
      syntax:
        content:
          CSharp: public string other_name
          VB: Public other_name As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.Components.FantasyChatbotContext.other_persona
      commentId: F:NPCEngine.Components.FantasyChatbotContext.other_persona
      language: CSharp
      name:
        CSharp: other_persona
        VB: other_persona
      nameWithType:
        CSharp: FantasyChatbotContext.other_persona
        VB: FantasyChatbotContext.other_persona
      qualifiedName:
        CSharp: NPCEngine.Components.FantasyChatbotContext.other_persona
        VB: NPCEngine.Components.FantasyChatbotContext.other_persona
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Components
      source:
        id: other_persona
        path: ''
        startLine: 2663
      syntax:
        content:
          CSharp: public string other_persona
          VB: Public other_persona As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.Components.FantasyChatbotContext.history
      commentId: F:NPCEngine.Components.FantasyChatbotContext.history
      language: CSharp
      name:
        CSharp: history
        VB: history
      nameWithType:
        CSharp: FantasyChatbotContext.history
        VB: FantasyChatbotContext.history
      qualifiedName:
        CSharp: NPCEngine.Components.FantasyChatbotContext.history
        VB: NPCEngine.Components.FantasyChatbotContext.history
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Components
      source:
        id: history
        path: ''
        startLine: 2665
      syntax:
        content:
          CSharp: public List<ChatLine> history
          VB: Public history As List(Of ChatLine)
        return:
          type: Global.List{NPCEngine.Components.ChatLine}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: NPCEngine.Components.ChatLine
    commentId: T:NPCEngine.Components.ChatLine
    language: CSharp
    name:
      CSharp: ChatLine
      VB: ChatLine
    nameWithType:
      CSharp: ChatLine
      VB: ChatLine
    qualifiedName:
      CSharp: NPCEngine.Components.ChatLine
      VB: NPCEngine.Components.ChatLine
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: NPCEngine.Components
    source:
      id: ChatLine
      path: ''
      startLine: 2669
    syntax:
      content:
        CSharp: public class ChatLine
        VB: Public Class ChatLine
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: NPCEngine.Components.ChatLine.speaker
      commentId: F:NPCEngine.Components.ChatLine.speaker
      language: CSharp
      name:
        CSharp: speaker
        VB: speaker
      nameWithType:
        CSharp: ChatLine.speaker
        VB: ChatLine.speaker
      qualifiedName:
        CSharp: NPCEngine.Components.ChatLine.speaker
        VB: NPCEngine.Components.ChatLine.speaker
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Components
      source:
        id: speaker
        path: ''
        startLine: 2672
      syntax:
        content:
          CSharp: public string speaker
          VB: Public speaker As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.Components.ChatLine.line
      commentId: F:NPCEngine.Components.ChatLine.line
      language: CSharp
      name:
        CSharp: line
        VB: line
      nameWithType:
        CSharp: ChatLine.line
        VB: ChatLine.line
      qualifiedName:
        CSharp: NPCEngine.Components.ChatLine.line
        VB: NPCEngine.Components.ChatLine.line
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Components
      source:
        id: line
        path: ''
        startLine: 2673
      syntax:
        content:
          CSharp: public string line
          VB: Public line As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: NPCEngine.Components.FantasyChatbotTextGeneration
    commentId: T:NPCEngine.Components.FantasyChatbotTextGeneration
    language: CSharp
    name:
      CSharp: FantasyChatbotTextGeneration
      VB: FantasyChatbotTextGeneration
    nameWithType:
      CSharp: FantasyChatbotTextGeneration
      VB: FantasyChatbotTextGeneration
    qualifiedName:
      CSharp: NPCEngine.Components.FantasyChatbotTextGeneration
      VB: NPCEngine.Components.FantasyChatbotTextGeneration
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: NPCEngine.Components
    source:
      id: FantasyChatbotTextGeneration
      path: ''
      startLine: 2687
    summary: "\nSpecific Monobehaviour to exclude templating from the class.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class FantasyChatbotTextGeneration : TextGeneration<FantasyChatbotContext>'
        VB: >-
          Public Class FantasyChatbotTextGeneration

              Inherits TextGeneration(Of FantasyChatbotContext)
    inheritance:
    - System.Object
    - NPCEngine.API.TextGeneration{NPCEngine.Components.FantasyChatbotContext}
    inheritedMembers:
    - NPCEngine.API.TextGeneration{NPCEngine.Components.FantasyChatbotContext}.GenerateReply(NPCEngine.Components.FantasyChatbotContext,System.Single,System.Int32,System.Int32,Action{System.String},Action{NPCEngine.NPCEngineException})
    - NPCEngine.API.TextGeneration{NPCEngine.Components.FantasyChatbotContext}.GetSpecialTokens(Action{Dictionary{System.String,System.String}},Action{NPCEngine.NPCEngineException})
    - NPCEngine.API.TextGeneration{NPCEngine.Components.FantasyChatbotContext}.GetPromptTemplate(Action{System.String},Action{NPCEngine.NPCEngineException})
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
- id: NPCEngine.RPC
  commentId: N:NPCEngine.RPC
  language: CSharp
  name:
    CSharp: NPCEngine.RPC
    VB: NPCEngine.RPC
  nameWithType:
    CSharp: NPCEngine.RPC
    VB: NPCEngine.RPC
  qualifiedName:
    CSharp: NPCEngine.RPC
    VB: NPCEngine.RPC
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: NPCEngine.RPC.RPCBase
    commentId: T:NPCEngine.RPC.RPCBase
    language: CSharp
    name:
      CSharp: RPCBase
      VB: RPCBase
    nameWithType:
      CSharp: RPCBase
      VB: RPCBase
    qualifiedName:
      CSharp: NPCEngine.RPC.RPCBase
      VB: NPCEngine.RPC.RPCBase
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: NPCEngine.RPC
    source:
      id: RPCBase
      path: ''
      startLine: 4037
    syntax:
      content:
        CSharp: 'public abstract class RPCBase : MonoBehaviour'
        VB: >-
          Public MustInherit Class RPCBase

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - abstract
      - class
      VB:
      - Public
      - MustInherit
      - Class
    items:
    - id: NPCEngine.RPC.RPCBase.serviceId
      commentId: F:NPCEngine.RPC.RPCBase.serviceId
      language: CSharp
      name:
        CSharp: serviceId
        VB: serviceId
      nameWithType:
        CSharp: RPCBase.serviceId
        VB: RPCBase.serviceId
      qualifiedName:
        CSharp: NPCEngine.RPC.RPCBase.serviceId
        VB: NPCEngine.RPC.RPCBase.serviceId
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.RPC
      source:
        id: serviceId
        path: ''
        startLine: 4044
      syntax:
        content:
          CSharp: public string serviceId
          VB: Public serviceId As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.RPC.RPCBase.Run``2(String,``0,Action{``1},Action{NPCEngine.NPCEngineException})
      commentId: M:NPCEngine.RPC.RPCBase.Run``2(String,``0,Action{``1},Action{NPCEngine.NPCEngineException})
      language: CSharp
      name:
        CSharp: Run<P, R>(String, P, Action<R>, Action<NPCEngineException>)
        VB: Run(Of P, R)(String, P, Action(Of R), Action(Of NPCEngineException))
      nameWithType:
        CSharp: RPCBase.Run<P, R>(String, P, Action<R>, Action<NPCEngineException>)
        VB: RPCBase.Run(Of P, R)(String, P, Action(Of R), Action(Of NPCEngineException))
      qualifiedName:
        CSharp: NPCEngine.RPC.RPCBase.Run<P, R>(String, P, Action<R>, Action<NPCEngine.NPCEngineException>)
        VB: NPCEngine.RPC.RPCBase.Run(Of P, R)(String, P, Action(Of R), Action(Of NPCEngine.NPCEngineException))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.RPC
      source:
        id: Run
        path: ''
        startLine: 4049
      syntax:
        content:
          CSharp: >-
            public IEnumerator Run<P, R>(String methodName, P parameters, Action<R> resultCallback, Action<NPCEngineException> errorCallback)

                where P : new()
          VB: Public Function Run(Of P As New, R)(methodName As String, parameters As P, resultCallback As Action(Of R), errorCallback As Action(Of NPCEngineException)) As IEnumerator
        parameters:
        - id: methodName
          type: Global.String
        - id: parameters
          type: '{P}'
        - id: resultCallback
          type: Global.Action{{R}}
        - id: errorCallback
          type: Global.Action{NPCEngine.NPCEngineException}
        typeParameters:
        - id: P
        - id: R
        return:
          type: System.Collections.IEnumerator
      overload: NPCEngine.RPC.RPCBase.Run*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.RPC.RPCBase.UpdateServerType
      commentId: M:NPCEngine.RPC.RPCBase.UpdateServerType
      language: CSharp
      name:
        CSharp: UpdateServerType()
        VB: UpdateServerType()
      nameWithType:
        CSharp: RPCBase.UpdateServerType()
        VB: RPCBase.UpdateServerType()
      qualifiedName:
        CSharp: NPCEngine.RPC.RPCBase.UpdateServerType()
        VB: NPCEngine.RPC.RPCBase.UpdateServerType()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.RPC
      source:
        id: UpdateServerType
        path: ''
        startLine: 4151
      syntax:
        content:
          CSharp: public void UpdateServerType()
          VB: Public Sub UpdateServerType
      overload: NPCEngine.RPC.RPCBase.UpdateServerType*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: NPCEngine.RPC.RequestDispatcherImpl
    commentId: T:NPCEngine.RPC.RequestDispatcherImpl
    language: CSharp
    name:
      CSharp: RequestDispatcherImpl
      VB: RequestDispatcherImpl
    nameWithType:
      CSharp: RequestDispatcherImpl
      VB: RequestDispatcherImpl
    qualifiedName:
      CSharp: NPCEngine.RPC.RequestDispatcherImpl
      VB: NPCEngine.RPC.RequestDispatcherImpl
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: NPCEngine.RPC
    source:
      id: RequestDispatcherImpl
      path: ''
      startLine: 4187
    summary: "\nAbstract class for RPC loop.\n"
    example: []
    syntax:
      content:
        CSharp: public abstract class RequestDispatcherImpl
        VB: Public MustInherit Class RequestDispatcherImpl
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - abstract
      - class
      VB:
      - Public
      - MustInherit
      - Class
    items:
    - id: NPCEngine.RPC.RequestDispatcherImpl.id
      commentId: F:NPCEngine.RPC.RequestDispatcherImpl.id
      language: CSharp
      name:
        CSharp: id
        VB: id
      nameWithType:
        CSharp: RequestDispatcherImpl.id
        VB: RequestDispatcherImpl.id
      qualifiedName:
        CSharp: NPCEngine.RPC.RequestDispatcherImpl.id
        VB: NPCEngine.RPC.RequestDispatcherImpl.id
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.RPC
      source:
        id: id
        path: ''
        startLine: 4189
      syntax:
        content:
          CSharp: protected string id
          VB: Protected id As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: NPCEngine.RPC.RequestDispatcherImpl.address
      commentId: F:NPCEngine.RPC.RequestDispatcherImpl.address
      language: CSharp
      name:
        CSharp: address
        VB: address
      nameWithType:
        CSharp: RequestDispatcherImpl.address
        VB: RequestDispatcherImpl.address
      qualifiedName:
        CSharp: NPCEngine.RPC.RequestDispatcherImpl.address
        VB: NPCEngine.RPC.RequestDispatcherImpl.address
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.RPC
      source:
        id: address
        path: ''
        startLine: 4190
      syntax:
        content:
          CSharp: protected string address
          VB: Protected address As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: NPCEngine.RPC.RequestDispatcherImpl.#ctor(System.String,System.String)
      commentId: M:NPCEngine.RPC.RequestDispatcherImpl.#ctor(System.String,System.String)
      language: CSharp
      name:
        CSharp: RequestDispatcherImpl(String, String)
        VB: RequestDispatcherImpl(String, String)
      nameWithType:
        CSharp: RequestDispatcherImpl.RequestDispatcherImpl(String, String)
        VB: RequestDispatcherImpl.RequestDispatcherImpl(String, String)
      qualifiedName:
        CSharp: NPCEngine.RPC.RequestDispatcherImpl.RequestDispatcherImpl(System.String, System.String)
        VB: NPCEngine.RPC.RequestDispatcherImpl.RequestDispatcherImpl(System.String, System.String)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.RPC
      source:
        id: .ctor
        path: ''
        startLine: 4191
      syntax:
        content:
          CSharp: public RequestDispatcherImpl(string address, string id)
          VB: Public Sub New(address As String, id As String)
        parameters:
        - id: address
          type: System.String
        - id: id
          type: System.String
      overload: NPCEngine.RPC.RequestDispatcherImpl.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.RPC.RequestDispatcherImpl.DispatchRequestCoroutine(NPCEngine.RPC.Request)
      commentId: M:NPCEngine.RPC.RequestDispatcherImpl.DispatchRequestCoroutine(NPCEngine.RPC.Request)
      language: CSharp
      name:
        CSharp: DispatchRequestCoroutine(Request)
        VB: DispatchRequestCoroutine(Request)
      nameWithType:
        CSharp: RequestDispatcherImpl.DispatchRequestCoroutine(Request)
        VB: RequestDispatcherImpl.DispatchRequestCoroutine(Request)
      qualifiedName:
        CSharp: NPCEngine.RPC.RequestDispatcherImpl.DispatchRequestCoroutine(NPCEngine.RPC.Request)
        VB: NPCEngine.RPC.RequestDispatcherImpl.DispatchRequestCoroutine(NPCEngine.RPC.Request)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.RPC
      source:
        id: DispatchRequestCoroutine
        path: ''
        startLine: 4196
      syntax:
        content:
          CSharp: public abstract IEnumerator DispatchRequestCoroutine(Request task)
          VB: Public MustOverride Function DispatchRequestCoroutine(task As Request) As IEnumerator
        parameters:
        - id: task
          type: NPCEngine.RPC.Request
        return:
          type: System.Collections.IEnumerator
      overload: NPCEngine.RPC.RequestDispatcherImpl.DispatchRequestCoroutine*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
  - id: NPCEngine.RPC.APICommunicatorZMQImpl
    commentId: T:NPCEngine.RPC.APICommunicatorZMQImpl
    language: CSharp
    name:
      CSharp: APICommunicatorZMQImpl
      VB: APICommunicatorZMQImpl
    nameWithType:
      CSharp: APICommunicatorZMQImpl
      VB: APICommunicatorZMQImpl
    qualifiedName:
      CSharp: NPCEngine.RPC.APICommunicatorZMQImpl
      VB: NPCEngine.RPC.APICommunicatorZMQImpl
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: NPCEngine.RPC
    source:
      id: APICommunicatorZMQImpl
      path: ''
      startLine: 4202
    summary: "\nRPC loop implementation for ZMQ protocol.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class APICommunicatorZMQImpl : RequestDispatcherImpl'
        VB: >-
          Public Class APICommunicatorZMQImpl

              Inherits RequestDispatcherImpl
    inheritance:
    - System.Object
    - NPCEngine.RPC.RequestDispatcherImpl
    inheritedMembers:
    - NPCEngine.RPC.RequestDispatcherImpl.id
    - NPCEngine.RPC.RequestDispatcherImpl.address
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: NPCEngine.RPC.APICommunicatorZMQImpl.#ctor(System.String,System.String)
      commentId: M:NPCEngine.RPC.APICommunicatorZMQImpl.#ctor(System.String,System.String)
      language: CSharp
      name:
        CSharp: APICommunicatorZMQImpl(String, String)
        VB: APICommunicatorZMQImpl(String, String)
      nameWithType:
        CSharp: APICommunicatorZMQImpl.APICommunicatorZMQImpl(String, String)
        VB: APICommunicatorZMQImpl.APICommunicatorZMQImpl(String, String)
      qualifiedName:
        CSharp: NPCEngine.RPC.APICommunicatorZMQImpl.APICommunicatorZMQImpl(System.String, System.String)
        VB: NPCEngine.RPC.APICommunicatorZMQImpl.APICommunicatorZMQImpl(System.String, System.String)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.RPC
      source:
        id: .ctor
        path: ''
        startLine: 4206
      syntax:
        content:
          CSharp: public APICommunicatorZMQImpl(string address, string id)
          VB: Public Sub New(address As String, id As String)
        parameters:
        - id: address
          type: System.String
        - id: id
          type: System.String
      overload: NPCEngine.RPC.APICommunicatorZMQImpl.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.RPC.APICommunicatorZMQImpl.Finalize
      commentId: M:NPCEngine.RPC.APICommunicatorZMQImpl.Finalize
      language: CSharp
      name:
        CSharp: Finalize()
        VB: Finalize()
      nameWithType:
        CSharp: APICommunicatorZMQImpl.Finalize()
        VB: APICommunicatorZMQImpl.Finalize()
      qualifiedName:
        CSharp: NPCEngine.RPC.APICommunicatorZMQImpl.Finalize()
        VB: NPCEngine.RPC.APICommunicatorZMQImpl.Finalize()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.RPC
      source:
        id: Finalize
        path: ''
        startLine: 4216
      syntax:
        content:
          CSharp: protected void Finalize()
          VB: Protected Sub Finalize
      overload: NPCEngine.RPC.APICommunicatorZMQImpl.Finalize*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: NPCEngine.RPC.APICommunicatorZMQImpl.DispatchRequestCoroutine(NPCEngine.RPC.Request)
      commentId: M:NPCEngine.RPC.APICommunicatorZMQImpl.DispatchRequestCoroutine(NPCEngine.RPC.Request)
      language: CSharp
      name:
        CSharp: DispatchRequestCoroutine(Request)
        VB: DispatchRequestCoroutine(Request)
      nameWithType:
        CSharp: APICommunicatorZMQImpl.DispatchRequestCoroutine(Request)
        VB: APICommunicatorZMQImpl.DispatchRequestCoroutine(Request)
      qualifiedName:
        CSharp: NPCEngine.RPC.APICommunicatorZMQImpl.DispatchRequestCoroutine(NPCEngine.RPC.Request)
        VB: NPCEngine.RPC.APICommunicatorZMQImpl.DispatchRequestCoroutine(NPCEngine.RPC.Request)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.RPC
      source:
        id: DispatchRequestCoroutine
        path: ''
        startLine: 4222
      syntax:
        content:
          CSharp: public override IEnumerator DispatchRequestCoroutine(Request task)
          VB: Public Overrides Function DispatchRequestCoroutine(task As Request) As IEnumerator
        parameters:
        - id: task
          type: NPCEngine.RPC.Request
        return:
          type: System.Collections.IEnumerator
      overload: NPCEngine.RPC.APICommunicatorZMQImpl.DispatchRequestCoroutine*
      overridden: NPCEngine.RPC.RequestDispatcherImpl.DispatchRequestCoroutine(NPCEngine.RPC.Request)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: NPCEngine.RPC.APICommunicatorHTTPImpl
    commentId: T:NPCEngine.RPC.APICommunicatorHTTPImpl
    language: CSharp
    name:
      CSharp: APICommunicatorHTTPImpl
      VB: APICommunicatorHTTPImpl
    nameWithType:
      CSharp: APICommunicatorHTTPImpl
      VB: APICommunicatorHTTPImpl
    qualifiedName:
      CSharp: NPCEngine.RPC.APICommunicatorHTTPImpl
      VB: NPCEngine.RPC.APICommunicatorHTTPImpl
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: NPCEngine.RPC
    source:
      id: APICommunicatorHTTPImpl
      path: ''
      startLine: 4242
    summary: "\nRPC loop implementation for HTTP protocol.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class APICommunicatorHTTPImpl : RequestDispatcherImpl'
        VB: >-
          Public Class APICommunicatorHTTPImpl

              Inherits RequestDispatcherImpl
    inheritance:
    - System.Object
    - NPCEngine.RPC.RequestDispatcherImpl
    inheritedMembers:
    - NPCEngine.RPC.RequestDispatcherImpl.id
    - NPCEngine.RPC.RequestDispatcherImpl.address
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: NPCEngine.RPC.APICommunicatorHTTPImpl.#ctor(System.String,System.String)
      commentId: M:NPCEngine.RPC.APICommunicatorHTTPImpl.#ctor(System.String,System.String)
      language: CSharp
      name:
        CSharp: APICommunicatorHTTPImpl(String, String)
        VB: APICommunicatorHTTPImpl(String, String)
      nameWithType:
        CSharp: APICommunicatorHTTPImpl.APICommunicatorHTTPImpl(String, String)
        VB: APICommunicatorHTTPImpl.APICommunicatorHTTPImpl(String, String)
      qualifiedName:
        CSharp: NPCEngine.RPC.APICommunicatorHTTPImpl.APICommunicatorHTTPImpl(System.String, System.String)
        VB: NPCEngine.RPC.APICommunicatorHTTPImpl.APICommunicatorHTTPImpl(System.String, System.String)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.RPC
      source:
        id: .ctor
        path: ''
        startLine: 4245
      syntax:
        content:
          CSharp: public APICommunicatorHTTPImpl(string address, string id)
          VB: Public Sub New(address As String, id As String)
        parameters:
        - id: address
          type: System.String
        - id: id
          type: System.String
      overload: NPCEngine.RPC.APICommunicatorHTTPImpl.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.RPC.APICommunicatorHTTPImpl.DispatchRequestCoroutine(NPCEngine.RPC.Request)
      commentId: M:NPCEngine.RPC.APICommunicatorHTTPImpl.DispatchRequestCoroutine(NPCEngine.RPC.Request)
      language: CSharp
      name:
        CSharp: DispatchRequestCoroutine(Request)
        VB: DispatchRequestCoroutine(Request)
      nameWithType:
        CSharp: APICommunicatorHTTPImpl.DispatchRequestCoroutine(Request)
        VB: APICommunicatorHTTPImpl.DispatchRequestCoroutine(Request)
      qualifiedName:
        CSharp: NPCEngine.RPC.APICommunicatorHTTPImpl.DispatchRequestCoroutine(NPCEngine.RPC.Request)
        VB: NPCEngine.RPC.APICommunicatorHTTPImpl.DispatchRequestCoroutine(NPCEngine.RPC.Request)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.RPC
      source:
        id: DispatchRequestCoroutine
        path: ''
        startLine: 4262
      syntax:
        content:
          CSharp: public override IEnumerator DispatchRequestCoroutine(Request task)
          VB: Public Overrides Function DispatchRequestCoroutine(task As Request) As IEnumerator
        parameters:
        - id: task
          type: NPCEngine.RPC.Request
        return:
          type: System.Collections.IEnumerator
      overload: NPCEngine.RPC.APICommunicatorHTTPImpl.DispatchRequestCoroutine*
      overridden: NPCEngine.RPC.RequestDispatcherImpl.DispatchRequestCoroutine(NPCEngine.RPC.Request)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: NPCEngine.RPC.Request
    commentId: T:NPCEngine.RPC.Request
    language: CSharp
    name:
      CSharp: Request
      VB: Request
    nameWithType:
      CSharp: Request
      VB: Request
    qualifiedName:
      CSharp: NPCEngine.RPC.Request
      VB: NPCEngine.RPC.Request
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: NPCEngine.RPC
    source:
      id: Request
      path: ''
      startLine: 4349
    syntax:
      content:
        CSharp: 'public class Request : Tuple<string, Action<string>>'
        VB: >-
          Public Class Request

              Inherits Tuple(Of String, Action(Of String))
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: NPCEngine.RPC.Request.#ctor(System.String,Action{System.String})
      commentId: M:NPCEngine.RPC.Request.#ctor(System.String,Action{System.String})
      language: CSharp
      name:
        CSharp: Request(String, Action<String>)
        VB: Request(String, Action(Of String))
      nameWithType:
        CSharp: Request.Request(String, Action<String>)
        VB: Request.Request(String, Action(Of String))
      qualifiedName:
        CSharp: NPCEngine.RPC.Request.Request(System.String, Action<System.String>)
        VB: NPCEngine.RPC.Request.Request(System.String, Action(Of System.String))
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.RPC
      source:
        id: .ctor
        path: ''
        startLine: 4351
      syntax:
        content:
          CSharp: public Request(string key, Action<string> action)
          VB: Public Sub New(key As String, action As Action(Of String))
        parameters:
        - id: key
          type: System.String
        - id: action
          type: Global.Action{System.String}
      overload: NPCEngine.RPC.Request.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: NPCEngine.RPC.RPCRequestMessage`1
    commentId: T:NPCEngine.RPC.RPCRequestMessage`1
    language: CSharp
    name:
      CSharp: RPCRequestMessage<ParametersType>
      VB: RPCRequestMessage(Of ParametersType)
    nameWithType:
      CSharp: RPCRequestMessage<ParametersType>
      VB: RPCRequestMessage(Of ParametersType)
    qualifiedName:
      CSharp: NPCEngine.RPC.RPCRequestMessage<ParametersType>
      VB: NPCEngine.RPC.RPCRequestMessage(Of ParametersType)
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: NPCEngine.RPC
    source:
      id: RPCRequestMessage
      path: ''
      startLine: 4360
    summary: "\nJSON RPC request message.\n"
    example: []
    syntax:
      content:
        CSharp: >-
          public class RPCRequestMessage<ParametersType>

              where ParametersType : new()
        VB: Public Class RPCRequestMessage(Of ParametersType As New)
      typeParameters:
      - id: ParametersType
        description: ''
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: NPCEngine.RPC.RPCRequestMessage`1.id
      commentId: F:NPCEngine.RPC.RPCRequestMessage`1.id
      language: CSharp
      name:
        CSharp: id
        VB: id
      nameWithType:
        CSharp: RPCRequestMessage<ParametersType>.id
        VB: RPCRequestMessage(Of ParametersType).id
      qualifiedName:
        CSharp: NPCEngine.RPC.RPCRequestMessage<ParametersType>.id
        VB: NPCEngine.RPC.RPCRequestMessage(Of ParametersType).id
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.RPC
      source:
        id: id
        path: ''
        startLine: 4364
      syntax:
        content:
          CSharp: public int id
          VB: Public id As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.RPC.RPCRequestMessage`1.jsonrpc
      commentId: F:NPCEngine.RPC.RPCRequestMessage`1.jsonrpc
      language: CSharp
      name:
        CSharp: jsonrpc
        VB: jsonrpc
      nameWithType:
        CSharp: RPCRequestMessage<ParametersType>.jsonrpc
        VB: RPCRequestMessage(Of ParametersType).jsonrpc
      qualifiedName:
        CSharp: NPCEngine.RPC.RPCRequestMessage<ParametersType>.jsonrpc
        VB: NPCEngine.RPC.RPCRequestMessage(Of ParametersType).jsonrpc
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.RPC
      source:
        id: jsonrpc
        path: ''
        startLine: 4365
      syntax:
        content:
          CSharp: public String jsonrpc
          VB: Public jsonrpc As String
        return:
          type: Global.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.RPC.RPCRequestMessage`1.method
      commentId: F:NPCEngine.RPC.RPCRequestMessage`1.method
      language: CSharp
      name:
        CSharp: method
        VB: method
      nameWithType:
        CSharp: RPCRequestMessage<ParametersType>.method
        VB: RPCRequestMessage(Of ParametersType).method
      qualifiedName:
        CSharp: NPCEngine.RPC.RPCRequestMessage<ParametersType>.method
        VB: NPCEngine.RPC.RPCRequestMessage(Of ParametersType).method
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.RPC
      source:
        id: method
        path: ''
        startLine: 4366
      syntax:
        content:
          CSharp: public String method
          VB: Public method As String
        return:
          type: Global.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.RPC.RPCRequestMessage`1.parameters
      commentId: F:NPCEngine.RPC.RPCRequestMessage`1.parameters
      language: CSharp
      name:
        CSharp: parameters
        VB: parameters
      nameWithType:
        CSharp: RPCRequestMessage<ParametersType>.parameters
        VB: RPCRequestMessage(Of ParametersType).parameters
      qualifiedName:
        CSharp: NPCEngine.RPC.RPCRequestMessage<ParametersType>.parameters
        VB: NPCEngine.RPC.RPCRequestMessage(Of ParametersType).parameters
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.RPC
      source:
        id: parameters
        path: ''
        startLine: 4369
      syntax:
        content:
          CSharp: public ParametersType parameters
          VB: Public parameters As ParametersType
        return:
          type: '{ParametersType}'
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.RPC.RPCRequestMessage`1.#ctor
      commentId: M:NPCEngine.RPC.RPCRequestMessage`1.#ctor
      language: CSharp
      name:
        CSharp: RPCRequestMessage()
        VB: RPCRequestMessage()
      nameWithType:
        CSharp: RPCRequestMessage<ParametersType>.RPCRequestMessage()
        VB: RPCRequestMessage(Of ParametersType).RPCRequestMessage()
      qualifiedName:
        CSharp: NPCEngine.RPC.RPCRequestMessage<ParametersType>.RPCRequestMessage()
        VB: NPCEngine.RPC.RPCRequestMessage(Of ParametersType).RPCRequestMessage()
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.RPC
      source:
        id: .ctor
        path: ''
        startLine: 4371
      syntax:
        content:
          CSharp: public RPCRequestMessage()
          VB: Public Sub New
      overload: NPCEngine.RPC.RPCRequestMessage`1.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: NPCEngine.RPC.RPCResponseMessage`1
    commentId: T:NPCEngine.RPC.RPCResponseMessage`1
    language: CSharp
    name:
      CSharp: RPCResponseMessage<ReturnType>
      VB: RPCResponseMessage(Of ReturnType)
    nameWithType:
      CSharp: RPCResponseMessage<ReturnType>
      VB: RPCResponseMessage(Of ReturnType)
    qualifiedName:
      CSharp: NPCEngine.RPC.RPCResponseMessage<ReturnType>
      VB: NPCEngine.RPC.RPCResponseMessage(Of ReturnType)
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: NPCEngine.RPC
    source:
      id: RPCResponseMessage
      path: ''
      startLine: 4383
    summary: "\nJSON RPC response message.\n"
    example: []
    syntax:
      content:
        CSharp: public class RPCResponseMessage<ReturnType>
        VB: Public Class RPCResponseMessage(Of ReturnType)
      typeParameters:
      - id: ReturnType
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: NPCEngine.RPC.RPCResponseMessage`1.id
      commentId: F:NPCEngine.RPC.RPCResponseMessage`1.id
      language: CSharp
      name:
        CSharp: id
        VB: id
      nameWithType:
        CSharp: RPCResponseMessage<ReturnType>.id
        VB: RPCResponseMessage(Of ReturnType).id
      qualifiedName:
        CSharp: NPCEngine.RPC.RPCResponseMessage<ReturnType>.id
        VB: NPCEngine.RPC.RPCResponseMessage(Of ReturnType).id
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.RPC
      source:
        id: id
        path: ''
        startLine: 4386
      syntax:
        content:
          CSharp: public int id
          VB: Public id As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.RPC.RPCResponseMessage`1.jsonrpc
      commentId: F:NPCEngine.RPC.RPCResponseMessage`1.jsonrpc
      language: CSharp
      name:
        CSharp: jsonrpc
        VB: jsonrpc
      nameWithType:
        CSharp: RPCResponseMessage<ReturnType>.jsonrpc
        VB: RPCResponseMessage(Of ReturnType).jsonrpc
      qualifiedName:
        CSharp: NPCEngine.RPC.RPCResponseMessage<ReturnType>.jsonrpc
        VB: NPCEngine.RPC.RPCResponseMessage(Of ReturnType).jsonrpc
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.RPC
      source:
        id: jsonrpc
        path: ''
        startLine: 4387
      syntax:
        content:
          CSharp: public String jsonrpc
          VB: Public jsonrpc As String
        return:
          type: Global.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.RPC.RPCResponseMessage`1.result
      commentId: F:NPCEngine.RPC.RPCResponseMessage`1.result
      language: CSharp
      name:
        CSharp: result
        VB: result
      nameWithType:
        CSharp: RPCResponseMessage<ReturnType>.result
        VB: RPCResponseMessage(Of ReturnType).result
      qualifiedName:
        CSharp: NPCEngine.RPC.RPCResponseMessage<ReturnType>.result
        VB: NPCEngine.RPC.RPCResponseMessage(Of ReturnType).result
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.RPC
      source:
        id: result
        path: ''
        startLine: 4389
      syntax:
        content:
          CSharp: public ReturnType result
          VB: Public result As ReturnType
        return:
          type: '{ReturnType}'
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.RPC.RPCResponseMessage`1.error
      commentId: F:NPCEngine.RPC.RPCResponseMessage`1.error
      language: CSharp
      name:
        CSharp: error
        VB: error
      nameWithType:
        CSharp: RPCResponseMessage<ReturnType>.error
        VB: RPCResponseMessage(Of ReturnType).error
      qualifiedName:
        CSharp: NPCEngine.RPC.RPCResponseMessage<ReturnType>.error
        VB: NPCEngine.RPC.RPCResponseMessage(Of ReturnType).error
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.RPC
      source:
        id: error
        path: ''
        startLine: 4391
      syntax:
        content:
          CSharp: public RPCResponseError error
          VB: Public error As RPCResponseError
        return:
          type: NPCEngine.RPC.RPCResponseError
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.RPC.RPCResponseMessage`1.#ctor
      commentId: M:NPCEngine.RPC.RPCResponseMessage`1.#ctor
      language: CSharp
      name:
        CSharp: RPCResponseMessage()
        VB: RPCResponseMessage()
      nameWithType:
        CSharp: RPCResponseMessage<ReturnType>.RPCResponseMessage()
        VB: RPCResponseMessage(Of ReturnType).RPCResponseMessage()
      qualifiedName:
        CSharp: NPCEngine.RPC.RPCResponseMessage<ReturnType>.RPCResponseMessage()
        VB: NPCEngine.RPC.RPCResponseMessage(Of ReturnType).RPCResponseMessage()
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.RPC
      source:
        id: .ctor
        path: ''
        startLine: 4393
      syntax:
        content:
          CSharp: public RPCResponseMessage()
          VB: Public Sub New
      overload: NPCEngine.RPC.RPCResponseMessage`1.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: NPCEngine.RPC.RPCResponseError
    commentId: T:NPCEngine.RPC.RPCResponseError
    language: CSharp
    name:
      CSharp: RPCResponseError
      VB: RPCResponseError
    nameWithType:
      CSharp: RPCResponseError
      VB: RPCResponseError
    qualifiedName:
      CSharp: NPCEngine.RPC.RPCResponseError
      VB: NPCEngine.RPC.RPCResponseError
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: NPCEngine.RPC
    source:
      id: RPCResponseError
      path: ''
      startLine: 4405
    summary: "\nRPC response error.\n"
    example: []
    syntax:
      content:
        CSharp: public class RPCResponseError
        VB: Public Class RPCResponseError
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: NPCEngine.RPC.RPCResponseError.code
      commentId: F:NPCEngine.RPC.RPCResponseError.code
      language: CSharp
      name:
        CSharp: code
        VB: code
      nameWithType:
        CSharp: RPCResponseError.code
        VB: RPCResponseError.code
      qualifiedName:
        CSharp: NPCEngine.RPC.RPCResponseError.code
        VB: NPCEngine.RPC.RPCResponseError.code
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.RPC
      source:
        id: code
        path: ''
        startLine: 4408
      syntax:
        content:
          CSharp: public int code
          VB: Public code As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.RPC.RPCResponseError.message
      commentId: F:NPCEngine.RPC.RPCResponseError.message
      language: CSharp
      name:
        CSharp: message
        VB: message
      nameWithType:
        CSharp: RPCResponseError.message
        VB: RPCResponseError.message
      qualifiedName:
        CSharp: NPCEngine.RPC.RPCResponseError.message
        VB: NPCEngine.RPC.RPCResponseError.message
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.RPC
      source:
        id: message
        path: ''
        startLine: 4409
      syntax:
        content:
          CSharp: public String message
          VB: Public message As String
        return:
          type: Global.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.RPC.RPCResponseError.data
      commentId: F:NPCEngine.RPC.RPCResponseError.data
      language: CSharp
      name:
        CSharp: data
        VB: data
      nameWithType:
        CSharp: RPCResponseError.data
        VB: RPCResponseError.data
      qualifiedName:
        CSharp: NPCEngine.RPC.RPCResponseError.data
        VB: NPCEngine.RPC.RPCResponseError.data
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.RPC
      source:
        id: data
        path: ''
        startLine: 4410
      syntax:
        content:
          CSharp: public RPCResponseErrorData data
          VB: Public data As RPCResponseErrorData
        return:
          type: NPCEngine.RPC.RPCResponseErrorData
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: NPCEngine.RPC.RPCResponseErrorData
    commentId: T:NPCEngine.RPC.RPCResponseErrorData
    language: CSharp
    name:
      CSharp: RPCResponseErrorData
      VB: RPCResponseErrorData
    nameWithType:
      CSharp: RPCResponseErrorData
      VB: RPCResponseErrorData
    qualifiedName:
      CSharp: NPCEngine.RPC.RPCResponseErrorData
      VB: NPCEngine.RPC.RPCResponseErrorData
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: NPCEngine.RPC
    source:
      id: RPCResponseErrorData
      path: ''
      startLine: 4416
    summary: "\nRPC response error data.\n"
    example: []
    syntax:
      content:
        CSharp: public class RPCResponseErrorData
        VB: Public Class RPCResponseErrorData
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: NPCEngine.RPC.RPCResponseErrorData.type
      commentId: F:NPCEngine.RPC.RPCResponseErrorData.type
      language: CSharp
      name:
        CSharp: type
        VB: type
      nameWithType:
        CSharp: RPCResponseErrorData.type
        VB: RPCResponseErrorData.type
      qualifiedName:
        CSharp: NPCEngine.RPC.RPCResponseErrorData.type
        VB: NPCEngine.RPC.RPCResponseErrorData.type
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.RPC
      source:
        id: type
        path: ''
        startLine: 4419
      syntax:
        content:
          CSharp: public String type
          VB: Public type As String
        return:
          type: Global.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.RPC.RPCResponseErrorData.args
      commentId: F:NPCEngine.RPC.RPCResponseErrorData.args
      language: CSharp
      name:
        CSharp: args
        VB: args
      nameWithType:
        CSharp: RPCResponseErrorData.args
        VB: RPCResponseErrorData.args
      qualifiedName:
        CSharp: NPCEngine.RPC.RPCResponseErrorData.args
        VB: NPCEngine.RPC.RPCResponseErrorData.args
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.RPC
      source:
        id: args
        path: ''
        startLine: 4420
      syntax:
        content:
          CSharp: public List<String> args
          VB: Public args As List(Of String)
        return:
          type: Global.List{String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.RPC.RPCResponseErrorData.message
      commentId: F:NPCEngine.RPC.RPCResponseErrorData.message
      language: CSharp
      name:
        CSharp: message
        VB: message
      nameWithType:
        CSharp: RPCResponseErrorData.message
        VB: RPCResponseErrorData.message
      qualifiedName:
        CSharp: NPCEngine.RPC.RPCResponseErrorData.message
        VB: NPCEngine.RPC.RPCResponseErrorData.message
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.RPC
      source:
        id: message
        path: ''
        startLine: 4421
      syntax:
        content:
          CSharp: public String message
          VB: Public message As String
        return:
          type: Global.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: NPCEngine.RPC.ServerType
    commentId: T:NPCEngine.RPC.ServerType
    language: CSharp
    name:
      CSharp: ServerType
      VB: ServerType
    nameWithType:
      CSharp: ServerType
      VB: ServerType
    qualifiedName:
      CSharp: NPCEngine.RPC.ServerType
      VB: NPCEngine.RPC.ServerType
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: NPCEngine.RPC
    source:
      id: ServerType
      path: ''
      startLine: 4426
    summary: "\nTransport layer for RPC enum.\n"
    example: []
    syntax:
      content:
        CSharp: public enum ServerType
        VB: Public Enum ServerType
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: NPCEngine.RPC.ServerType.HTTP
      commentId: F:NPCEngine.RPC.ServerType.HTTP
      language: CSharp
      name:
        CSharp: HTTP
        VB: HTTP
      nameWithType:
        CSharp: ServerType.HTTP
        VB: ServerType.HTTP
      qualifiedName:
        CSharp: NPCEngine.RPC.ServerType.HTTP
        VB: NPCEngine.RPC.ServerType.HTTP
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.RPC
      source:
        id: HTTP
        path: ''
        startLine: 4428
      syntax:
        content:
          CSharp: HTTP = 0
          VB: HTTP = 0
        return:
          type: NPCEngine.RPC.ServerType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: NPCEngine.RPC.ServerType.ZMQ
      commentId: F:NPCEngine.RPC.ServerType.ZMQ
      language: CSharp
      name:
        CSharp: ZMQ
        VB: ZMQ
      nameWithType:
        CSharp: ServerType.ZMQ
        VB: ServerType.ZMQ
      qualifiedName:
        CSharp: NPCEngine.RPC.ServerType.ZMQ
        VB: NPCEngine.RPC.ServerType.ZMQ
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.RPC
      source:
        id: ZMQ
        path: ''
        startLine: 4429
      syntax:
        content:
          CSharp: ZMQ = 1
          VB: ZMQ = 1
        return:
          type: NPCEngine.RPC.ServerType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
- id: NPCEngine.Utility
  commentId: N:NPCEngine.Utility
  language: CSharp
  name:
    CSharp: NPCEngine.Utility
    VB: NPCEngine.Utility
  nameWithType:
    CSharp: NPCEngine.Utility
    VB: NPCEngine.Utility
  qualifiedName:
    CSharp: NPCEngine.Utility
    VB: NPCEngine.Utility
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: NPCEngine.Utility.AudioSourceQueue
    commentId: T:NPCEngine.Utility.AudioSourceQueue
    language: CSharp
    name:
      CSharp: AudioSourceQueue
      VB: AudioSourceQueue
    nameWithType:
      CSharp: AudioSourceQueue
      VB: AudioSourceQueue
    qualifiedName:
      CSharp: NPCEngine.Utility.AudioSourceQueue
      VB: NPCEngine.Utility.AudioSourceQueue
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: NPCEngine.Utility
    source:
      id: AudioSourceQueue
      path: ''
      startLine: 4441
    summary: "\nAudio source queue that plays all clips from the queue one-by-one seamlessly.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class AudioSourceQueue : MonoBehaviour'
        VB: >-
          Public Class AudioSourceQueue

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: NPCEngine.Utility.AudioSourceQueue.audioSource
      commentId: F:NPCEngine.Utility.AudioSourceQueue.audioSource
      language: CSharp
      name:
        CSharp: audioSource
        VB: audioSource
      nameWithType:
        CSharp: AudioSourceQueue.audioSource
        VB: AudioSourceQueue.audioSource
      qualifiedName:
        CSharp: NPCEngine.Utility.AudioSourceQueue.audioSource
        VB: NPCEngine.Utility.AudioSourceQueue.audioSource
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Utility
      source:
        id: audioSource
        path: ''
        startLine: 4445
      syntax:
        content:
          CSharp: public AudioSource audioSource
          VB: Public audioSource As AudioSource
        return:
          type: Global.AudioSource
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.Utility.AudioSourceQueue.PlaySound(AudioClip)
      commentId: M:NPCEngine.Utility.AudioSourceQueue.PlaySound(AudioClip)
      language: CSharp
      name:
        CSharp: PlaySound(AudioClip)
        VB: PlaySound(AudioClip)
      nameWithType:
        CSharp: AudioSourceQueue.PlaySound(AudioClip)
        VB: AudioSourceQueue.PlaySound(AudioClip)
      qualifiedName:
        CSharp: NPCEngine.Utility.AudioSourceQueue.PlaySound(AudioClip)
        VB: NPCEngine.Utility.AudioSourceQueue.PlaySound(AudioClip)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Utility
      source:
        id: PlaySound
        path: ''
        startLine: 4471
      syntax:
        content:
          CSharp: public void PlaySound(AudioClip clip)
          VB: Public Sub PlaySound(clip As AudioClip)
        parameters:
        - id: clip
          type: Global.AudioClip
      overload: NPCEngine.Utility.AudioSourceQueue.PlaySound*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: NPCEngine.Utility.CoroutineUtility
    commentId: T:NPCEngine.Utility.CoroutineUtility
    language: CSharp
    name:
      CSharp: CoroutineUtility
      VB: CoroutineUtility
    nameWithType:
      CSharp: CoroutineUtility
      VB: CoroutineUtility
    qualifiedName:
      CSharp: NPCEngine.Utility.CoroutineUtility
      VB: NPCEngine.Utility.CoroutineUtility
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: NPCEngine.Utility
    source:
      id: CoroutineUtility
      path: ''
      startLine: 4636
    summary: "\nUtility that allows to run coroutines in a coherent way both in editor and in player modes.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class CoroutineUtility : Singleton<CoroutineUtility>'
        VB: >-
          Public Class CoroutineUtility

              Inherits Singleton(Of CoroutineUtility)
    inheritance:
    - System.Object
    - NPCEngine.Utility.Singleton{NPCEngine.Utility.CoroutineUtility}
    inheritedMembers:
    - NPCEngine.Utility.Singleton{NPCEngine.Utility.CoroutineUtility}.Instance
    - NPCEngine.Utility.Singleton{NPCEngine.Utility.CoroutineUtility}.GetInstance
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: NPCEngine.Utility.CoroutineUtility.IsRunning(MonoBehaviour,System.String)
      commentId: M:NPCEngine.Utility.CoroutineUtility.IsRunning(MonoBehaviour,System.String)
      language: CSharp
      name:
        CSharp: IsRunning(MonoBehaviour, String)
        VB: IsRunning(MonoBehaviour, String)
      nameWithType:
        CSharp: CoroutineUtility.IsRunning(MonoBehaviour, String)
        VB: CoroutineUtility.IsRunning(MonoBehaviour, String)
      qualifiedName:
        CSharp: NPCEngine.Utility.CoroutineUtility.IsRunning(MonoBehaviour, System.String)
        VB: NPCEngine.Utility.CoroutineUtility.IsRunning(MonoBehaviour, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Utility
      source:
        id: IsRunning
        path: ''
        startLine: 4687
      syntax:
        content:
          CSharp: public static bool IsRunning(MonoBehaviour owner, string name)
          VB: Public Shared Function IsRunning(owner As MonoBehaviour, name As String) As Boolean
        parameters:
        - id: owner
          type: Global.MonoBehaviour
        - id: name
          type: System.String
        return:
          type: System.Boolean
      overload: NPCEngine.Utility.CoroutineUtility.IsRunning*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: NPCEngine.Utility.CoroutineUtility.StartCoroutine(System.Collections.IEnumerator,MonoBehaviour,System.String)
      commentId: M:NPCEngine.Utility.CoroutineUtility.StartCoroutine(System.Collections.IEnumerator,MonoBehaviour,System.String)
      language: CSharp
      name:
        CSharp: StartCoroutine(IEnumerator, MonoBehaviour, String)
        VB: StartCoroutine(IEnumerator, MonoBehaviour, String)
      nameWithType:
        CSharp: CoroutineUtility.StartCoroutine(IEnumerator, MonoBehaviour, String)
        VB: CoroutineUtility.StartCoroutine(IEnumerator, MonoBehaviour, String)
      qualifiedName:
        CSharp: NPCEngine.Utility.CoroutineUtility.StartCoroutine(System.Collections.IEnumerator, MonoBehaviour, System.String)
        VB: NPCEngine.Utility.CoroutineUtility.StartCoroutine(System.Collections.IEnumerator, MonoBehaviour, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Utility
      source:
        id: StartCoroutine
        path: ''
        startLine: 4752
      syntax:
        content:
          CSharp: public static void StartCoroutine(IEnumerator routine, MonoBehaviour owner, string id)
          VB: Public Shared Sub StartCoroutine(routine As IEnumerator, owner As MonoBehaviour, id As String)
        parameters:
        - id: routine
          type: System.Collections.IEnumerator
        - id: owner
          type: Global.MonoBehaviour
        - id: id
          type: System.String
      overload: NPCEngine.Utility.CoroutineUtility.StartCoroutine*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: NPCEngine.Utility.CoroutineUtility.StopCoroutine(System.String,MonoBehaviour)
      commentId: M:NPCEngine.Utility.CoroutineUtility.StopCoroutine(System.String,MonoBehaviour)
      language: CSharp
      name:
        CSharp: StopCoroutine(String, MonoBehaviour)
        VB: StopCoroutine(String, MonoBehaviour)
      nameWithType:
        CSharp: CoroutineUtility.StopCoroutine(String, MonoBehaviour)
        VB: CoroutineUtility.StopCoroutine(String, MonoBehaviour)
      qualifiedName:
        CSharp: NPCEngine.Utility.CoroutineUtility.StopCoroutine(System.String, MonoBehaviour)
        VB: NPCEngine.Utility.CoroutineUtility.StopCoroutine(System.String, MonoBehaviour)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Utility
      source:
        id: StopCoroutine
        path: ''
        startLine: 4833
      syntax:
        content:
          CSharp: public static void StopCoroutine(string id, MonoBehaviour owner)
          VB: Public Shared Sub StopCoroutine(id As String, owner As MonoBehaviour)
        parameters:
        - id: id
          type: System.String
        - id: owner
          type: Global.MonoBehaviour
      overload: NPCEngine.Utility.CoroutineUtility.StopCoroutine*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: NPCEngine.Utility.CoroutineUtility.StopAllPlayingCoroutines(MonoBehaviour)
      commentId: M:NPCEngine.Utility.CoroutineUtility.StopAllPlayingCoroutines(MonoBehaviour)
      language: CSharp
      name:
        CSharp: StopAllPlayingCoroutines(MonoBehaviour)
        VB: StopAllPlayingCoroutines(MonoBehaviour)
      nameWithType:
        CSharp: CoroutineUtility.StopAllPlayingCoroutines(MonoBehaviour)
        VB: CoroutineUtility.StopAllPlayingCoroutines(MonoBehaviour)
      qualifiedName:
        CSharp: NPCEngine.Utility.CoroutineUtility.StopAllPlayingCoroutines(MonoBehaviour)
        VB: NPCEngine.Utility.CoroutineUtility.StopAllPlayingCoroutines(MonoBehaviour)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Utility
      source:
        id: StopAllPlayingCoroutines
        path: ''
        startLine: 4888
      syntax:
        content:
          CSharp: public static void StopAllPlayingCoroutines(MonoBehaviour owner)
          VB: Public Shared Sub StopAllPlayingCoroutines(owner As MonoBehaviour)
        parameters:
        - id: owner
          type: Global.MonoBehaviour
      overload: NPCEngine.Utility.CoroutineUtility.StopAllPlayingCoroutines*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: NPCEngine.Utility.CoroutineUtility.StopAllEditorCoroutines
      commentId: M:NPCEngine.Utility.CoroutineUtility.StopAllEditorCoroutines
      language: CSharp
      name:
        CSharp: StopAllEditorCoroutines()
        VB: StopAllEditorCoroutines()
      nameWithType:
        CSharp: CoroutineUtility.StopAllEditorCoroutines()
        VB: CoroutineUtility.StopAllEditorCoroutines()
      qualifiedName:
        CSharp: NPCEngine.Utility.CoroutineUtility.StopAllEditorCoroutines()
        VB: NPCEngine.Utility.CoroutineUtility.StopAllEditorCoroutines()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Utility
      source:
        id: StopAllEditorCoroutines
        path: ''
        startLine: 4902
      syntax:
        content:
          CSharp: public static void StopAllEditorCoroutines()
          VB: Public Shared Sub StopAllEditorCoroutines
      overload: NPCEngine.Utility.CoroutineUtility.StopAllEditorCoroutines*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: NPCEngine.Utility.CoroutineUtility.StopAllEditorCoroutines(MonoBehaviour)
      commentId: M:NPCEngine.Utility.CoroutineUtility.StopAllEditorCoroutines(MonoBehaviour)
      language: CSharp
      name:
        CSharp: StopAllEditorCoroutines(MonoBehaviour)
        VB: StopAllEditorCoroutines(MonoBehaviour)
      nameWithType:
        CSharp: CoroutineUtility.StopAllEditorCoroutines(MonoBehaviour)
        VB: CoroutineUtility.StopAllEditorCoroutines(MonoBehaviour)
      qualifiedName:
        CSharp: NPCEngine.Utility.CoroutineUtility.StopAllEditorCoroutines(MonoBehaviour)
        VB: NPCEngine.Utility.CoroutineUtility.StopAllEditorCoroutines(MonoBehaviour)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Utility
      source:
        id: StopAllEditorCoroutines
        path: ''
        startLine: 4920
      syntax:
        content:
          CSharp: public static void StopAllEditorCoroutines(MonoBehaviour owner)
          VB: Public Shared Sub StopAllEditorCoroutines(owner As MonoBehaviour)
        parameters:
        - id: owner
          type: Global.MonoBehaviour
      overload: NPCEngine.Utility.CoroutineUtility.StopAllEditorCoroutines*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: NPCEngine.Utility.CoroutineUtility.WaitForSeconds(System.Single)
      commentId: M:NPCEngine.Utility.CoroutineUtility.WaitForSeconds(System.Single)
      language: CSharp
      name:
        CSharp: WaitForSeconds(Single)
        VB: WaitForSeconds(Single)
      nameWithType:
        CSharp: CoroutineUtility.WaitForSeconds(Single)
        VB: CoroutineUtility.WaitForSeconds(Single)
      qualifiedName:
        CSharp: NPCEngine.Utility.CoroutineUtility.WaitForSeconds(System.Single)
        VB: NPCEngine.Utility.CoroutineUtility.WaitForSeconds(System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Utility
      source:
        id: WaitForSeconds
        path: ''
        startLine: 4934
      syntax:
        content:
          CSharp: public static IEnumerator WaitForSeconds(float seconds)
          VB: Public Shared Function WaitForSeconds(seconds As Single) As IEnumerator
        parameters:
        - id: seconds
          type: System.Single
        return:
          type: System.Collections.IEnumerator
      overload: NPCEngine.Utility.CoroutineUtility.WaitForSeconds*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: NPCEngine.Utility.CoroutineUtility.GetGameObjectPath(MonoBehaviour)
      commentId: M:NPCEngine.Utility.CoroutineUtility.GetGameObjectPath(MonoBehaviour)
      language: CSharp
      name:
        CSharp: GetGameObjectPath(MonoBehaviour)
        VB: GetGameObjectPath(MonoBehaviour)
      nameWithType:
        CSharp: CoroutineUtility.GetGameObjectPath(MonoBehaviour)
        VB: CoroutineUtility.GetGameObjectPath(MonoBehaviour)
      qualifiedName:
        CSharp: NPCEngine.Utility.CoroutineUtility.GetGameObjectPath(MonoBehaviour)
        VB: NPCEngine.Utility.CoroutineUtility.GetGameObjectPath(MonoBehaviour)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Utility
      source:
        id: GetGameObjectPath
        path: ''
        startLine: 4948
      syntax:
        content:
          CSharp: public static string GetGameObjectPath(MonoBehaviour behaviour)
          VB: Public Shared Function GetGameObjectPath(behaviour As MonoBehaviour) As String
        parameters:
        - id: behaviour
          type: Global.MonoBehaviour
        return:
          type: System.String
      overload: NPCEngine.Utility.CoroutineUtility.GetGameObjectPath*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: NPCEngine.Utility.CoroutineUtility.PrintCoroutines
      commentId: M:NPCEngine.Utility.CoroutineUtility.PrintCoroutines
      language: CSharp
      name:
        CSharp: PrintCoroutines()
        VB: PrintCoroutines()
      nameWithType:
        CSharp: CoroutineUtility.PrintCoroutines()
        VB: CoroutineUtility.PrintCoroutines()
      qualifiedName:
        CSharp: NPCEngine.Utility.CoroutineUtility.PrintCoroutines()
        VB: NPCEngine.Utility.CoroutineUtility.PrintCoroutines()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Utility
      source:
        id: PrintCoroutines
        path: ''
        startLine: 4961
      syntax:
        content:
          CSharp: public void PrintCoroutines()
          VB: Public Sub PrintCoroutines
      overload: NPCEngine.Utility.CoroutineUtility.PrintCoroutines*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.Utility.CoroutineUtility.PrintEditorCoroutines
      commentId: M:NPCEngine.Utility.CoroutineUtility.PrintEditorCoroutines
      language: CSharp
      name:
        CSharp: PrintEditorCoroutines()
        VB: PrintEditorCoroutines()
      nameWithType:
        CSharp: CoroutineUtility.PrintEditorCoroutines()
        VB: CoroutineUtility.PrintEditorCoroutines()
      qualifiedName:
        CSharp: NPCEngine.Utility.CoroutineUtility.PrintEditorCoroutines()
        VB: NPCEngine.Utility.CoroutineUtility.PrintEditorCoroutines()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Utility
      source:
        id: PrintEditorCoroutines
        path: ''
        startLine: 4976
      syntax:
        content:
          CSharp: public void PrintEditorCoroutines()
          VB: Public Sub PrintEditorCoroutines
      overload: NPCEngine.Utility.CoroutineUtility.PrintEditorCoroutines*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: NPCEngine.Utility.CoroutineUtility.PrintRunningCoroutines
      commentId: M:NPCEngine.Utility.CoroutineUtility.PrintRunningCoroutines
      language: CSharp
      name:
        CSharp: PrintRunningCoroutines()
        VB: PrintRunningCoroutines()
      nameWithType:
        CSharp: CoroutineUtility.PrintRunningCoroutines()
        VB: CoroutineUtility.PrintRunningCoroutines()
      qualifiedName:
        CSharp: NPCEngine.Utility.CoroutineUtility.PrintRunningCoroutines()
        VB: NPCEngine.Utility.CoroutineUtility.PrintRunningCoroutines()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Utility
      source:
        id: PrintRunningCoroutines
        path: ''
        startLine: 4993
      syntax:
        content:
          CSharp: public void PrintRunningCoroutines()
          VB: Public Sub PrintRunningCoroutines
      overload: NPCEngine.Utility.CoroutineUtility.PrintRunningCoroutines*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: NPCEngine.Utility.Singleton`1
    commentId: T:NPCEngine.Utility.Singleton`1
    language: CSharp
    name:
      CSharp: Singleton<T>
      VB: Singleton(Of T)
    nameWithType:
      CSharp: Singleton<T>
      VB: Singleton(Of T)
    qualifiedName:
      CSharp: NPCEngine.Utility.Singleton<T>
      VB: NPCEngine.Utility.Singleton(Of T)
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: NPCEngine.Utility
    source:
      id: Singleton
      path: ''
      startLine: 5200
    summary: "\nSingleton <code>MonoBehaviour</code> base class. \n"
    example: []
    syntax:
      content:
        CSharp: 'public class Singleton<T> : MonoBehaviour where T : MonoBehaviour'
        VB: >-
          Public Class Singleton(Of T As MonoBehaviour)

              Inherits MonoBehaviour
      typeParameters:
      - id: T
        description: ''
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: NPCEngine.Utility.Singleton`1.Instance
      commentId: P:NPCEngine.Utility.Singleton`1.Instance
      language: CSharp
      name:
        CSharp: Instance
        VB: Instance
      nameWithType:
        CSharp: Singleton<T>.Instance
        VB: Singleton(Of T).Instance
      qualifiedName:
        CSharp: NPCEngine.Utility.Singleton<T>.Instance
        VB: NPCEngine.Utility.Singleton(Of T).Instance
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Utility
      source:
        id: Instance
        path: ''
        startLine: 5204
      syntax:
        content:
          CSharp: public static T Instance { get; }
          VB: Public Shared ReadOnly Property Instance As T
        parameters: []
        return:
          type: '{T}'
      overload: NPCEngine.Utility.Singleton`1.Instance*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: NPCEngine.Utility.Singleton`1.GetInstance
      commentId: M:NPCEngine.Utility.Singleton`1.GetInstance
      language: CSharp
      name:
        CSharp: GetInstance()
        VB: GetInstance()
      nameWithType:
        CSharp: Singleton<T>.GetInstance()
        VB: Singleton(Of T).GetInstance()
      qualifiedName:
        CSharp: NPCEngine.Utility.Singleton<T>.GetInstance()
        VB: NPCEngine.Utility.Singleton(Of T).GetInstance()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: NPCEngine.Utility
      source:
        id: GetInstance
        path: ''
        startLine: 5223
      syntax:
        content:
          CSharp: public static T GetInstance()
          VB: Public Shared Function GetInstance As T
        return:
          type: '{T}'
      overload: NPCEngine.Utility.Singleton`1.GetInstance*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
references:
  System:
    name:
      CSharp:
      - name: System
        nameWithType: System
        qualifiedName: System
        isExternal: true
      VB:
      - name: System
        nameWithType: System
        qualifiedName: System
    isDefinition: true
    commentId: N:System
  System.Object:
    name:
      CSharp:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      VB:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Object
  System.String:
    name:
      CSharp:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      VB:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.String
  System.Boolean:
    name:
      CSharp:
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      VB:
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Boolean
  NPCEngine.ServiceConfigDescriptor:
    name:
      CSharp:
      - id: NPCEngine.ServiceConfigDescriptor
        name: ServiceConfigDescriptor
        nameWithType: ServiceConfigDescriptor
        qualifiedName: NPCEngine.ServiceConfigDescriptor
      VB:
      - id: NPCEngine.ServiceConfigDescriptor
        name: ServiceConfigDescriptor
        nameWithType: ServiceConfigDescriptor
        qualifiedName: NPCEngine.ServiceConfigDescriptor
    isDefinition: true
    commentId: T:NPCEngine.ServiceConfigDescriptor
  NPCEngine.Utility.Singleton`1:
    name:
      CSharp:
      - id: NPCEngine.Utility.Singleton`1
        name: Singleton
        nameWithType: Singleton
        qualifiedName: NPCEngine.Utility.Singleton
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: NPCEngine.Utility.Singleton`1
        name: Singleton
        nameWithType: Singleton
        qualifiedName: NPCEngine.Utility.Singleton
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:NPCEngine.Utility.Singleton`1
  NPCEngine.Utility:
    name:
      CSharp:
      - name: NPCEngine.Utility
        nameWithType: NPCEngine.Utility
        qualifiedName: NPCEngine.Utility
      VB:
      - name: NPCEngine.Utility
        nameWithType: NPCEngine.Utility
        qualifiedName: NPCEngine.Utility
    isDefinition: true
    commentId: N:NPCEngine.Utility
  NPCEngine.Utility.Singleton{NPCEngine.NPCEngineConfig}:
    name:
      CSharp:
      - id: NPCEngine.Utility.Singleton`1
        name: Singleton
        nameWithType: Singleton
        qualifiedName: NPCEngine.Utility.Singleton
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: NPCEngine.NPCEngineConfig
        name: NPCEngineConfig
        nameWithType: NPCEngineConfig
        qualifiedName: NPCEngine.NPCEngineConfig
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: NPCEngine.Utility.Singleton`1
        name: Singleton
        nameWithType: Singleton
        qualifiedName: NPCEngine.Utility.Singleton
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: NPCEngine.NPCEngineConfig
        name: NPCEngineConfig
        nameWithType: NPCEngineConfig
        qualifiedName: NPCEngine.NPCEngineConfig
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: NPCEngine.Utility.Singleton`1
    parent: NPCEngine.Utility
    commentId: T:NPCEngine.Utility.Singleton{NPCEngine.NPCEngineConfig}
  NPCEngine.Utility.Singleton`1.Instance:
    name:
      CSharp:
      - id: NPCEngine.Utility.Singleton`1.Instance
        name: Instance
        nameWithType: Singleton<T>.Instance
        qualifiedName: NPCEngine.Utility.Singleton<T>.Instance
      VB:
      - id: NPCEngine.Utility.Singleton`1.Instance
        name: Instance
        nameWithType: Singleton(Of T).Instance
        qualifiedName: NPCEngine.Utility.Singleton(Of T).Instance
    isDefinition: true
    commentId: P:NPCEngine.Utility.Singleton`1.Instance
  NPCEngine.Utility.Singleton{NPCEngine.NPCEngineConfig}.Instance:
    name:
      CSharp:
      - id: NPCEngine.Utility.Singleton`1.Instance
        name: Instance
        nameWithType: Singleton<NPCEngineConfig>.Instance
        qualifiedName: NPCEngine.Utility.Singleton<NPCEngine.NPCEngineConfig>.Instance
      VB:
      - id: NPCEngine.Utility.Singleton`1.Instance
        name: Instance
        nameWithType: Singleton(Of NPCEngineConfig).Instance
        qualifiedName: NPCEngine.Utility.Singleton(Of NPCEngine.NPCEngineConfig).Instance
    isDefinition: false
    definition: NPCEngine.Utility.Singleton`1.Instance
    parent: NPCEngine.Utility.Singleton{NPCEngine.NPCEngineConfig}
    commentId: P:NPCEngine.Utility.Singleton{NPCEngine.NPCEngineConfig}.Instance
  NPCEngine.Utility.Singleton`1.GetInstance:
    name:
      CSharp:
      - id: NPCEngine.Utility.Singleton`1.GetInstance
        name: GetInstance
        nameWithType: Singleton<T>.GetInstance
        qualifiedName: NPCEngine.Utility.Singleton<T>.GetInstance
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: NPCEngine.Utility.Singleton`1.GetInstance
        name: GetInstance
        nameWithType: Singleton(Of T).GetInstance
        qualifiedName: NPCEngine.Utility.Singleton(Of T).GetInstance
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:NPCEngine.Utility.Singleton`1.GetInstance
  NPCEngine.Utility.Singleton{NPCEngine.NPCEngineConfig}.GetInstance:
    name:
      CSharp:
      - id: NPCEngine.Utility.Singleton`1.GetInstance
        name: GetInstance
        nameWithType: Singleton<NPCEngineConfig>.GetInstance
        qualifiedName: NPCEngine.Utility.Singleton<NPCEngine.NPCEngineConfig>.GetInstance
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: NPCEngine.Utility.Singleton`1.GetInstance
        name: GetInstance
        nameWithType: Singleton(Of NPCEngineConfig).GetInstance
        qualifiedName: NPCEngine.Utility.Singleton(Of NPCEngine.NPCEngineConfig).GetInstance
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: NPCEngine.Utility.Singleton`1.GetInstance
    parent: NPCEngine.Utility.Singleton{NPCEngine.NPCEngineConfig}
    commentId: M:NPCEngine.Utility.Singleton{NPCEngine.NPCEngineConfig}.GetInstance
  Global.List`1:
    name:
      CSharp:
      - id: Global.List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
  Global.List{NPCEngine.ServiceConfigDescriptor}:
    name:
      CSharp:
      - id: Global.List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: NPCEngine.ServiceConfigDescriptor
        name: ServiceConfigDescriptor
        nameWithType: ServiceConfigDescriptor
        qualifiedName: NPCEngine.ServiceConfigDescriptor
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: NPCEngine.ServiceConfigDescriptor
        name: ServiceConfigDescriptor
        nameWithType: ServiceConfigDescriptor
        qualifiedName: NPCEngine.ServiceConfigDescriptor
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.List`1
    commentId: '!:Global.List{NPCEngine.ServiceConfigDescriptor}'
  Global.ServerType:
    name:
      CSharp:
      - id: Global.ServerType
        name: ServerType
        nameWithType: ServerType
        qualifiedName: ServerType
        isExternal: true
      VB:
      - id: Global.ServerType
        name: ServerType
        nameWithType: ServerType
        qualifiedName: ServerType
        isExternal: true
    isDefinition: true
    commentId: '!:Global.ServerType'
  NPCEngine.NPCEngineConfig.Port*:
    name:
      CSharp:
      - id: NPCEngine.NPCEngineConfig.Port*
        name: Port
        nameWithType: NPCEngineConfig.Port
        qualifiedName: NPCEngine.NPCEngineConfig.Port
      VB:
      - id: NPCEngine.NPCEngineConfig.Port*
        name: Port
        nameWithType: NPCEngineConfig.Port
        qualifiedName: NPCEngine.NPCEngineConfig.Port
    isDefinition: true
    commentId: Overload:NPCEngine.NPCEngineConfig.Port
  NPCEngine.NPCEngineConfig.NPCEngineInstalled*:
    name:
      CSharp:
      - id: NPCEngine.NPCEngineConfig.NPCEngineInstalled*
        name: NPCEngineInstalled
        nameWithType: NPCEngineConfig.NPCEngineInstalled
        qualifiedName: NPCEngine.NPCEngineConfig.NPCEngineInstalled
      VB:
      - id: NPCEngine.NPCEngineConfig.NPCEngineInstalled*
        name: NPCEngineInstalled
        nameWithType: NPCEngineConfig.NPCEngineInstalled
        qualifiedName: NPCEngine.NPCEngineConfig.NPCEngineInstalled
    isDefinition: true
    commentId: Overload:NPCEngine.NPCEngineConfig.NPCEngineInstalled
  NPCEngine.NPCEngineConfig.ModelsPathExists*:
    name:
      CSharp:
      - id: NPCEngine.NPCEngineConfig.ModelsPathExists*
        name: ModelsPathExists
        nameWithType: NPCEngineConfig.ModelsPathExists
        qualifiedName: NPCEngine.NPCEngineConfig.ModelsPathExists
      VB:
      - id: NPCEngine.NPCEngineConfig.ModelsPathExists*
        name: ModelsPathExists
        nameWithType: NPCEngineConfig.ModelsPathExists
        qualifiedName: NPCEngine.NPCEngineConfig.ModelsPathExists
    isDefinition: true
    commentId: Overload:NPCEngine.NPCEngineConfig.ModelsPathExists
  System.Int32:
    name:
      CSharp:
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      VB:
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Int32
  NPCEngine.NPCEngineConfig.ToBeStarted*:
    name:
      CSharp:
      - id: NPCEngine.NPCEngineConfig.ToBeStarted*
        name: ToBeStarted
        nameWithType: NPCEngineConfig.ToBeStarted
        qualifiedName: NPCEngine.NPCEngineConfig.ToBeStarted
      VB:
      - id: NPCEngine.NPCEngineConfig.ToBeStarted*
        name: ToBeStarted
        nameWithType: NPCEngineConfig.ToBeStarted
        qualifiedName: NPCEngine.NPCEngineConfig.ToBeStarted
    isDefinition: true
    commentId: Overload:NPCEngine.NPCEngineConfig.ToBeStarted
  NPCEngine.NPCEngineConfig.RefreshServices*:
    name:
      CSharp:
      - id: NPCEngine.NPCEngineConfig.RefreshServices*
        name: RefreshServices
        nameWithType: NPCEngineConfig.RefreshServices
        qualifiedName: NPCEngine.NPCEngineConfig.RefreshServices
      VB:
      - id: NPCEngine.NPCEngineConfig.RefreshServices*
        name: RefreshServices
        nameWithType: NPCEngineConfig.RefreshServices
        qualifiedName: NPCEngine.NPCEngineConfig.RefreshServices
    isDefinition: true
    commentId: Overload:NPCEngine.NPCEngineConfig.RefreshServices
  NPCEngine.NPCEngineConfig:
    name:
      CSharp:
      - id: NPCEngine.NPCEngineConfig
        name: NPCEngineConfig
        nameWithType: NPCEngineConfig
        qualifiedName: NPCEngine.NPCEngineConfig
      VB:
      - id: NPCEngine.NPCEngineConfig
        name: NPCEngineConfig
        nameWithType: NPCEngineConfig
        qualifiedName: NPCEngine.NPCEngineConfig
    isDefinition: true
    commentId: T:NPCEngine.NPCEngineConfig
  NPCEngine.NonPlayerCharacterEditor.OnInspectorGUI*:
    name:
      CSharp:
      - id: NPCEngine.NonPlayerCharacterEditor.OnInspectorGUI*
        name: OnInspectorGUI
        nameWithType: NonPlayerCharacterEditor.OnInspectorGUI
        qualifiedName: NPCEngine.NonPlayerCharacterEditor.OnInspectorGUI
      VB:
      - id: NPCEngine.NonPlayerCharacterEditor.OnInspectorGUI*
        name: OnInspectorGUI
        nameWithType: NonPlayerCharacterEditor.OnInspectorGUI
        qualifiedName: NPCEngine.NonPlayerCharacterEditor.OnInspectorGUI
    isDefinition: true
    commentId: Overload:NPCEngine.NonPlayerCharacterEditor.OnInspectorGUI
  NPCEngine.NonPlayerCharacterEditor:
    name:
      CSharp:
      - id: NPCEngine.NonPlayerCharacterEditor
        name: NonPlayerCharacterEditor
        nameWithType: NonPlayerCharacterEditor
        qualifiedName: NPCEngine.NonPlayerCharacterEditor
      VB:
      - id: NPCEngine.NonPlayerCharacterEditor
        name: NonPlayerCharacterEditor
        nameWithType: NonPlayerCharacterEditor
        qualifiedName: NPCEngine.NonPlayerCharacterEditor
    isDefinition: true
    commentId: T:NPCEngine.NonPlayerCharacterEditor
  NPCEngine.NPCEngineConfigEditor.OnInspectorGUI*:
    name:
      CSharp:
      - id: NPCEngine.NPCEngineConfigEditor.OnInspectorGUI*
        name: OnInspectorGUI
        nameWithType: NPCEngineConfigEditor.OnInspectorGUI
        qualifiedName: NPCEngine.NPCEngineConfigEditor.OnInspectorGUI
      VB:
      - id: NPCEngine.NPCEngineConfigEditor.OnInspectorGUI*
        name: OnInspectorGUI
        nameWithType: NPCEngineConfigEditor.OnInspectorGUI
        qualifiedName: NPCEngine.NPCEngineConfigEditor.OnInspectorGUI
    isDefinition: true
    commentId: Overload:NPCEngine.NPCEngineConfigEditor.OnInspectorGUI
  NPCEngine.NPCEngineConfigEditor:
    name:
      CSharp:
      - id: NPCEngine.NPCEngineConfigEditor
        name: NPCEngineConfigEditor
        nameWithType: NPCEngineConfigEditor
        qualifiedName: NPCEngine.NPCEngineConfigEditor
      VB:
      - id: NPCEngine.NPCEngineConfigEditor
        name: NPCEngineConfigEditor
        nameWithType: NPCEngineConfigEditor
        qualifiedName: NPCEngine.NPCEngineConfigEditor
    isDefinition: true
    commentId: T:NPCEngine.NPCEngineConfigEditor
  NPCEngine.TTSGeneratorEditor.OnInspectorGUI*:
    name:
      CSharp:
      - id: NPCEngine.TTSGeneratorEditor.OnInspectorGUI*
        name: OnInspectorGUI
        nameWithType: TTSGeneratorEditor.OnInspectorGUI
        qualifiedName: NPCEngine.TTSGeneratorEditor.OnInspectorGUI
      VB:
      - id: NPCEngine.TTSGeneratorEditor.OnInspectorGUI*
        name: OnInspectorGUI
        nameWithType: TTSGeneratorEditor.OnInspectorGUI
        qualifiedName: NPCEngine.TTSGeneratorEditor.OnInspectorGUI
    isDefinition: true
    commentId: Overload:NPCEngine.TTSGeneratorEditor.OnInspectorGUI
  NPCEngine.TTSGeneratorEditor:
    name:
      CSharp:
      - id: NPCEngine.TTSGeneratorEditor
        name: TTSGeneratorEditor
        nameWithType: TTSGeneratorEditor
        qualifiedName: NPCEngine.TTSGeneratorEditor
      VB:
      - id: NPCEngine.TTSGeneratorEditor
        name: TTSGeneratorEditor
        nameWithType: TTSGeneratorEditor
        qualifiedName: NPCEngine.TTSGeneratorEditor
    isDefinition: true
    commentId: T:NPCEngine.TTSGeneratorEditor
  System.Exception:
    name:
      CSharp:
      - id: System.Exception
        name: Exception
        nameWithType: Exception
        qualifiedName: System.Exception
        isExternal: true
      VB:
      - id: System.Exception
        name: Exception
        nameWithType: Exception
        qualifiedName: System.Exception
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Exception
  NPCEngine.NPCEngineException.#ctor*:
    name:
      CSharp:
      - id: NPCEngine.NPCEngineException.#ctor*
        name: NPCEngineException
        nameWithType: NPCEngineException.NPCEngineException
        qualifiedName: NPCEngine.NPCEngineException.NPCEngineException
      VB:
      - id: NPCEngine.NPCEngineException.#ctor*
        name: NPCEngineException
        nameWithType: NPCEngineException.NPCEngineException
        qualifiedName: NPCEngine.NPCEngineException.NPCEngineException
    isDefinition: true
    commentId: Overload:NPCEngine.NPCEngineException.#ctor
  System.Runtime.Serialization:
    name:
      CSharp:
      - name: System.Runtime.Serialization
        nameWithType: System.Runtime.Serialization
        qualifiedName: System.Runtime.Serialization
        isExternal: true
      VB:
      - name: System.Runtime.Serialization
        nameWithType: System.Runtime.Serialization
        qualifiedName: System.Runtime.Serialization
    isDefinition: true
    commentId: N:System.Runtime.Serialization
  System.Runtime.Serialization.SerializationInfo:
    name:
      CSharp:
      - id: System.Runtime.Serialization.SerializationInfo
        name: SerializationInfo
        nameWithType: SerializationInfo
        qualifiedName: System.Runtime.Serialization.SerializationInfo
        isExternal: true
      VB:
      - id: System.Runtime.Serialization.SerializationInfo
        name: SerializationInfo
        nameWithType: SerializationInfo
        qualifiedName: System.Runtime.Serialization.SerializationInfo
        isExternal: true
    isDefinition: true
    parent: System.Runtime.Serialization
    commentId: T:System.Runtime.Serialization.SerializationInfo
  System.Runtime.Serialization.StreamingContext:
    name:
      CSharp:
      - id: System.Runtime.Serialization.StreamingContext
        name: StreamingContext
        nameWithType: StreamingContext
        qualifiedName: System.Runtime.Serialization.StreamingContext
        isExternal: true
      VB:
      - id: System.Runtime.Serialization.StreamingContext
        name: StreamingContext
        nameWithType: StreamingContext
        qualifiedName: System.Runtime.Serialization.StreamingContext
        isExternal: true
    isDefinition: true
    parent: System.Runtime.Serialization
    commentId: T:System.Runtime.Serialization.StreamingContext
  NPCEngine.NPCEngineException:
    name:
      CSharp:
      - id: NPCEngine.NPCEngineException
        name: NPCEngineException
        nameWithType: NPCEngineException
        qualifiedName: NPCEngine.NPCEngineException
      VB:
      - id: NPCEngine.NPCEngineException
        name: NPCEngineException
        nameWithType: NPCEngineException
        qualifiedName: NPCEngine.NPCEngineException
    isDefinition: true
    commentId: T:NPCEngine.NPCEngineException
  NPCEngine:
    name:
      CSharp:
      - name: NPCEngine
        nameWithType: NPCEngine
        qualifiedName: NPCEngine
      VB:
      - name: NPCEngine
        nameWithType: NPCEngine
        qualifiedName: NPCEngine
    isDefinition: true
    commentId: N:NPCEngine
  System.Collections:
    name:
      CSharp:
      - name: System.Collections
        nameWithType: System.Collections
        qualifiedName: System.Collections
        isExternal: true
      VB:
      - name: System.Collections
        nameWithType: System.Collections
        qualifiedName: System.Collections
    isDefinition: true
    commentId: N:System.Collections
  System.Collections.IEnumerator:
    name:
      CSharp:
      - id: System.Collections.IEnumerator
        name: IEnumerator
        nameWithType: IEnumerator
        qualifiedName: System.Collections.IEnumerator
        isExternal: true
      VB:
      - id: System.Collections.IEnumerator
        name: IEnumerator
        nameWithType: IEnumerator
        qualifiedName: System.Collections.IEnumerator
        isExternal: true
    isDefinition: true
    parent: System.Collections
    commentId: T:System.Collections.IEnumerator
  Global.List{System.String}:
    name:
      CSharp:
      - id: Global.List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.List`1
    commentId: '!:Global.List{System.String}'
  Global.Action`1:
    name:
      CSharp:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
  Global.Action{List{List{System.Single}}}:
    name:
      CSharp:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.Action`1
    commentId: '!:Global.Action{List{List{System.Single}}}'
  Global.Action{NPCEngine.NPCEngineException}:
    name:
      CSharp:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: NPCEngine.NPCEngineException
        name: NPCEngineException
        nameWithType: NPCEngineException
        qualifiedName: NPCEngine.NPCEngineException
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: NPCEngine.NPCEngineException
        name: NPCEngineException
        nameWithType: NPCEngineException
        qualifiedName: NPCEngine.NPCEngineException
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.Action`1
    commentId: '!:Global.Action{NPCEngine.NPCEngineException}'
  NPCEngine.API.Classification.Classify*:
    name:
      CSharp:
      - id: NPCEngine.API.Classification.Classify*
        name: Classify
        nameWithType: Classification.Classify
        qualifiedName: NPCEngine.API.Classification.Classify
      VB:
      - id: NPCEngine.API.Classification.Classify*
        name: Classify
        nameWithType: Classification.Classify
        qualifiedName: NPCEngine.API.Classification.Classify
    isDefinition: true
    commentId: Overload:NPCEngine.API.Classification.Classify
  NPCEngine.API.Classification:
    name:
      CSharp:
      - id: NPCEngine.API.Classification
        name: Classification
        nameWithType: Classification
        qualifiedName: NPCEngine.API.Classification
      VB:
      - id: NPCEngine.API.Classification
        name: Classification
        nameWithType: Classification
        qualifiedName: NPCEngine.API.Classification
    isDefinition: true
    commentId: T:NPCEngine.API.Classification
  NPCEngine.API.ServiceMetadata:
    name:
      CSharp:
      - id: NPCEngine.API.ServiceMetadata
        name: ServiceMetadata
        nameWithType: ServiceMetadata
        qualifiedName: NPCEngine.API.ServiceMetadata
      VB:
      - id: NPCEngine.API.ServiceMetadata
        name: ServiceMetadata
        nameWithType: ServiceMetadata
        qualifiedName: NPCEngine.API.ServiceMetadata
    isDefinition: true
    commentId: T:NPCEngine.API.ServiceMetadata
  NPCEngine.API:
    name:
      CSharp:
      - name: NPCEngine.API
        nameWithType: NPCEngine.API
        qualifiedName: NPCEngine.API
      VB:
      - name: NPCEngine.API
        nameWithType: NPCEngine.API
        qualifiedName: NPCEngine.API
    isDefinition: true
    commentId: N:NPCEngine.API
  NPCEngine.API.ServiceStatus:
    name:
      CSharp:
      - id: NPCEngine.API.ServiceStatus
        name: ServiceStatus
        nameWithType: ServiceStatus
        qualifiedName: NPCEngine.API.ServiceStatus
      VB:
      - id: NPCEngine.API.ServiceStatus
        name: ServiceStatus
        nameWithType: ServiceStatus
        qualifiedName: NPCEngine.API.ServiceStatus
    isDefinition: true
    parent: NPCEngine.API
    commentId: T:NPCEngine.API.ServiceStatus
  NPCEngine.API.Control.StartService*:
    name:
      CSharp:
      - id: NPCEngine.API.Control.StartService*
        name: StartService
        nameWithType: Control.StartService
        qualifiedName: NPCEngine.API.Control.StartService
      VB:
      - id: NPCEngine.API.Control.StartService*
        name: StartService
        nameWithType: Control.StartService
        qualifiedName: NPCEngine.API.Control.StartService
    isDefinition: true
    commentId: Overload:NPCEngine.API.Control.StartService
  NPCEngine.API.Control.StopService*:
    name:
      CSharp:
      - id: NPCEngine.API.Control.StopService*
        name: StopService
        nameWithType: Control.StopService
        qualifiedName: NPCEngine.API.Control.StopService
      VB:
      - id: NPCEngine.API.Control.StopService*
        name: StopService
        nameWithType: Control.StopService
        qualifiedName: NPCEngine.API.Control.StopService
    isDefinition: true
    commentId: Overload:NPCEngine.API.Control.StopService
  Global.Action{NPCEngine.API.ServiceStatus}:
    name:
      CSharp:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: NPCEngine.API.ServiceStatus
        name: ServiceStatus
        nameWithType: ServiceStatus
        qualifiedName: NPCEngine.API.ServiceStatus
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: NPCEngine.API.ServiceStatus
        name: ServiceStatus
        nameWithType: ServiceStatus
        qualifiedName: NPCEngine.API.ServiceStatus
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.Action`1
    commentId: '!:Global.Action{NPCEngine.API.ServiceStatus}'
  NPCEngine.API.Control.GetServiceStatus*:
    name:
      CSharp:
      - id: NPCEngine.API.Control.GetServiceStatus*
        name: GetServiceStatus
        nameWithType: Control.GetServiceStatus
        qualifiedName: NPCEngine.API.Control.GetServiceStatus
      VB:
      - id: NPCEngine.API.Control.GetServiceStatus*
        name: GetServiceStatus
        nameWithType: Control.GetServiceStatus
        qualifiedName: NPCEngine.API.Control.GetServiceStatus
    isDefinition: true
    commentId: Overload:NPCEngine.API.Control.GetServiceStatus
  NPCEngine.API.Control.RestartService*:
    name:
      CSharp:
      - id: NPCEngine.API.Control.RestartService*
        name: RestartService
        nameWithType: Control.RestartService
        qualifiedName: NPCEngine.API.Control.RestartService
      VB:
      - id: NPCEngine.API.Control.RestartService*
        name: RestartService
        nameWithType: Control.RestartService
        qualifiedName: NPCEngine.API.Control.RestartService
    isDefinition: true
    commentId: Overload:NPCEngine.API.Control.RestartService
  Global.Action{NPCEngine.API.ServiceMetadata}:
    name:
      CSharp:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: NPCEngine.API.ServiceMetadata
        name: ServiceMetadata
        nameWithType: ServiceMetadata
        qualifiedName: NPCEngine.API.ServiceMetadata
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: NPCEngine.API.ServiceMetadata
        name: ServiceMetadata
        nameWithType: ServiceMetadata
        qualifiedName: NPCEngine.API.ServiceMetadata
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.Action`1
    commentId: '!:Global.Action{NPCEngine.API.ServiceMetadata}'
  NPCEngine.API.Control.GetServiceMetadata*:
    name:
      CSharp:
      - id: NPCEngine.API.Control.GetServiceMetadata*
        name: GetServiceMetadata
        nameWithType: Control.GetServiceMetadata
        qualifiedName: NPCEngine.API.Control.GetServiceMetadata
      VB:
      - id: NPCEngine.API.Control.GetServiceMetadata*
        name: GetServiceMetadata
        nameWithType: Control.GetServiceMetadata
        qualifiedName: NPCEngine.API.Control.GetServiceMetadata
    isDefinition: true
    commentId: Overload:NPCEngine.API.Control.GetServiceMetadata
  Global.Action{List{NPCEngine.API.ServiceMetadata}}:
    name:
      CSharp:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: NPCEngine.API.ServiceMetadata
        name: ServiceMetadata
        nameWithType: ServiceMetadata
        qualifiedName: NPCEngine.API.ServiceMetadata
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: NPCEngine.API.ServiceMetadata
        name: ServiceMetadata
        nameWithType: ServiceMetadata
        qualifiedName: NPCEngine.API.ServiceMetadata
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.Action`1
    commentId: '!:Global.Action{List{NPCEngine.API.ServiceMetadata}}'
  NPCEngine.API.Control.GetServicesMetadata*:
    name:
      CSharp:
      - id: NPCEngine.API.Control.GetServicesMetadata*
        name: GetServicesMetadata
        nameWithType: Control.GetServicesMetadata
        qualifiedName: NPCEngine.API.Control.GetServicesMetadata
      VB:
      - id: NPCEngine.API.Control.GetServicesMetadata*
        name: GetServicesMetadata
        nameWithType: Control.GetServicesMetadata
        qualifiedName: NPCEngine.API.Control.GetServicesMetadata
    isDefinition: true
    commentId: Overload:NPCEngine.API.Control.GetServicesMetadata
  NPCEngine.API.Control.StopServiceNoConfirm*:
    name:
      CSharp:
      - id: NPCEngine.API.Control.StopServiceNoConfirm*
        name: StopServiceNoConfirm
        nameWithType: Control.StopServiceNoConfirm
        qualifiedName: NPCEngine.API.Control.StopServiceNoConfirm
      VB:
      - id: NPCEngine.API.Control.StopServiceNoConfirm*
        name: StopServiceNoConfirm
        nameWithType: Control.StopServiceNoConfirm
        qualifiedName: NPCEngine.API.Control.StopServiceNoConfirm
    isDefinition: true
    commentId: Overload:NPCEngine.API.Control.StopServiceNoConfirm
  NPCEngine.API.Control.StartServiceNoConfirm*:
    name:
      CSharp:
      - id: NPCEngine.API.Control.StartServiceNoConfirm*
        name: StartServiceNoConfirm
        nameWithType: Control.StartServiceNoConfirm
        qualifiedName: NPCEngine.API.Control.StartServiceNoConfirm
      VB:
      - id: NPCEngine.API.Control.StartServiceNoConfirm*
        name: StartServiceNoConfirm
        nameWithType: Control.StartServiceNoConfirm
        qualifiedName: NPCEngine.API.Control.StartServiceNoConfirm
    isDefinition: true
    commentId: Overload:NPCEngine.API.Control.StartServiceNoConfirm
  NPCEngine.API.Control:
    name:
      CSharp:
      - id: NPCEngine.API.Control
        name: Control
        nameWithType: Control
        qualifiedName: NPCEngine.API.Control
      VB:
      - id: NPCEngine.API.Control
        name: Control
        nameWithType: Control
        qualifiedName: NPCEngine.API.Control
    isDefinition: true
    commentId: T:NPCEngine.API.Control
  Global.Action{System.String}:
    name:
      CSharp:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.Action`1
    commentId: '!:Global.Action{System.String}'
  NPCEngine.API.PersonaDialogue.StartDialogue*:
    name:
      CSharp:
      - id: NPCEngine.API.PersonaDialogue.StartDialogue*
        name: StartDialogue
        nameWithType: PersonaDialogue.StartDialogue
        qualifiedName: NPCEngine.API.PersonaDialogue.StartDialogue
      VB:
      - id: NPCEngine.API.PersonaDialogue.StartDialogue*
        name: StartDialogue
        nameWithType: PersonaDialogue.StartDialogue
        qualifiedName: NPCEngine.API.PersonaDialogue.StartDialogue
    isDefinition: true
    commentId: Overload:NPCEngine.API.PersonaDialogue.StartDialogue
  Global.Action{Tuple{System.String,System.Boolean}}:
    name:
      CSharp:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.Tuple`2
        name: Tuple
        nameWithType: Tuple
        qualifiedName: Tuple
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.Tuple`2
        name: Tuple
        nameWithType: Tuple
        qualifiedName: Tuple
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.Action`1
    commentId: '!:Global.Action{Tuple{System.String,System.Boolean}}'
  System.Single:
    name:
      CSharp:
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      VB:
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Single
  NPCEngine.API.PersonaDialogue.StepDialogue*:
    name:
      CSharp:
      - id: NPCEngine.API.PersonaDialogue.StepDialogue*
        name: StepDialogue
        nameWithType: PersonaDialogue.StepDialogue
        qualifiedName: NPCEngine.API.PersonaDialogue.StepDialogue
      VB:
      - id: NPCEngine.API.PersonaDialogue.StepDialogue*
        name: StepDialogue
        nameWithType: PersonaDialogue.StepDialogue
        qualifiedName: NPCEngine.API.PersonaDialogue.StepDialogue
    isDefinition: true
    commentId: Overload:NPCEngine.API.PersonaDialogue.StepDialogue
  NPCEngine.API.PersonaDialogue:
    name:
      CSharp:
      - id: NPCEngine.API.PersonaDialogue
        name: PersonaDialogue
        nameWithType: PersonaDialogue
        qualifiedName: NPCEngine.API.PersonaDialogue
      VB:
      - id: NPCEngine.API.PersonaDialogue
        name: PersonaDialogue
        nameWithType: PersonaDialogue
        qualifiedName: NPCEngine.API.PersonaDialogue
    isDefinition: true
    commentId: T:NPCEngine.API.PersonaDialogue
  System.Collections.IEnumerable:
    name:
      CSharp:
      - id: System.Collections.IEnumerable
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.IEnumerable
        isExternal: true
      VB:
      - id: System.Collections.IEnumerable
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.IEnumerable
        isExternal: true
    isDefinition: true
    parent: System.Collections
    commentId: T:System.Collections.IEnumerable
  NPCEngine.API.SemanticQuery.Cache*:
    name:
      CSharp:
      - id: NPCEngine.API.SemanticQuery.Cache*
        name: Cache
        nameWithType: SemanticQuery.Cache
        qualifiedName: NPCEngine.API.SemanticQuery.Cache
      VB:
      - id: NPCEngine.API.SemanticQuery.Cache*
        name: Cache
        nameWithType: SemanticQuery.Cache
        qualifiedName: NPCEngine.API.SemanticQuery.Cache
    isDefinition: true
    commentId: Overload:NPCEngine.API.SemanticQuery.Cache
  Global.Action{List{System.Single}}:
    name:
      CSharp:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.Action`1
    commentId: '!:Global.Action{List{System.Single}}'
  NPCEngine.API.SemanticQuery.Compare*:
    name:
      CSharp:
      - id: NPCEngine.API.SemanticQuery.Compare*
        name: Compare
        nameWithType: SemanticQuery.Compare
        qualifiedName: NPCEngine.API.SemanticQuery.Compare
      VB:
      - id: NPCEngine.API.SemanticQuery.Compare*
        name: Compare
        nameWithType: SemanticQuery.Compare
        qualifiedName: NPCEngine.API.SemanticQuery.Compare
    isDefinition: true
    commentId: Overload:NPCEngine.API.SemanticQuery.Compare
  NPCEngine.API.SemanticQuery:
    name:
      CSharp:
      - id: NPCEngine.API.SemanticQuery
        name: SemanticQuery
        nameWithType: SemanticQuery
        qualifiedName: NPCEngine.API.SemanticQuery
      VB:
      - id: NPCEngine.API.SemanticQuery
        name: SemanticQuery
        nameWithType: SemanticQuery
        qualifiedName: NPCEngine.API.SemanticQuery
    isDefinition: true
    commentId: T:NPCEngine.API.SemanticQuery
  NPCEngine.API.SpeechToText.Listen*:
    name:
      CSharp:
      - id: NPCEngine.API.SpeechToText.Listen*
        name: Listen
        nameWithType: SpeechToText.Listen
        qualifiedName: NPCEngine.API.SpeechToText.Listen
      VB:
      - id: NPCEngine.API.SpeechToText.Listen*
        name: Listen
        nameWithType: SpeechToText.Listen
        qualifiedName: NPCEngine.API.SpeechToText.Listen
    isDefinition: true
    commentId: Overload:NPCEngine.API.SpeechToText.Listen
  Global.List{System.Single}:
    name:
      CSharp:
      - id: Global.List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.List`1
    commentId: '!:Global.List{System.Single}'
  NPCEngine.API.SpeechToText.Transcribe*:
    name:
      CSharp:
      - id: NPCEngine.API.SpeechToText.Transcribe*
        name: Transcribe
        nameWithType: SpeechToText.Transcribe
        qualifiedName: NPCEngine.API.SpeechToText.Transcribe
      VB:
      - id: NPCEngine.API.SpeechToText.Transcribe*
        name: Transcribe
        nameWithType: SpeechToText.Transcribe
        qualifiedName: NPCEngine.API.SpeechToText.Transcribe
    isDefinition: true
    commentId: Overload:NPCEngine.API.SpeechToText.Transcribe
  Global.Action{List{System.String}}:
    name:
      CSharp:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.Action`1
    commentId: '!:Global.Action{List{System.String}}'
  NPCEngine.API.SpeechToText.GetDevices*:
    name:
      CSharp:
      - id: NPCEngine.API.SpeechToText.GetDevices*
        name: GetDevices
        nameWithType: SpeechToText.GetDevices
        qualifiedName: NPCEngine.API.SpeechToText.GetDevices
      VB:
      - id: NPCEngine.API.SpeechToText.GetDevices*
        name: GetDevices
        nameWithType: SpeechToText.GetDevices
        qualifiedName: NPCEngine.API.SpeechToText.GetDevices
    isDefinition: true
    commentId: Overload:NPCEngine.API.SpeechToText.GetDevices
  NPCEngine.API.SpeechToText.SetDevice*:
    name:
      CSharp:
      - id: NPCEngine.API.SpeechToText.SetDevice*
        name: SetDevice
        nameWithType: SpeechToText.SetDevice
        qualifiedName: NPCEngine.API.SpeechToText.SetDevice
      VB:
      - id: NPCEngine.API.SpeechToText.SetDevice*
        name: SetDevice
        nameWithType: SpeechToText.SetDevice
        qualifiedName: NPCEngine.API.SpeechToText.SetDevice
    isDefinition: true
    commentId: Overload:NPCEngine.API.SpeechToText.SetDevice
  NPCEngine.API.SpeechToText.InitializeMicrophoneInput*:
    name:
      CSharp:
      - id: NPCEngine.API.SpeechToText.InitializeMicrophoneInput*
        name: InitializeMicrophoneInput
        nameWithType: SpeechToText.InitializeMicrophoneInput
        qualifiedName: NPCEngine.API.SpeechToText.InitializeMicrophoneInput
      VB:
      - id: NPCEngine.API.SpeechToText.InitializeMicrophoneInput*
        name: InitializeMicrophoneInput
        nameWithType: SpeechToText.InitializeMicrophoneInput
        qualifiedName: NPCEngine.API.SpeechToText.InitializeMicrophoneInput
    isDefinition: true
    commentId: Overload:NPCEngine.API.SpeechToText.InitializeMicrophoneInput
  NPCEngine.API.SpeechToText:
    name:
      CSharp:
      - id: NPCEngine.API.SpeechToText
        name: SpeechToText
        nameWithType: SpeechToText
        qualifiedName: NPCEngine.API.SpeechToText
      VB:
      - id: NPCEngine.API.SpeechToText
        name: SpeechToText
        nameWithType: SpeechToText
        qualifiedName: NPCEngine.API.SpeechToText
    isDefinition: true
    commentId: T:NPCEngine.API.SpeechToText
  ContextType:
    name:
      CSharp:
      - name: ContextType
        nameWithType: ContextType
        qualifiedName: ContextType
      VB:
      - name: ContextType
        nameWithType: ContextType
        qualifiedName: ContextType
    isDefinition: true
    commentId: '!:ContextType'
  '{ContextType}':
    name:
      CSharp:
      - name: ContextType
        nameWithType: ContextType
        qualifiedName: ContextType
      VB:
      - name: ContextType
        nameWithType: ContextType
        qualifiedName: ContextType
    isDefinition: false
    definition: ContextType
    commentId: '!:ContextType'
  NPCEngine.API.TextGeneration`1.GenerateReply*:
    name:
      CSharp:
      - id: NPCEngine.API.TextGeneration`1.GenerateReply*
        name: GenerateReply
        nameWithType: TextGeneration<ContextType>.GenerateReply
        qualifiedName: NPCEngine.API.TextGeneration<ContextType>.GenerateReply
      VB:
      - id: NPCEngine.API.TextGeneration`1.GenerateReply*
        name: GenerateReply
        nameWithType: TextGeneration(Of ContextType).GenerateReply
        qualifiedName: NPCEngine.API.TextGeneration(Of ContextType).GenerateReply
    isDefinition: true
    commentId: Overload:NPCEngine.API.TextGeneration`1.GenerateReply
  Global.Action{Dictionary{System.String,System.String}}:
    name:
      CSharp:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.Action`1
    commentId: '!:Global.Action{Dictionary{System.String,System.String}}'
  NPCEngine.API.TextGeneration`1.GetSpecialTokens*:
    name:
      CSharp:
      - id: NPCEngine.API.TextGeneration`1.GetSpecialTokens*
        name: GetSpecialTokens
        nameWithType: TextGeneration<ContextType>.GetSpecialTokens
        qualifiedName: NPCEngine.API.TextGeneration<ContextType>.GetSpecialTokens
      VB:
      - id: NPCEngine.API.TextGeneration`1.GetSpecialTokens*
        name: GetSpecialTokens
        nameWithType: TextGeneration(Of ContextType).GetSpecialTokens
        qualifiedName: NPCEngine.API.TextGeneration(Of ContextType).GetSpecialTokens
    isDefinition: true
    commentId: Overload:NPCEngine.API.TextGeneration`1.GetSpecialTokens
  NPCEngine.API.TextGeneration`1.GetPromptTemplate*:
    name:
      CSharp:
      - id: NPCEngine.API.TextGeneration`1.GetPromptTemplate*
        name: GetPromptTemplate
        nameWithType: TextGeneration<ContextType>.GetPromptTemplate
        qualifiedName: NPCEngine.API.TextGeneration<ContextType>.GetPromptTemplate
      VB:
      - id: NPCEngine.API.TextGeneration`1.GetPromptTemplate*
        name: GetPromptTemplate
        nameWithType: TextGeneration(Of ContextType).GetPromptTemplate
        qualifiedName: NPCEngine.API.TextGeneration(Of ContextType).GetPromptTemplate
    isDefinition: true
    commentId: Overload:NPCEngine.API.TextGeneration`1.GetPromptTemplate
  NPCEngine.API.TextGeneration`1:
    name:
      CSharp:
      - id: NPCEngine.API.TextGeneration`1
        name: TextGeneration
        nameWithType: TextGeneration
        qualifiedName: NPCEngine.API.TextGeneration
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: ContextType
        nameWithType: ContextType
        qualifiedName: ContextType
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: NPCEngine.API.TextGeneration`1
        name: TextGeneration
        nameWithType: TextGeneration
        qualifiedName: NPCEngine.API.TextGeneration
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: ContextType
        nameWithType: ContextType
        qualifiedName: ContextType
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:NPCEngine.API.TextGeneration`1
  Global.Action:
    name:
      CSharp:
      - id: Global.Action
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      VB:
      - id: Global.Action
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
    isDefinition: true
  NPCEngine.API.TextToSpeech.StartTTS*:
    name:
      CSharp:
      - id: NPCEngine.API.TextToSpeech.StartTTS*
        name: StartTTS
        nameWithType: TextToSpeech.StartTTS
        qualifiedName: NPCEngine.API.TextToSpeech.StartTTS
      VB:
      - id: NPCEngine.API.TextToSpeech.StartTTS*
        name: StartTTS
        nameWithType: TextToSpeech.StartTTS
        qualifiedName: NPCEngine.API.TextToSpeech.StartTTS
    isDefinition: true
    commentId: Overload:NPCEngine.API.TextToSpeech.StartTTS
  NPCEngine.API.TextToSpeech.GetNextResult*:
    name:
      CSharp:
      - id: NPCEngine.API.TextToSpeech.GetNextResult*
        name: GetNextResult
        nameWithType: TextToSpeech.GetNextResult
        qualifiedName: NPCEngine.API.TextToSpeech.GetNextResult
      VB:
      - id: NPCEngine.API.TextToSpeech.GetNextResult*
        name: GetNextResult
        nameWithType: TextToSpeech.GetNextResult
        qualifiedName: NPCEngine.API.TextToSpeech.GetNextResult
    isDefinition: true
    commentId: Overload:NPCEngine.API.TextToSpeech.GetNextResult
  NPCEngine.API.TextToSpeech.GetSpeakerIds*:
    name:
      CSharp:
      - id: NPCEngine.API.TextToSpeech.GetSpeakerIds*
        name: GetSpeakerIds
        nameWithType: TextToSpeech.GetSpeakerIds
        qualifiedName: NPCEngine.API.TextToSpeech.GetSpeakerIds
      VB:
      - id: NPCEngine.API.TextToSpeech.GetSpeakerIds*
        name: GetSpeakerIds
        nameWithType: TextToSpeech.GetSpeakerIds
        qualifiedName: NPCEngine.API.TextToSpeech.GetSpeakerIds
    isDefinition: true
    commentId: Overload:NPCEngine.API.TextToSpeech.GetSpeakerIds
  NPCEngine.API.TextToSpeech:
    name:
      CSharp:
      - id: NPCEngine.API.TextToSpeech
        name: TextToSpeech
        nameWithType: TextToSpeech
        qualifiedName: NPCEngine.API.TextToSpeech
      VB:
      - id: NPCEngine.API.TextToSpeech
        name: TextToSpeech
        nameWithType: TextToSpeech
        qualifiedName: NPCEngine.API.TextToSpeech
    isDefinition: true
    commentId: T:NPCEngine.API.TextToSpeech
  NPCEngine.Components.AbstractDialogueSystem.StartDialogue*:
    name:
      CSharp:
      - id: NPCEngine.Components.AbstractDialogueSystem.StartDialogue*
        name: StartDialogue
        nameWithType: AbstractDialogueSystem.StartDialogue
        qualifiedName: NPCEngine.Components.AbstractDialogueSystem.StartDialogue
      VB:
      - id: NPCEngine.Components.AbstractDialogueSystem.StartDialogue*
        name: StartDialogue
        nameWithType: AbstractDialogueSystem.StartDialogue
        qualifiedName: NPCEngine.Components.AbstractDialogueSystem.StartDialogue
    isDefinition: true
    commentId: Overload:NPCEngine.Components.AbstractDialogueSystem.StartDialogue
  NPCEngine.Components.AbstractDialogueSystem.EndDialogue*:
    name:
      CSharp:
      - id: NPCEngine.Components.AbstractDialogueSystem.EndDialogue*
        name: EndDialogue
        nameWithType: AbstractDialogueSystem.EndDialogue
        qualifiedName: NPCEngine.Components.AbstractDialogueSystem.EndDialogue
      VB:
      - id: NPCEngine.Components.AbstractDialogueSystem.EndDialogue*
        name: EndDialogue
        nameWithType: AbstractDialogueSystem.EndDialogue
        qualifiedName: NPCEngine.Components.AbstractDialogueSystem.EndDialogue
    isDefinition: true
    commentId: Overload:NPCEngine.Components.AbstractDialogueSystem.EndDialogue
  NPCEngine.Components.AbstractDialogueSystem.CurrentNodeIsPlayer*:
    name:
      CSharp:
      - id: NPCEngine.Components.AbstractDialogueSystem.CurrentNodeIsPlayer*
        name: CurrentNodeIsPlayer
        nameWithType: AbstractDialogueSystem.CurrentNodeIsPlayer
        qualifiedName: NPCEngine.Components.AbstractDialogueSystem.CurrentNodeIsPlayer
      VB:
      - id: NPCEngine.Components.AbstractDialogueSystem.CurrentNodeIsPlayer*
        name: CurrentNodeIsPlayer
        nameWithType: AbstractDialogueSystem.CurrentNodeIsPlayer
        qualifiedName: NPCEngine.Components.AbstractDialogueSystem.CurrentNodeIsPlayer
    isDefinition: true
    commentId: Overload:NPCEngine.Components.AbstractDialogueSystem.CurrentNodeIsPlayer
  NPCEngine.Components.AbstractDialogueSystem.GetCurrentNodeOptions*:
    name:
      CSharp:
      - id: NPCEngine.Components.AbstractDialogueSystem.GetCurrentNodeOptions*
        name: GetCurrentNodeOptions
        nameWithType: AbstractDialogueSystem.GetCurrentNodeOptions
        qualifiedName: NPCEngine.Components.AbstractDialogueSystem.GetCurrentNodeOptions
      VB:
      - id: NPCEngine.Components.AbstractDialogueSystem.GetCurrentNodeOptions*
        name: GetCurrentNodeOptions
        nameWithType: AbstractDialogueSystem.GetCurrentNodeOptions
        qualifiedName: NPCEngine.Components.AbstractDialogueSystem.GetCurrentNodeOptions
    isDefinition: true
    commentId: Overload:NPCEngine.Components.AbstractDialogueSystem.GetCurrentNodeOptions
  NPCEngine.Components.AbstractDialogueSystem.GetCurrentNodeTopics*:
    name:
      CSharp:
      - id: NPCEngine.Components.AbstractDialogueSystem.GetCurrentNodeTopics*
        name: GetCurrentNodeTopics
        nameWithType: AbstractDialogueSystem.GetCurrentNodeTopics
        qualifiedName: NPCEngine.Components.AbstractDialogueSystem.GetCurrentNodeTopics
      VB:
      - id: NPCEngine.Components.AbstractDialogueSystem.GetCurrentNodeTopics*
        name: GetCurrentNodeTopics
        nameWithType: AbstractDialogueSystem.GetCurrentNodeTopics
        qualifiedName: NPCEngine.Components.AbstractDialogueSystem.GetCurrentNodeTopics
    isDefinition: true
    commentId: Overload:NPCEngine.Components.AbstractDialogueSystem.GetCurrentNodeTopics
  NPCEngine.Components.AbstractDialogueSystem.SelectOption*:
    name:
      CSharp:
      - id: NPCEngine.Components.AbstractDialogueSystem.SelectOption*
        name: SelectOption
        nameWithType: AbstractDialogueSystem.SelectOption
        qualifiedName: NPCEngine.Components.AbstractDialogueSystem.SelectOption
      VB:
      - id: NPCEngine.Components.AbstractDialogueSystem.SelectOption*
        name: SelectOption
        nameWithType: AbstractDialogueSystem.SelectOption
        qualifiedName: NPCEngine.Components.AbstractDialogueSystem.SelectOption
    isDefinition: true
    commentId: Overload:NPCEngine.Components.AbstractDialogueSystem.SelectOption
  NPCEngine.Components.AbstractDialogueSystem.Next*:
    name:
      CSharp:
      - id: NPCEngine.Components.AbstractDialogueSystem.Next*
        name: Next
        nameWithType: AbstractDialogueSystem.Next
        qualifiedName: NPCEngine.Components.AbstractDialogueSystem.Next
      VB:
      - id: NPCEngine.Components.AbstractDialogueSystem.Next*
        name: Next
        nameWithType: AbstractDialogueSystem.Next
        qualifiedName: NPCEngine.Components.AbstractDialogueSystem.Next
    isDefinition: true
    commentId: Overload:NPCEngine.Components.AbstractDialogueSystem.Next
  NPCEngine.Components.AbstractDialogueSystem.CurrentNodeThreshold*:
    name:
      CSharp:
      - id: NPCEngine.Components.AbstractDialogueSystem.CurrentNodeThreshold*
        name: CurrentNodeThreshold
        nameWithType: AbstractDialogueSystem.CurrentNodeThreshold
        qualifiedName: NPCEngine.Components.AbstractDialogueSystem.CurrentNodeThreshold
      VB:
      - id: NPCEngine.Components.AbstractDialogueSystem.CurrentNodeThreshold*
        name: CurrentNodeThreshold
        nameWithType: AbstractDialogueSystem.CurrentNodeThreshold
        qualifiedName: NPCEngine.Components.AbstractDialogueSystem.CurrentNodeThreshold
    isDefinition: true
    commentId: Overload:NPCEngine.Components.AbstractDialogueSystem.CurrentNodeThreshold
  NPCEngine.Components.AbstractDialogueSystem.CurrentNodeNPCLine*:
    name:
      CSharp:
      - id: NPCEngine.Components.AbstractDialogueSystem.CurrentNodeNPCLine*
        name: CurrentNodeNPCLine
        nameWithType: AbstractDialogueSystem.CurrentNodeNPCLine
        qualifiedName: NPCEngine.Components.AbstractDialogueSystem.CurrentNodeNPCLine
      VB:
      - id: NPCEngine.Components.AbstractDialogueSystem.CurrentNodeNPCLine*
        name: CurrentNodeNPCLine
        nameWithType: AbstractDialogueSystem.CurrentNodeNPCLine
        qualifiedName: NPCEngine.Components.AbstractDialogueSystem.CurrentNodeNPCLine
    isDefinition: true
    commentId: Overload:NPCEngine.Components.AbstractDialogueSystem.CurrentNodeNPCLine
  Global.AudioClip:
    name:
      CSharp:
      - id: Global.AudioClip
        name: AudioClip
        nameWithType: AudioClip
        qualifiedName: AudioClip
        isExternal: true
      VB:
      - id: Global.AudioClip
        name: AudioClip
        nameWithType: AudioClip
        qualifiedName: AudioClip
        isExternal: true
    isDefinition: true
  NPCEngine.Components.AbstractDialogueSystem.CurrentNodeNPCAudio*:
    name:
      CSharp:
      - id: NPCEngine.Components.AbstractDialogueSystem.CurrentNodeNPCAudio*
        name: CurrentNodeNPCAudio
        nameWithType: AbstractDialogueSystem.CurrentNodeNPCAudio
        qualifiedName: NPCEngine.Components.AbstractDialogueSystem.CurrentNodeNPCAudio
      VB:
      - id: NPCEngine.Components.AbstractDialogueSystem.CurrentNodeNPCAudio*
        name: CurrentNodeNPCAudio
        nameWithType: AbstractDialogueSystem.CurrentNodeNPCAudio
        qualifiedName: NPCEngine.Components.AbstractDialogueSystem.CurrentNodeNPCAudio
    isDefinition: true
    commentId: Overload:NPCEngine.Components.AbstractDialogueSystem.CurrentNodeNPCAudio
  NPCEngine.Components.AbstractDialogueSystem.IsEnd*:
    name:
      CSharp:
      - id: NPCEngine.Components.AbstractDialogueSystem.IsEnd*
        name: IsEnd
        nameWithType: AbstractDialogueSystem.IsEnd
        qualifiedName: NPCEngine.Components.AbstractDialogueSystem.IsEnd
      VB:
      - id: NPCEngine.Components.AbstractDialogueSystem.IsEnd*
        name: IsEnd
        nameWithType: AbstractDialogueSystem.IsEnd
        qualifiedName: NPCEngine.Components.AbstractDialogueSystem.IsEnd
    isDefinition: true
    commentId: Overload:NPCEngine.Components.AbstractDialogueSystem.IsEnd
  NPCEngine.Components.AbstractDialogueSystem:
    name:
      CSharp:
      - id: NPCEngine.Components.AbstractDialogueSystem
        name: AbstractDialogueSystem
        nameWithType: AbstractDialogueSystem
        qualifiedName: NPCEngine.Components.AbstractDialogueSystem
      VB:
      - id: NPCEngine.Components.AbstractDialogueSystem
        name: AbstractDialogueSystem
        nameWithType: AbstractDialogueSystem
        qualifiedName: NPCEngine.Components.AbstractDialogueSystem
    isDefinition: true
    parent: NPCEngine.Components
    commentId: T:NPCEngine.Components.AbstractDialogueSystem
  NPCEngine.Components.AbstractSpeechToText.Context*:
    name:
      CSharp:
      - id: NPCEngine.Components.AbstractSpeechToText.Context*
        name: Context
        nameWithType: AbstractSpeechToText.Context
        qualifiedName: NPCEngine.Components.AbstractSpeechToText.Context
      VB:
      - id: NPCEngine.Components.AbstractSpeechToText.Context*
        name: Context
        nameWithType: AbstractSpeechToText.Context
        qualifiedName: NPCEngine.Components.AbstractSpeechToText.Context
    isDefinition: true
    commentId: Overload:NPCEngine.Components.AbstractSpeechToText.Context
  NPCEngine.Components.AbstractSpeechToText.StartListening*:
    name:
      CSharp:
      - id: NPCEngine.Components.AbstractSpeechToText.StartListening*
        name: StartListening
        nameWithType: AbstractSpeechToText.StartListening
        qualifiedName: NPCEngine.Components.AbstractSpeechToText.StartListening
      VB:
      - id: NPCEngine.Components.AbstractSpeechToText.StartListening*
        name: StartListening
        nameWithType: AbstractSpeechToText.StartListening
        qualifiedName: NPCEngine.Components.AbstractSpeechToText.StartListening
    isDefinition: true
    commentId: Overload:NPCEngine.Components.AbstractSpeechToText.StartListening
  NPCEngine.Components.AbstractSpeechToText.StopListening*:
    name:
      CSharp:
      - id: NPCEngine.Components.AbstractSpeechToText.StopListening*
        name: StopListening
        nameWithType: AbstractSpeechToText.StopListening
        qualifiedName: NPCEngine.Components.AbstractSpeechToText.StopListening
      VB:
      - id: NPCEngine.Components.AbstractSpeechToText.StopListening*
        name: StopListening
        nameWithType: AbstractSpeechToText.StopListening
        qualifiedName: NPCEngine.Components.AbstractSpeechToText.StopListening
    isDefinition: true
    commentId: Overload:NPCEngine.Components.AbstractSpeechToText.StopListening
  NPCEngine.Components.AbstractSpeechToText.SpeechRecognized*:
    name:
      CSharp:
      - id: NPCEngine.Components.AbstractSpeechToText.SpeechRecognized*
        name: SpeechRecognized
        nameWithType: AbstractSpeechToText.SpeechRecognized
        qualifiedName: NPCEngine.Components.AbstractSpeechToText.SpeechRecognized
      VB:
      - id: NPCEngine.Components.AbstractSpeechToText.SpeechRecognized*
        name: SpeechRecognized
        nameWithType: AbstractSpeechToText.SpeechRecognized
        qualifiedName: NPCEngine.Components.AbstractSpeechToText.SpeechRecognized
    isDefinition: true
    commentId: Overload:NPCEngine.Components.AbstractSpeechToText.SpeechRecognized
  NPCEngine.Components.AbstractSpeechToText:
    name:
      CSharp:
      - id: NPCEngine.Components.AbstractSpeechToText
        name: AbstractSpeechToText
        nameWithType: AbstractSpeechToText
        qualifiedName: NPCEngine.Components.AbstractSpeechToText
      VB:
      - id: NPCEngine.Components.AbstractSpeechToText
        name: AbstractSpeechToText
        nameWithType: AbstractSpeechToText
        qualifiedName: NPCEngine.Components.AbstractSpeechToText
    isDefinition: true
    parent: NPCEngine.Components
    commentId: T:NPCEngine.Components.AbstractSpeechToText
  NPCEngine.Components.Character:
    name:
      CSharp:
      - id: NPCEngine.Components.Character
        name: Character
        nameWithType: Character
        qualifiedName: NPCEngine.Components.Character
      VB:
      - id: NPCEngine.Components.Character
        name: Character
        nameWithType: Character
        qualifiedName: NPCEngine.Components.Character
    isDefinition: true
    parent: NPCEngine.Components
    commentId: T:NPCEngine.Components.Character
  NPCEngine.Components:
    name:
      CSharp:
      - name: NPCEngine.Components
        nameWithType: NPCEngine.Components
        qualifiedName: NPCEngine.Components
      VB:
      - name: NPCEngine.Components
        nameWithType: NPCEngine.Components
        qualifiedName: NPCEngine.Components
    isDefinition: true
    commentId: N:NPCEngine.Components
  NPCEngine.Components.Location:
    name:
      CSharp:
      - id: NPCEngine.Components.Location
        name: Location
        nameWithType: Location
        qualifiedName: NPCEngine.Components.Location
      VB:
      - id: NPCEngine.Components.Location
        name: Location
        nameWithType: Location
        qualifiedName: NPCEngine.Components.Location
    isDefinition: true
    parent: NPCEngine.Components
    commentId: T:NPCEngine.Components.Location
  Global.Collider:
    name:
      CSharp:
      - id: Global.Collider
        name: Collider
        nameWithType: Collider
        qualifiedName: Collider
        isExternal: true
      VB:
      - id: Global.Collider
        name: Collider
        nameWithType: Collider
        qualifiedName: Collider
        isExternal: true
    isDefinition: true
    commentId: '!:Global.Collider'
  NPCEngine.Components.ColliderLocationTrigger:
    name:
      CSharp:
      - id: NPCEngine.Components.ColliderLocationTrigger
        name: ColliderLocationTrigger
        nameWithType: ColliderLocationTrigger
        qualifiedName: NPCEngine.Components.ColliderLocationTrigger
      VB:
      - id: NPCEngine.Components.ColliderLocationTrigger
        name: ColliderLocationTrigger
        nameWithType: ColliderLocationTrigger
        qualifiedName: NPCEngine.Components.ColliderLocationTrigger
    isDefinition: true
    commentId: T:NPCEngine.Components.ColliderLocationTrigger
  Global.GameObject:
    name:
      CSharp:
      - id: Global.GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: GameObject
        isExternal: true
      VB:
      - id: Global.GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: GameObject
        isExternal: true
    isDefinition: true
    commentId: '!:Global.GameObject'
  Global.Text:
    name:
      CSharp:
      - id: Global.Text
        name: Text
        nameWithType: Text
        qualifiedName: Text
        isExternal: true
      VB:
      - id: Global.Text
        name: Text
        nameWithType: Text
        qualifiedName: Text
        isExternal: true
    isDefinition: true
  Global.Color:
    name:
      CSharp:
      - id: Global.Color
        name: Color
        nameWithType: Color
        qualifiedName: Color
        isExternal: true
      VB:
      - id: Global.Color
        name: Color
        nameWithType: Color
        qualifiedName: Color
        isExternal: true
    isDefinition: true
  NPCEngine.Components.ChatLine:
    name:
      CSharp:
      - id: NPCEngine.Components.ChatLine
        name: ChatLine
        nameWithType: ChatLine
        qualifiedName: NPCEngine.Components.ChatLine
      VB:
      - id: NPCEngine.Components.ChatLine
        name: ChatLine
        nameWithType: ChatLine
        qualifiedName: NPCEngine.Components.ChatLine
    isDefinition: true
    parent: NPCEngine.Components
    commentId: T:NPCEngine.Components.ChatLine
  NPCEngine.Components.DialogueUI.AddLine*:
    name:
      CSharp:
      - id: NPCEngine.Components.DialogueUI.AddLine*
        name: AddLine
        nameWithType: DialogueUI.AddLine
        qualifiedName: NPCEngine.Components.DialogueUI.AddLine
      VB:
      - id: NPCEngine.Components.DialogueUI.AddLine*
        name: AddLine
        nameWithType: DialogueUI.AddLine
        qualifiedName: NPCEngine.Components.DialogueUI.AddLine
    isDefinition: true
    commentId: Overload:NPCEngine.Components.DialogueUI.AddLine
  NPCEngine.Components.DialogueUI.UpdateTopics*:
    name:
      CSharp:
      - id: NPCEngine.Components.DialogueUI.UpdateTopics*
        name: UpdateTopics
        nameWithType: DialogueUI.UpdateTopics
        qualifiedName: NPCEngine.Components.DialogueUI.UpdateTopics
      VB:
      - id: NPCEngine.Components.DialogueUI.UpdateTopics*
        name: UpdateTopics
        nameWithType: DialogueUI.UpdateTopics
        qualifiedName: NPCEngine.Components.DialogueUI.UpdateTopics
    isDefinition: true
    commentId: Overload:NPCEngine.Components.DialogueUI.UpdateTopics
  NPCEngine.Components.DialogueUI.Enable*:
    name:
      CSharp:
      - id: NPCEngine.Components.DialogueUI.Enable*
        name: Enable
        nameWithType: DialogueUI.Enable
        qualifiedName: NPCEngine.Components.DialogueUI.Enable
      VB:
      - id: NPCEngine.Components.DialogueUI.Enable*
        name: Enable
        nameWithType: DialogueUI.Enable
        qualifiedName: NPCEngine.Components.DialogueUI.Enable
    isDefinition: true
    commentId: Overload:NPCEngine.Components.DialogueUI.Enable
  NPCEngine.Components.DialogueUI.Disable*:
    name:
      CSharp:
      - id: NPCEngine.Components.DialogueUI.Disable*
        name: Disable
        nameWithType: DialogueUI.Disable
        qualifiedName: NPCEngine.Components.DialogueUI.Disable
      VB:
      - id: NPCEngine.Components.DialogueUI.Disable*
        name: Disable
        nameWithType: DialogueUI.Disable
        qualifiedName: NPCEngine.Components.DialogueUI.Disable
    isDefinition: true
    commentId: Overload:NPCEngine.Components.DialogueUI.Disable
  NPCEngine.Components.DialogueUI:
    name:
      CSharp:
      - id: NPCEngine.Components.DialogueUI
        name: DialogueUI
        nameWithType: DialogueUI
        qualifiedName: NPCEngine.Components.DialogueUI
      VB:
      - id: NPCEngine.Components.DialogueUI
        name: DialogueUI
        nameWithType: DialogueUI
        qualifiedName: NPCEngine.Components.DialogueUI
    isDefinition: true
    commentId: T:NPCEngine.Components.DialogueUI
  NPCEngine.Components.AbstractSpeechToText.Context:
    name:
      CSharp:
      - id: NPCEngine.Components.AbstractSpeechToText.Context
        name: Context
        nameWithType: AbstractSpeechToText.Context
        qualifiedName: NPCEngine.Components.AbstractSpeechToText.Context
      VB:
      - id: NPCEngine.Components.AbstractSpeechToText.Context
        name: Context
        nameWithType: AbstractSpeechToText.Context
        qualifiedName: NPCEngine.Components.AbstractSpeechToText.Context
    isDefinition: true
    parent: NPCEngine.Components.AbstractSpeechToText
    commentId: P:NPCEngine.Components.AbstractSpeechToText.Context
  NPCEngine.Components.AbstractSpeechToText.OnSpeechRecognized:
    name:
      CSharp:
      - id: NPCEngine.Components.AbstractSpeechToText.OnSpeechRecognized
        name: OnSpeechRecognized
        nameWithType: AbstractSpeechToText.OnSpeechRecognized
        qualifiedName: NPCEngine.Components.AbstractSpeechToText.OnSpeechRecognized
      VB:
      - id: NPCEngine.Components.AbstractSpeechToText.OnSpeechRecognized
        name: OnSpeechRecognized
        nameWithType: AbstractSpeechToText.OnSpeechRecognized
        qualifiedName: NPCEngine.Components.AbstractSpeechToText.OnSpeechRecognized
    isDefinition: true
    parent: NPCEngine.Components.AbstractSpeechToText
    commentId: E:NPCEngine.Components.AbstractSpeechToText.OnSpeechRecognized
  NPCEngine.Components.AbstractSpeechToText.OnSpeechRecognitionFailed:
    name:
      CSharp:
      - id: NPCEngine.Components.AbstractSpeechToText.OnSpeechRecognitionFailed
        name: OnSpeechRecognitionFailed
        nameWithType: AbstractSpeechToText.OnSpeechRecognitionFailed
        qualifiedName: NPCEngine.Components.AbstractSpeechToText.OnSpeechRecognitionFailed
      VB:
      - id: NPCEngine.Components.AbstractSpeechToText.OnSpeechRecognitionFailed
        name: OnSpeechRecognitionFailed
        nameWithType: AbstractSpeechToText.OnSpeechRecognitionFailed
        qualifiedName: NPCEngine.Components.AbstractSpeechToText.OnSpeechRecognitionFailed
    isDefinition: true
    parent: NPCEngine.Components.AbstractSpeechToText
    commentId: E:NPCEngine.Components.AbstractSpeechToText.OnSpeechRecognitionFailed
  NPCEngine.Components.AbstractSpeechToText.SpeechRecognized(System.String):
    name:
      CSharp:
      - id: NPCEngine.Components.AbstractSpeechToText.SpeechRecognized(System.String)
        name: SpeechRecognized
        nameWithType: AbstractSpeechToText.SpeechRecognized
        qualifiedName: NPCEngine.Components.AbstractSpeechToText.SpeechRecognized
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: NPCEngine.Components.AbstractSpeechToText.SpeechRecognized(System.String)
        name: SpeechRecognized
        nameWithType: AbstractSpeechToText.SpeechRecognized
        qualifiedName: NPCEngine.Components.AbstractSpeechToText.SpeechRecognized
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: NPCEngine.Components.AbstractSpeechToText
    commentId: M:NPCEngine.Components.AbstractSpeechToText.SpeechRecognized(System.String)
  NPCEngine.Components.DictationRecognizerSTT.PolicyNotAccepted*:
    name:
      CSharp:
      - id: NPCEngine.Components.DictationRecognizerSTT.PolicyNotAccepted*
        name: PolicyNotAccepted
        nameWithType: DictationRecognizerSTT.PolicyNotAccepted
        qualifiedName: NPCEngine.Components.DictationRecognizerSTT.PolicyNotAccepted
      VB:
      - id: NPCEngine.Components.DictationRecognizerSTT.PolicyNotAccepted*
        name: PolicyNotAccepted
        nameWithType: DictationRecognizerSTT.PolicyNotAccepted
        qualifiedName: NPCEngine.Components.DictationRecognizerSTT.PolicyNotAccepted
    isDefinition: true
    commentId: Overload:NPCEngine.Components.DictationRecognizerSTT.PolicyNotAccepted
  NPCEngine.Components.DictationRecognizerSTT.RecognizerStarted*:
    name:
      CSharp:
      - id: NPCEngine.Components.DictationRecognizerSTT.RecognizerStarted*
        name: RecognizerStarted
        nameWithType: DictationRecognizerSTT.RecognizerStarted
        qualifiedName: NPCEngine.Components.DictationRecognizerSTT.RecognizerStarted
      VB:
      - id: NPCEngine.Components.DictationRecognizerSTT.RecognizerStarted*
        name: RecognizerStarted
        nameWithType: DictationRecognizerSTT.RecognizerStarted
        qualifiedName: NPCEngine.Components.DictationRecognizerSTT.RecognizerStarted
    isDefinition: true
    commentId: Overload:NPCEngine.Components.DictationRecognizerSTT.RecognizerStarted
  NPCEngine.Components.AbstractSpeechToText.StartListening:
    name:
      CSharp:
      - id: NPCEngine.Components.AbstractSpeechToText.StartListening
        name: StartListening
        nameWithType: AbstractSpeechToText.StartListening
        qualifiedName: NPCEngine.Components.AbstractSpeechToText.StartListening
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: NPCEngine.Components.AbstractSpeechToText.StartListening
        name: StartListening
        nameWithType: AbstractSpeechToText.StartListening
        qualifiedName: NPCEngine.Components.AbstractSpeechToText.StartListening
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: NPCEngine.Components.AbstractSpeechToText
    commentId: M:NPCEngine.Components.AbstractSpeechToText.StartListening
  NPCEngine.Components.DictationRecognizerSTT.StartListening*:
    name:
      CSharp:
      - id: NPCEngine.Components.DictationRecognizerSTT.StartListening*
        name: StartListening
        nameWithType: DictationRecognizerSTT.StartListening
        qualifiedName: NPCEngine.Components.DictationRecognizerSTT.StartListening
      VB:
      - id: NPCEngine.Components.DictationRecognizerSTT.StartListening*
        name: StartListening
        nameWithType: DictationRecognizerSTT.StartListening
        qualifiedName: NPCEngine.Components.DictationRecognizerSTT.StartListening
    isDefinition: true
    commentId: Overload:NPCEngine.Components.DictationRecognizerSTT.StartListening
  NPCEngine.Components.AbstractSpeechToText.StopListening:
    name:
      CSharp:
      - id: NPCEngine.Components.AbstractSpeechToText.StopListening
        name: StopListening
        nameWithType: AbstractSpeechToText.StopListening
        qualifiedName: NPCEngine.Components.AbstractSpeechToText.StopListening
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: NPCEngine.Components.AbstractSpeechToText.StopListening
        name: StopListening
        nameWithType: AbstractSpeechToText.StopListening
        qualifiedName: NPCEngine.Components.AbstractSpeechToText.StopListening
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: NPCEngine.Components.AbstractSpeechToText
    commentId: M:NPCEngine.Components.AbstractSpeechToText.StopListening
  NPCEngine.Components.DictationRecognizerSTT.StopListening*:
    name:
      CSharp:
      - id: NPCEngine.Components.DictationRecognizerSTT.StopListening*
        name: StopListening
        nameWithType: DictationRecognizerSTT.StopListening
        qualifiedName: NPCEngine.Components.DictationRecognizerSTT.StopListening
      VB:
      - id: NPCEngine.Components.DictationRecognizerSTT.StopListening*
        name: StopListening
        nameWithType: DictationRecognizerSTT.StopListening
        qualifiedName: NPCEngine.Components.DictationRecognizerSTT.StopListening
    isDefinition: true
    commentId: Overload:NPCEngine.Components.DictationRecognizerSTT.StopListening
  NPCEngine.Components.DictationRecognizerSTT:
    name:
      CSharp:
      - id: NPCEngine.Components.DictationRecognizerSTT
        name: DictationRecognizerSTT
        nameWithType: DictationRecognizerSTT
        qualifiedName: NPCEngine.Components.DictationRecognizerSTT
      VB:
      - id: NPCEngine.Components.DictationRecognizerSTT
        name: DictationRecognizerSTT
        nameWithType: DictationRecognizerSTT
        qualifiedName: NPCEngine.Components.DictationRecognizerSTT
    isDefinition: true
    commentId: T:NPCEngine.Components.DictationRecognizerSTT
  Global.List{NPCEngine.Components.ChatLine}:
    name:
      CSharp:
      - id: Global.List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: NPCEngine.Components.ChatLine
        name: ChatLine
        nameWithType: ChatLine
        qualifiedName: NPCEngine.Components.ChatLine
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: NPCEngine.Components.ChatLine
        name: ChatLine
        nameWithType: ChatLine
        qualifiedName: NPCEngine.Components.ChatLine
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.List`1
    commentId: '!:Global.List{NPCEngine.Components.ChatLine}'
  Global.UnityEvent:
    name:
      CSharp:
      - id: Global.UnityEvent
        name: UnityEvent
        nameWithType: UnityEvent
        qualifiedName: UnityEvent
        isExternal: true
      VB:
      - id: Global.UnityEvent
        name: UnityEvent
        nameWithType: UnityEvent
        qualifiedName: UnityEvent
        isExternal: true
    isDefinition: true
  Global.UnityEvent`2:
    name:
      CSharp:
      - id: Global.UnityEvent`2
        name: UnityEvent
        nameWithType: UnityEvent
        qualifiedName: UnityEvent
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.UnityEvent`2
        name: UnityEvent
        nameWithType: UnityEvent
        qualifiedName: UnityEvent
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: '!:Global.UnityEvent`2'
  Global.UnityEvent{NPCEngine.Components.ChatLine,System.Boolean}:
    name:
      CSharp:
      - id: Global.UnityEvent`2
        name: UnityEvent
        nameWithType: UnityEvent
        qualifiedName: UnityEvent
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: NPCEngine.Components.ChatLine
        name: ChatLine
        nameWithType: ChatLine
        qualifiedName: NPCEngine.Components.ChatLine
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.UnityEvent`2
        name: UnityEvent
        nameWithType: UnityEvent
        qualifiedName: UnityEvent
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: NPCEngine.Components.ChatLine
        name: ChatLine
        nameWithType: ChatLine
        qualifiedName: NPCEngine.Components.ChatLine
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.UnityEvent`2
    commentId: '!:Global.UnityEvent{NPCEngine.Components.ChatLine,System.Boolean}'
  Global.UnityEvent`1:
    name:
      CSharp:
      - id: Global.UnityEvent`1
        name: UnityEvent
        nameWithType: UnityEvent
        qualifiedName: UnityEvent
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.UnityEvent`1
        name: UnityEvent
        nameWithType: UnityEvent
        qualifiedName: UnityEvent
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: '!:Global.UnityEvent`1'
  Global.UnityEvent{List{System.String}}:
    name:
      CSharp:
      - id: Global.UnityEvent`1
        name: UnityEvent
        nameWithType: UnityEvent
        qualifiedName: UnityEvent
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.UnityEvent`1
        name: UnityEvent
        nameWithType: UnityEvent
        qualifiedName: UnityEvent
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.UnityEvent`1
    commentId: '!:Global.UnityEvent{List{System.String}}'
  NPCEngine.Utility.AudioSourceQueue:
    name:
      CSharp:
      - id: NPCEngine.Utility.AudioSourceQueue
        name: AudioSourceQueue
        nameWithType: AudioSourceQueue
        qualifiedName: NPCEngine.Utility.AudioSourceQueue
      VB:
      - id: NPCEngine.Utility.AudioSourceQueue
        name: AudioSourceQueue
        nameWithType: AudioSourceQueue
        qualifiedName: NPCEngine.Utility.AudioSourceQueue
    isDefinition: true
    parent: NPCEngine.Utility
    commentId: T:NPCEngine.Utility.AudioSourceQueue
  NPCEngine.Components.NonPlayerCharacter.StartDialogue*:
    name:
      CSharp:
      - id: NPCEngine.Components.NonPlayerCharacter.StartDialogue*
        name: StartDialogue
        nameWithType: NonPlayerCharacter.StartDialogue
        qualifiedName: NPCEngine.Components.NonPlayerCharacter.StartDialogue
      VB:
      - id: NPCEngine.Components.NonPlayerCharacter.StartDialogue*
        name: StartDialogue
        nameWithType: NonPlayerCharacter.StartDialogue
        qualifiedName: NPCEngine.Components.NonPlayerCharacter.StartDialogue
    isDefinition: true
    commentId: Overload:NPCEngine.Components.NonPlayerCharacter.StartDialogue
  NPCEngine.Components.NonPlayerCharacter.EndDialogue*:
    name:
      CSharp:
      - id: NPCEngine.Components.NonPlayerCharacter.EndDialogue*
        name: EndDialogue
        nameWithType: NonPlayerCharacter.EndDialogue
        qualifiedName: NPCEngine.Components.NonPlayerCharacter.EndDialogue
      VB:
      - id: NPCEngine.Components.NonPlayerCharacter.EndDialogue*
        name: EndDialogue
        nameWithType: NonPlayerCharacter.EndDialogue
        qualifiedName: NPCEngine.Components.NonPlayerCharacter.EndDialogue
    isDefinition: true
    commentId: Overload:NPCEngine.Components.NonPlayerCharacter.EndDialogue
  NPCEngine.Components.NonPlayerCharacter.HandleLine*:
    name:
      CSharp:
      - id: NPCEngine.Components.NonPlayerCharacter.HandleLine*
        name: HandleLine
        nameWithType: NonPlayerCharacter.HandleLine
        qualifiedName: NPCEngine.Components.NonPlayerCharacter.HandleLine
      VB:
      - id: NPCEngine.Components.NonPlayerCharacter.HandleLine*
        name: HandleLine
        nameWithType: NonPlayerCharacter.HandleLine
        qualifiedName: NPCEngine.Components.NonPlayerCharacter.HandleLine
    isDefinition: true
    commentId: Overload:NPCEngine.Components.NonPlayerCharacter.HandleLine
  NPCEngine.Components.NonPlayerCharacter.HandleLineCoroutine*:
    name:
      CSharp:
      - id: NPCEngine.Components.NonPlayerCharacter.HandleLineCoroutine*
        name: HandleLineCoroutine
        nameWithType: NonPlayerCharacter.HandleLineCoroutine
        qualifiedName: NPCEngine.Components.NonPlayerCharacter.HandleLineCoroutine
      VB:
      - id: NPCEngine.Components.NonPlayerCharacter.HandleLineCoroutine*
        name: HandleLineCoroutine
        nameWithType: NonPlayerCharacter.HandleLineCoroutine
        qualifiedName: NPCEngine.Components.NonPlayerCharacter.HandleLineCoroutine
    isDefinition: true
    commentId: Overload:NPCEngine.Components.NonPlayerCharacter.HandleLineCoroutine
  NPCEngine.Components.NonPlayerCharacter.HandlePlayerLineCoroutine*:
    name:
      CSharp:
      - id: NPCEngine.Components.NonPlayerCharacter.HandlePlayerLineCoroutine*
        name: HandlePlayerLineCoroutine
        nameWithType: NonPlayerCharacter.HandlePlayerLineCoroutine
        qualifiedName: NPCEngine.Components.NonPlayerCharacter.HandlePlayerLineCoroutine
      VB:
      - id: NPCEngine.Components.NonPlayerCharacter.HandlePlayerLineCoroutine*
        name: HandlePlayerLineCoroutine
        nameWithType: NonPlayerCharacter.HandlePlayerLineCoroutine
        qualifiedName: NPCEngine.Components.NonPlayerCharacter.HandlePlayerLineCoroutine
    isDefinition: true
    commentId: Overload:NPCEngine.Components.NonPlayerCharacter.HandlePlayerLineCoroutine
  NPCEngine.Components.NonPlayerCharacter.GenerateReply*:
    name:
      CSharp:
      - id: NPCEngine.Components.NonPlayerCharacter.GenerateReply*
        name: GenerateReply
        nameWithType: NonPlayerCharacter.GenerateReply
        qualifiedName: NPCEngine.Components.NonPlayerCharacter.GenerateReply
      VB:
      - id: NPCEngine.Components.NonPlayerCharacter.GenerateReply*
        name: GenerateReply
        nameWithType: NonPlayerCharacter.GenerateReply
        qualifiedName: NPCEngine.Components.NonPlayerCharacter.GenerateReply
    isDefinition: true
    commentId: Overload:NPCEngine.Components.NonPlayerCharacter.GenerateReply
  NPCEngine.Components.NonPlayerCharacter.SayNPCLines*:
    name:
      CSharp:
      - id: NPCEngine.Components.NonPlayerCharacter.SayNPCLines*
        name: SayNPCLines
        nameWithType: NonPlayerCharacter.SayNPCLines
        qualifiedName: NPCEngine.Components.NonPlayerCharacter.SayNPCLines
      VB:
      - id: NPCEngine.Components.NonPlayerCharacter.SayNPCLines*
        name: SayNPCLines
        nameWithType: NonPlayerCharacter.SayNPCLines
        qualifiedName: NPCEngine.Components.NonPlayerCharacter.SayNPCLines
    isDefinition: true
    commentId: Overload:NPCEngine.Components.NonPlayerCharacter.SayNPCLines
  NPCEngine.Components.NonPlayerCharacter.GenerateAndPlaySpeech*:
    name:
      CSharp:
      - id: NPCEngine.Components.NonPlayerCharacter.GenerateAndPlaySpeech*
        name: GenerateAndPlaySpeech
        nameWithType: NonPlayerCharacter.GenerateAndPlaySpeech
        qualifiedName: NPCEngine.Components.NonPlayerCharacter.GenerateAndPlaySpeech
      VB:
      - id: NPCEngine.Components.NonPlayerCharacter.GenerateAndPlaySpeech*
        name: GenerateAndPlaySpeech
        nameWithType: NonPlayerCharacter.GenerateAndPlaySpeech
        qualifiedName: NPCEngine.Components.NonPlayerCharacter.GenerateAndPlaySpeech
    isDefinition: true
    commentId: Overload:NPCEngine.Components.NonPlayerCharacter.GenerateAndPlaySpeech
  NPCEngine.Components.NonPlayerCharacter:
    name:
      CSharp:
      - id: NPCEngine.Components.NonPlayerCharacter
        name: NonPlayerCharacter
        nameWithType: NonPlayerCharacter
        qualifiedName: NPCEngine.Components.NonPlayerCharacter
      VB:
      - id: NPCEngine.Components.NonPlayerCharacter
        name: NonPlayerCharacter
        nameWithType: NonPlayerCharacter
        qualifiedName: NPCEngine.Components.NonPlayerCharacter
    isDefinition: true
    parent: NPCEngine.Components
    commentId: T:NPCEngine.Components.NonPlayerCharacter
  NPCEngine.Utility.Singleton{NPCEngine.Components.NPCEngineManager}:
    name:
      CSharp:
      - id: NPCEngine.Utility.Singleton`1
        name: Singleton
        nameWithType: Singleton
        qualifiedName: NPCEngine.Utility.Singleton
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: NPCEngine.Components.NPCEngineManager
        name: NPCEngineManager
        nameWithType: NPCEngineManager
        qualifiedName: NPCEngine.Components.NPCEngineManager
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: NPCEngine.Utility.Singleton`1
        name: Singleton
        nameWithType: Singleton
        qualifiedName: NPCEngine.Utility.Singleton
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: NPCEngine.Components.NPCEngineManager
        name: NPCEngineManager
        nameWithType: NPCEngineManager
        qualifiedName: NPCEngine.Components.NPCEngineManager
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: NPCEngine.Utility.Singleton`1
    parent: NPCEngine.Utility
    commentId: T:NPCEngine.Utility.Singleton{NPCEngine.Components.NPCEngineManager}
  NPCEngine.Utility.Singleton{NPCEngine.Components.NPCEngineManager}.Instance:
    name:
      CSharp:
      - id: NPCEngine.Utility.Singleton`1.Instance
        name: Instance
        nameWithType: Singleton<NPCEngineManager>.Instance
        qualifiedName: NPCEngine.Utility.Singleton<NPCEngine.Components.NPCEngineManager>.Instance
      VB:
      - id: NPCEngine.Utility.Singleton`1.Instance
        name: Instance
        nameWithType: Singleton(Of NPCEngineManager).Instance
        qualifiedName: NPCEngine.Utility.Singleton(Of NPCEngine.Components.NPCEngineManager).Instance
    isDefinition: false
    definition: NPCEngine.Utility.Singleton`1.Instance
    parent: NPCEngine.Utility.Singleton{NPCEngine.Components.NPCEngineManager}
    commentId: P:NPCEngine.Utility.Singleton{NPCEngine.Components.NPCEngineManager}.Instance
  NPCEngine.Utility.Singleton{NPCEngine.Components.NPCEngineManager}.GetInstance:
    name:
      CSharp:
      - id: NPCEngine.Utility.Singleton`1.GetInstance
        name: GetInstance
        nameWithType: Singleton<NPCEngineManager>.GetInstance
        qualifiedName: NPCEngine.Utility.Singleton<NPCEngine.Components.NPCEngineManager>.GetInstance
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: NPCEngine.Utility.Singleton`1.GetInstance
        name: GetInstance
        nameWithType: Singleton(Of NPCEngineManager).GetInstance
        qualifiedName: NPCEngine.Utility.Singleton(Of NPCEngine.Components.NPCEngineManager).GetInstance
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: NPCEngine.Utility.Singleton`1.GetInstance
    parent: NPCEngine.Utility.Singleton{NPCEngine.Components.NPCEngineManager}
    commentId: M:NPCEngine.Utility.Singleton{NPCEngine.Components.NPCEngineManager}.GetInstance
  Global.List{NPCEngine.API.ServiceMetadata}:
    name:
      CSharp:
      - id: Global.List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: NPCEngine.API.ServiceMetadata
        name: ServiceMetadata
        nameWithType: ServiceMetadata
        qualifiedName: NPCEngine.API.ServiceMetadata
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: NPCEngine.API.ServiceMetadata
        name: ServiceMetadata
        nameWithType: ServiceMetadata
        qualifiedName: NPCEngine.API.ServiceMetadata
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.List`1
    commentId: '!:Global.List{NPCEngine.API.ServiceMetadata}'
  NPCEngine.Components.NPCEngineManager.Services*:
    name:
      CSharp:
      - id: NPCEngine.Components.NPCEngineManager.Services*
        name: Services
        nameWithType: NPCEngineManager.Services
        qualifiedName: NPCEngine.Components.NPCEngineManager.Services
      VB:
      - id: NPCEngine.Components.NPCEngineManager.Services*
        name: Services
        nameWithType: NPCEngineManager.Services
        qualifiedName: NPCEngine.Components.NPCEngineManager.Services
    isDefinition: true
    commentId: Overload:NPCEngine.Components.NPCEngineManager.Services
  Global.Dictionary`2:
    name:
      CSharp:
      - id: Global.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
  Global.Dictionary{System.String,NPCEngine.API.ServiceMetadata}:
    name:
      CSharp:
      - id: Global.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: NPCEngine.API.ServiceMetadata
        name: ServiceMetadata
        nameWithType: ServiceMetadata
        qualifiedName: NPCEngine.API.ServiceMetadata
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: NPCEngine.API.ServiceMetadata
        name: ServiceMetadata
        nameWithType: ServiceMetadata
        qualifiedName: NPCEngine.API.ServiceMetadata
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.Dictionary`2
    commentId: '!:Global.Dictionary{System.String,NPCEngine.API.ServiceMetadata}'
  NPCEngine.Components.NPCEngineManager.ServicesById*:
    name:
      CSharp:
      - id: NPCEngine.Components.NPCEngineManager.ServicesById*
        name: ServicesById
        nameWithType: NPCEngineManager.ServicesById
        qualifiedName: NPCEngine.Components.NPCEngineManager.ServicesById
      VB:
      - id: NPCEngine.Components.NPCEngineManager.ServicesById*
        name: ServicesById
        nameWithType: NPCEngineManager.ServicesById
        qualifiedName: NPCEngine.Components.NPCEngineManager.ServicesById
    isDefinition: true
    commentId: Overload:NPCEngine.Components.NPCEngineManager.ServicesById
  Global.List{NPCEngine.API.ServiceStatus}:
    name:
      CSharp:
      - id: Global.List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: NPCEngine.API.ServiceStatus
        name: ServiceStatus
        nameWithType: ServiceStatus
        qualifiedName: NPCEngine.API.ServiceStatus
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: NPCEngine.API.ServiceStatus
        name: ServiceStatus
        nameWithType: ServiceStatus
        qualifiedName: NPCEngine.API.ServiceStatus
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.List`1
    commentId: '!:Global.List{NPCEngine.API.ServiceStatus}'
  NPCEngine.Components.NPCEngineManager.ServiceStatuses*:
    name:
      CSharp:
      - id: NPCEngine.Components.NPCEngineManager.ServiceStatuses*
        name: ServiceStatuses
        nameWithType: NPCEngineManager.ServiceStatuses
        qualifiedName: NPCEngine.Components.NPCEngineManager.ServiceStatuses
      VB:
      - id: NPCEngine.Components.NPCEngineManager.ServiceStatuses*
        name: ServiceStatuses
        nameWithType: NPCEngineManager.ServiceStatuses
        qualifiedName: NPCEngine.Components.NPCEngineManager.ServiceStatuses
    isDefinition: true
    commentId: Overload:NPCEngine.Components.NPCEngineManager.ServiceStatuses
  Global.Dictionary{System.String,NPCEngine.API.ServiceStatus}:
    name:
      CSharp:
      - id: Global.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: NPCEngine.API.ServiceStatus
        name: ServiceStatus
        nameWithType: ServiceStatus
        qualifiedName: NPCEngine.API.ServiceStatus
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: NPCEngine.API.ServiceStatus
        name: ServiceStatus
        nameWithType: ServiceStatus
        qualifiedName: NPCEngine.API.ServiceStatus
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.Dictionary`2
    commentId: '!:Global.Dictionary{System.String,NPCEngine.API.ServiceStatus}'
  NPCEngine.Components.NPCEngineManager.ServiceStatusesById*:
    name:
      CSharp:
      - id: NPCEngine.Components.NPCEngineManager.ServiceStatusesById*
        name: ServiceStatusesById
        nameWithType: NPCEngineManager.ServiceStatusesById
        qualifiedName: NPCEngine.Components.NPCEngineManager.ServiceStatusesById
      VB:
      - id: NPCEngine.Components.NPCEngineManager.ServiceStatusesById*
        name: ServiceStatusesById
        nameWithType: NPCEngineManager.ServiceStatusesById
        qualifiedName: NPCEngine.Components.NPCEngineManager.ServiceStatusesById
    isDefinition: true
    commentId: Overload:NPCEngine.Components.NPCEngineManager.ServiceStatusesById
  NPCEngine.Components.NPCEngineManager.InferenceEngineProcessId*:
    name:
      CSharp:
      - id: NPCEngine.Components.NPCEngineManager.InferenceEngineProcessId*
        name: InferenceEngineProcessId
        nameWithType: NPCEngineManager.InferenceEngineProcessId
        qualifiedName: NPCEngine.Components.NPCEngineManager.InferenceEngineProcessId
      VB:
      - id: NPCEngine.Components.NPCEngineManager.InferenceEngineProcessId*
        name: InferenceEngineProcessId
        nameWithType: NPCEngineManager.InferenceEngineProcessId
        qualifiedName: NPCEngine.Components.NPCEngineManager.InferenceEngineProcessId
    isDefinition: true
    commentId: Overload:NPCEngine.Components.NPCEngineManager.InferenceEngineProcessId
  NPCEngine.Components.NPCEngineManager.InferenceEngineRunning*:
    name:
      CSharp:
      - id: NPCEngine.Components.NPCEngineManager.InferenceEngineRunning*
        name: InferenceEngineRunning
        nameWithType: NPCEngineManager.InferenceEngineRunning
        qualifiedName: NPCEngine.Components.NPCEngineManager.InferenceEngineRunning
      VB:
      - id: NPCEngine.Components.NPCEngineManager.InferenceEngineRunning*
        name: InferenceEngineRunning
        nameWithType: NPCEngineManager.InferenceEngineRunning
        qualifiedName: NPCEngine.Components.NPCEngineManager.InferenceEngineRunning
    isDefinition: true
    commentId: Overload:NPCEngine.Components.NPCEngineManager.InferenceEngineRunning
  NPCEngine.Components.NPCEngineManager.StartInferenceEngine*:
    name:
      CSharp:
      - id: NPCEngine.Components.NPCEngineManager.StartInferenceEngine*
        name: StartInferenceEngine
        nameWithType: NPCEngineManager.StartInferenceEngine
        qualifiedName: NPCEngine.Components.NPCEngineManager.StartInferenceEngine
      VB:
      - id: NPCEngine.Components.NPCEngineManager.StartInferenceEngine*
        name: StartInferenceEngine
        nameWithType: NPCEngineManager.StartInferenceEngine
        qualifiedName: NPCEngine.Components.NPCEngineManager.StartInferenceEngine
    isDefinition: true
    commentId: Overload:NPCEngine.Components.NPCEngineManager.StartInferenceEngine
  NPCEngine.Components.NPCEngineManager.DownloadModel*:
    name:
      CSharp:
      - id: NPCEngine.Components.NPCEngineManager.DownloadModel*
        name: DownloadModel
        nameWithType: NPCEngineManager.DownloadModel
        qualifiedName: NPCEngine.Components.NPCEngineManager.DownloadModel
      VB:
      - id: NPCEngine.Components.NPCEngineManager.DownloadModel*
        name: DownloadModel
        nameWithType: NPCEngineManager.DownloadModel
        qualifiedName: NPCEngine.Components.NPCEngineManager.DownloadModel
    isDefinition: true
    commentId: Overload:NPCEngine.Components.NPCEngineManager.DownloadModel
  NPCEngine.Components.NPCEngineManager.StopInferenceEngine*:
    name:
      CSharp:
      - id: NPCEngine.Components.NPCEngineManager.StopInferenceEngine*
        name: StopInferenceEngine
        nameWithType: NPCEngineManager.StopInferenceEngine
        qualifiedName: NPCEngine.Components.NPCEngineManager.StopInferenceEngine
      VB:
      - id: NPCEngine.Components.NPCEngineManager.StopInferenceEngine*
        name: StopInferenceEngine
        nameWithType: NPCEngineManager.StopInferenceEngine
        qualifiedName: NPCEngine.Components.NPCEngineManager.StopInferenceEngine
    isDefinition: true
    commentId: Overload:NPCEngine.Components.NPCEngineManager.StopInferenceEngine
  T:
    name:
      CSharp:
      - name: T
        nameWithType: T
        qualifiedName: T
      VB:
      - name: T
        nameWithType: T
        qualifiedName: T
    isDefinition: true
  '{T}':
    name:
      CSharp:
      - name: T
        nameWithType: T
        qualifiedName: T
      VB:
      - name: T
        nameWithType: T
        qualifiedName: T
    isDefinition: false
    definition: T
    commentId: '!:T'
  NPCEngine.Components.NPCEngineManager.GetAPI*:
    name:
      CSharp:
      - id: NPCEngine.Components.NPCEngineManager.GetAPI*
        name: GetAPI
        nameWithType: NPCEngineManager.GetAPI
        qualifiedName: NPCEngine.Components.NPCEngineManager.GetAPI
      VB:
      - id: NPCEngine.Components.NPCEngineManager.GetAPI*
        name: GetAPI
        nameWithType: NPCEngineManager.GetAPI
        qualifiedName: NPCEngine.Components.NPCEngineManager.GetAPI
    isDefinition: true
    commentId: Overload:NPCEngine.Components.NPCEngineManager.GetAPI
  NPCEngine.Components.NPCEngineManager.StartAndMonitorServerLife*:
    name:
      CSharp:
      - id: NPCEngine.Components.NPCEngineManager.StartAndMonitorServerLife*
        name: StartAndMonitorServerLife
        nameWithType: NPCEngineManager.StartAndMonitorServerLife
        qualifiedName: NPCEngine.Components.NPCEngineManager.StartAndMonitorServerLife
      VB:
      - id: NPCEngine.Components.NPCEngineManager.StartAndMonitorServerLife*
        name: StartAndMonitorServerLife
        nameWithType: NPCEngineManager.StartAndMonitorServerLife
        qualifiedName: NPCEngine.Components.NPCEngineManager.StartAndMonitorServerLife
    isDefinition: true
    commentId: Overload:NPCEngine.Components.NPCEngineManager.StartAndMonitorServerLife
  NPCEngine.Components.NPCEngineManager.UpdateServiceStatuses*:
    name:
      CSharp:
      - id: NPCEngine.Components.NPCEngineManager.UpdateServiceStatuses*
        name: UpdateServiceStatuses
        nameWithType: NPCEngineManager.UpdateServiceStatuses
        qualifiedName: NPCEngine.Components.NPCEngineManager.UpdateServiceStatuses
      VB:
      - id: NPCEngine.Components.NPCEngineManager.UpdateServiceStatuses*
        name: UpdateServiceStatuses
        nameWithType: NPCEngineManager.UpdateServiceStatuses
        qualifiedName: NPCEngine.Components.NPCEngineManager.UpdateServiceStatuses
    isDefinition: true
    commentId: Overload:NPCEngine.Components.NPCEngineManager.UpdateServiceStatuses
  NPCEngine.Components.NPCEngineManager.UpdateServices*:
    name:
      CSharp:
      - id: NPCEngine.Components.NPCEngineManager.UpdateServices*
        name: UpdateServices
        nameWithType: NPCEngineManager.UpdateServices
        qualifiedName: NPCEngine.Components.NPCEngineManager.UpdateServices
      VB:
      - id: NPCEngine.Components.NPCEngineManager.UpdateServices*
        name: UpdateServices
        nameWithType: NPCEngineManager.UpdateServices
        qualifiedName: NPCEngine.Components.NPCEngineManager.UpdateServices
    isDefinition: true
    commentId: Overload:NPCEngine.Components.NPCEngineManager.UpdateServices
  NPCEngine.Components.NPCEngineManager:
    name:
      CSharp:
      - id: NPCEngine.Components.NPCEngineManager
        name: NPCEngineManager
        nameWithType: NPCEngineManager
        qualifiedName: NPCEngine.Components.NPCEngineManager
      VB:
      - id: NPCEngine.Components.NPCEngineManager
        name: NPCEngineManager
        nameWithType: NPCEngineManager
        qualifiedName: NPCEngine.Components.NPCEngineManager
    isDefinition: true
    commentId: T:NPCEngine.Components.NPCEngineManager
  NPCEngine.Components.NPCEngineSTT.CallSpeechToText*:
    name:
      CSharp:
      - id: NPCEngine.Components.NPCEngineSTT.CallSpeechToText*
        name: CallSpeechToText
        nameWithType: NPCEngineSTT.CallSpeechToText
        qualifiedName: NPCEngine.Components.NPCEngineSTT.CallSpeechToText
      VB:
      - id: NPCEngine.Components.NPCEngineSTT.CallSpeechToText*
        name: CallSpeechToText
        nameWithType: NPCEngineSTT.CallSpeechToText
        qualifiedName: NPCEngine.Components.NPCEngineSTT.CallSpeechToText
    isDefinition: true
    commentId: Overload:NPCEngine.Components.NPCEngineSTT.CallSpeechToText
  NPCEngine.Components.NPCEngineSTT.StartListening*:
    name:
      CSharp:
      - id: NPCEngine.Components.NPCEngineSTT.StartListening*
        name: StartListening
        nameWithType: NPCEngineSTT.StartListening
        qualifiedName: NPCEngine.Components.NPCEngineSTT.StartListening
      VB:
      - id: NPCEngine.Components.NPCEngineSTT.StartListening*
        name: StartListening
        nameWithType: NPCEngineSTT.StartListening
        qualifiedName: NPCEngine.Components.NPCEngineSTT.StartListening
    isDefinition: true
    commentId: Overload:NPCEngine.Components.NPCEngineSTT.StartListening
  NPCEngine.Components.NPCEngineSTT.StopListening*:
    name:
      CSharp:
      - id: NPCEngine.Components.NPCEngineSTT.StopListening*
        name: StopListening
        nameWithType: NPCEngineSTT.StopListening
        qualifiedName: NPCEngine.Components.NPCEngineSTT.StopListening
      VB:
      - id: NPCEngine.Components.NPCEngineSTT.StopListening*
        name: StopListening
        nameWithType: NPCEngineSTT.StopListening
        qualifiedName: NPCEngine.Components.NPCEngineSTT.StopListening
    isDefinition: true
    commentId: Overload:NPCEngine.Components.NPCEngineSTT.StopListening
  NPCEngine.Components.NPCEngineSTT:
    name:
      CSharp:
      - id: NPCEngine.Components.NPCEngineSTT
        name: NPCEngineSTT
        nameWithType: NPCEngineSTT
        qualifiedName: NPCEngine.Components.NPCEngineSTT
      VB:
      - id: NPCEngine.Components.NPCEngineSTT
        name: NPCEngineSTT
        nameWithType: NPCEngineSTT
        qualifiedName: NPCEngine.Components.NPCEngineSTT
    isDefinition: true
    commentId: T:NPCEngine.Components.NPCEngineSTT
  NPCEngine.Utility.Singleton{NPCEngine.Components.PlayerCharacter}:
    name:
      CSharp:
      - id: NPCEngine.Utility.Singleton`1
        name: Singleton
        nameWithType: Singleton
        qualifiedName: NPCEngine.Utility.Singleton
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: NPCEngine.Components.PlayerCharacter
        name: PlayerCharacter
        nameWithType: PlayerCharacter
        qualifiedName: NPCEngine.Components.PlayerCharacter
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: NPCEngine.Utility.Singleton`1
        name: Singleton
        nameWithType: Singleton
        qualifiedName: NPCEngine.Utility.Singleton
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: NPCEngine.Components.PlayerCharacter
        name: PlayerCharacter
        nameWithType: PlayerCharacter
        qualifiedName: NPCEngine.Components.PlayerCharacter
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: NPCEngine.Utility.Singleton`1
    parent: NPCEngine.Utility
    commentId: T:NPCEngine.Utility.Singleton{NPCEngine.Components.PlayerCharacter}
  NPCEngine.Utility.Singleton{NPCEngine.Components.PlayerCharacter}.Instance:
    name:
      CSharp:
      - id: NPCEngine.Utility.Singleton`1.Instance
        name: Instance
        nameWithType: Singleton<PlayerCharacter>.Instance
        qualifiedName: NPCEngine.Utility.Singleton<NPCEngine.Components.PlayerCharacter>.Instance
      VB:
      - id: NPCEngine.Utility.Singleton`1.Instance
        name: Instance
        nameWithType: Singleton(Of PlayerCharacter).Instance
        qualifiedName: NPCEngine.Utility.Singleton(Of NPCEngine.Components.PlayerCharacter).Instance
    isDefinition: false
    definition: NPCEngine.Utility.Singleton`1.Instance
    parent: NPCEngine.Utility.Singleton{NPCEngine.Components.PlayerCharacter}
    commentId: P:NPCEngine.Utility.Singleton{NPCEngine.Components.PlayerCharacter}.Instance
  NPCEngine.Utility.Singleton{NPCEngine.Components.PlayerCharacter}.GetInstance:
    name:
      CSharp:
      - id: NPCEngine.Utility.Singleton`1.GetInstance
        name: GetInstance
        nameWithType: Singleton<PlayerCharacter>.GetInstance
        qualifiedName: NPCEngine.Utility.Singleton<NPCEngine.Components.PlayerCharacter>.GetInstance
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: NPCEngine.Utility.Singleton`1.GetInstance
        name: GetInstance
        nameWithType: Singleton(Of PlayerCharacter).GetInstance
        qualifiedName: NPCEngine.Utility.Singleton(Of NPCEngine.Components.PlayerCharacter).GetInstance
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: NPCEngine.Utility.Singleton`1.GetInstance
    parent: NPCEngine.Utility.Singleton{NPCEngine.Components.PlayerCharacter}
    commentId: M:NPCEngine.Utility.Singleton{NPCEngine.Components.PlayerCharacter}.GetInstance
  Global.Camera:
    name:
      CSharp:
      - id: Global.Camera
        name: Camera
        nameWithType: Camera
        qualifiedName: Camera
        isExternal: true
      VB:
      - id: Global.Camera
        name: Camera
        nameWithType: Camera
        qualifiedName: Camera
        isExternal: true
    isDefinition: true
    commentId: '!:Global.Camera'
  NPCEngine.Components.PlayerCharacter.RegisterDialogueCandidate*:
    name:
      CSharp:
      - id: NPCEngine.Components.PlayerCharacter.RegisterDialogueCandidate*
        name: RegisterDialogueCandidate
        nameWithType: PlayerCharacter.RegisterDialogueCandidate
        qualifiedName: NPCEngine.Components.PlayerCharacter.RegisterDialogueCandidate
      VB:
      - id: NPCEngine.Components.PlayerCharacter.RegisterDialogueCandidate*
        name: RegisterDialogueCandidate
        nameWithType: PlayerCharacter.RegisterDialogueCandidate
        qualifiedName: NPCEngine.Components.PlayerCharacter.RegisterDialogueCandidate
    isDefinition: true
    commentId: Overload:NPCEngine.Components.PlayerCharacter.RegisterDialogueCandidate
  NPCEngine.Components.PlayerCharacter.DeregisterDialogueCandidate*:
    name:
      CSharp:
      - id: NPCEngine.Components.PlayerCharacter.DeregisterDialogueCandidate*
        name: DeregisterDialogueCandidate
        nameWithType: PlayerCharacter.DeregisterDialogueCandidate
        qualifiedName: NPCEngine.Components.PlayerCharacter.DeregisterDialogueCandidate
      VB:
      - id: NPCEngine.Components.PlayerCharacter.DeregisterDialogueCandidate*
        name: DeregisterDialogueCandidate
        nameWithType: PlayerCharacter.DeregisterDialogueCandidate
        qualifiedName: NPCEngine.Components.PlayerCharacter.DeregisterDialogueCandidate
    isDefinition: true
    commentId: Overload:NPCEngine.Components.PlayerCharacter.DeregisterDialogueCandidate
  NPCEngine.Components.PlayerCharacter.IsRegistered*:
    name:
      CSharp:
      - id: NPCEngine.Components.PlayerCharacter.IsRegistered*
        name: IsRegistered
        nameWithType: PlayerCharacter.IsRegistered
        qualifiedName: NPCEngine.Components.PlayerCharacter.IsRegistered
      VB:
      - id: NPCEngine.Components.PlayerCharacter.IsRegistered*
        name: IsRegistered
        nameWithType: PlayerCharacter.IsRegistered
        qualifiedName: NPCEngine.Components.PlayerCharacter.IsRegistered
    isDefinition: true
    commentId: Overload:NPCEngine.Components.PlayerCharacter.IsRegistered
  Global.Vector3:
    name:
      CSharp:
      - id: Global.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      VB:
      - id: Global.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
    isDefinition: true
    commentId: '!:Global.Vector3'
  NPCEngine.Components.PlayerCharacter.CheckIsSeen*:
    name:
      CSharp:
      - id: NPCEngine.Components.PlayerCharacter.CheckIsSeen*
        name: CheckIsSeen
        nameWithType: PlayerCharacter.CheckIsSeen
        qualifiedName: NPCEngine.Components.PlayerCharacter.CheckIsSeen
      VB:
      - id: NPCEngine.Components.PlayerCharacter.CheckIsSeen*
        name: CheckIsSeen
        nameWithType: PlayerCharacter.CheckIsSeen
        qualifiedName: NPCEngine.Components.PlayerCharacter.CheckIsSeen
    isDefinition: true
    commentId: Overload:NPCEngine.Components.PlayerCharacter.CheckIsSeen
  NPCEngine.Components.PlayerCharacter.LeaveDialog*:
    name:
      CSharp:
      - id: NPCEngine.Components.PlayerCharacter.LeaveDialog*
        name: LeaveDialog
        nameWithType: PlayerCharacter.LeaveDialog
        qualifiedName: NPCEngine.Components.PlayerCharacter.LeaveDialog
      VB:
      - id: NPCEngine.Components.PlayerCharacter.LeaveDialog*
        name: LeaveDialog
        nameWithType: PlayerCharacter.LeaveDialog
        qualifiedName: NPCEngine.Components.PlayerCharacter.LeaveDialog
    isDefinition: true
    commentId: Overload:NPCEngine.Components.PlayerCharacter.LeaveDialog
  NPCEngine.Components.PlayerCharacter:
    name:
      CSharp:
      - id: NPCEngine.Components.PlayerCharacter
        name: PlayerCharacter
        nameWithType: PlayerCharacter
        qualifiedName: NPCEngine.Components.PlayerCharacter
      VB:
      - id: NPCEngine.Components.PlayerCharacter
        name: PlayerCharacter
        nameWithType: PlayerCharacter
        qualifiedName: NPCEngine.Components.PlayerCharacter
    isDefinition: true
    commentId: T:NPCEngine.Components.PlayerCharacter
  Global.AudioSource:
    name:
      CSharp:
      - id: Global.AudioSource
        name: AudioSource
        nameWithType: AudioSource
        qualifiedName: AudioSource
        isExternal: true
      VB:
      - id: Global.AudioSource
        name: AudioSource
        nameWithType: AudioSource
        qualifiedName: AudioSource
        isExternal: true
    isDefinition: true
  NPCEngine.Components.TTSGenerator.Generating*:
    name:
      CSharp:
      - id: NPCEngine.Components.TTSGenerator.Generating*
        name: Generating
        nameWithType: TTSGenerator.Generating
        qualifiedName: NPCEngine.Components.TTSGenerator.Generating
      VB:
      - id: NPCEngine.Components.TTSGenerator.Generating*
        name: Generating
        nameWithType: TTSGenerator.Generating
        qualifiedName: NPCEngine.Components.TTSGenerator.Generating
    isDefinition: true
    commentId: Overload:NPCEngine.Components.TTSGenerator.Generating
  NPCEngine.Components.TTSGenerator.Saving*:
    name:
      CSharp:
      - id: NPCEngine.Components.TTSGenerator.Saving*
        name: Saving
        nameWithType: TTSGenerator.Saving
        qualifiedName: NPCEngine.Components.TTSGenerator.Saving
      VB:
      - id: NPCEngine.Components.TTSGenerator.Saving*
        name: Saving
        nameWithType: TTSGenerator.Saving
        qualifiedName: NPCEngine.Components.TTSGenerator.Saving
    isDefinition: true
    commentId: Overload:NPCEngine.Components.TTSGenerator.Saving
  NPCEngine.Components.TTSGenerator.ResetGeneration*:
    name:
      CSharp:
      - id: NPCEngine.Components.TTSGenerator.ResetGeneration*
        name: ResetGeneration
        nameWithType: TTSGenerator.ResetGeneration
        qualifiedName: NPCEngine.Components.TTSGenerator.ResetGeneration
      VB:
      - id: NPCEngine.Components.TTSGenerator.ResetGeneration*
        name: ResetGeneration
        nameWithType: TTSGenerator.ResetGeneration
        qualifiedName: NPCEngine.Components.TTSGenerator.ResetGeneration
    isDefinition: true
    commentId: Overload:NPCEngine.Components.TTSGenerator.ResetGeneration
  NPCEngine.Components.TTSGenerator.GenerateAudioCoroutine*:
    name:
      CSharp:
      - id: NPCEngine.Components.TTSGenerator.GenerateAudioCoroutine*
        name: GenerateAudioCoroutine
        nameWithType: TTSGenerator.GenerateAudioCoroutine
        qualifiedName: NPCEngine.Components.TTSGenerator.GenerateAudioCoroutine
      VB:
      - id: NPCEngine.Components.TTSGenerator.GenerateAudioCoroutine*
        name: GenerateAudioCoroutine
        nameWithType: TTSGenerator.GenerateAudioCoroutine
        qualifiedName: NPCEngine.Components.TTSGenerator.GenerateAudioCoroutine
    isDefinition: true
    commentId: Overload:NPCEngine.Components.TTSGenerator.GenerateAudioCoroutine
  NPCEngine.Components.TTSGenerator.SaveAudio*:
    name:
      CSharp:
      - id: NPCEngine.Components.TTSGenerator.SaveAudio*
        name: SaveAudio
        nameWithType: TTSGenerator.SaveAudio
        qualifiedName: NPCEngine.Components.TTSGenerator.SaveAudio
      VB:
      - id: NPCEngine.Components.TTSGenerator.SaveAudio*
        name: SaveAudio
        nameWithType: TTSGenerator.SaveAudio
        qualifiedName: NPCEngine.Components.TTSGenerator.SaveAudio
    isDefinition: true
    commentId: Overload:NPCEngine.Components.TTSGenerator.SaveAudio
  NPCEngine.Components.TTSGenerator:
    name:
      CSharp:
      - id: NPCEngine.Components.TTSGenerator
        name: TTSGenerator
        nameWithType: TTSGenerator
        qualifiedName: NPCEngine.Components.TTSGenerator
      VB:
      - id: NPCEngine.Components.TTSGenerator
        name: TTSGenerator
        nameWithType: TTSGenerator
        qualifiedName: NPCEngine.Components.TTSGenerator
    isDefinition: true
    commentId: T:NPCEngine.Components.TTSGenerator
  NPCEngine.Components.FantasyChatbotContext:
    name:
      CSharp:
      - id: NPCEngine.Components.FantasyChatbotContext
        name: FantasyChatbotContext
        nameWithType: FantasyChatbotContext
        qualifiedName: NPCEngine.Components.FantasyChatbotContext
      VB:
      - id: NPCEngine.Components.FantasyChatbotContext
        name: FantasyChatbotContext
        nameWithType: FantasyChatbotContext
        qualifiedName: NPCEngine.Components.FantasyChatbotContext
    isDefinition: true
    commentId: T:NPCEngine.Components.FantasyChatbotContext
  NPCEngine.API.TextGeneration{NPCEngine.Components.FantasyChatbotContext}:
    name:
      CSharp:
      - id: NPCEngine.API.TextGeneration`1
        name: TextGeneration
        nameWithType: TextGeneration
        qualifiedName: NPCEngine.API.TextGeneration
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: NPCEngine.Components.FantasyChatbotContext
        name: FantasyChatbotContext
        nameWithType: FantasyChatbotContext
        qualifiedName: NPCEngine.Components.FantasyChatbotContext
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: NPCEngine.API.TextGeneration`1
        name: TextGeneration
        nameWithType: TextGeneration
        qualifiedName: NPCEngine.API.TextGeneration
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: NPCEngine.Components.FantasyChatbotContext
        name: FantasyChatbotContext
        nameWithType: FantasyChatbotContext
        qualifiedName: NPCEngine.Components.FantasyChatbotContext
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: NPCEngine.API.TextGeneration`1
    parent: NPCEngine.API
    commentId: T:NPCEngine.API.TextGeneration{NPCEngine.Components.FantasyChatbotContext}
  ? NPCEngine.API.TextGeneration`1.GenerateReply(`0,System.Single,System.Int32,System.Int32,Action{System.String},Action{NPCEngine.NPCEngineException})
  : name:
      CSharp:
      - id: NPCEngine.API.TextGeneration`1.GenerateReply(`0,System.Single,System.Int32,System.Int32,Action{System.String},Action{NPCEngine.NPCEngineException})
        name: GenerateReply
        nameWithType: TextGeneration<ContextType>.GenerateReply
        qualifiedName: NPCEngine.API.TextGeneration<ContextType>.GenerateReply
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: ContextType
        nameWithType: ContextType
        qualifiedName: ContextType
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: NPCEngine.NPCEngineException
        name: NPCEngineException
        nameWithType: NPCEngineException
        qualifiedName: NPCEngine.NPCEngineException
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: NPCEngine.API.TextGeneration`1.GenerateReply(`0,System.Single,System.Int32,System.Int32,Action{System.String},Action{NPCEngine.NPCEngineException})
        name: GenerateReply
        nameWithType: TextGeneration(Of ContextType).GenerateReply
        qualifiedName: NPCEngine.API.TextGeneration(Of ContextType).GenerateReply
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: ContextType
        nameWithType: ContextType
        qualifiedName: ContextType
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: NPCEngine.NPCEngineException
        name: NPCEngineException
        nameWithType: NPCEngineException
        qualifiedName: NPCEngine.NPCEngineException
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:NPCEngine.API.TextGeneration`1.GenerateReply(`0,System.Single,System.Int32,System.Int32,Action{System.String},Action{NPCEngine.NPCEngineException})
  ? NPCEngine.API.TextGeneration{NPCEngine.Components.FantasyChatbotContext}.GenerateReply(NPCEngine.Components.FantasyChatbotContext,System.Single,System.Int32,System.Int32,Action{System.String},Action{NPCEngine.NPCEngineException})
  : name:
      CSharp:
      - id: NPCEngine.API.TextGeneration`1.GenerateReply(`0,System.Single,System.Int32,System.Int32,Action{System.String},Action{NPCEngine.NPCEngineException})
        name: GenerateReply
        nameWithType: TextGeneration<FantasyChatbotContext>.GenerateReply
        qualifiedName: NPCEngine.API.TextGeneration<NPCEngine.Components.FantasyChatbotContext>.GenerateReply
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: NPCEngine.Components.FantasyChatbotContext
        name: FantasyChatbotContext
        nameWithType: FantasyChatbotContext
        qualifiedName: NPCEngine.Components.FantasyChatbotContext
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: NPCEngine.NPCEngineException
        name: NPCEngineException
        nameWithType: NPCEngineException
        qualifiedName: NPCEngine.NPCEngineException
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: NPCEngine.API.TextGeneration`1.GenerateReply(`0,System.Single,System.Int32,System.Int32,Action{System.String},Action{NPCEngine.NPCEngineException})
        name: GenerateReply
        nameWithType: TextGeneration(Of FantasyChatbotContext).GenerateReply
        qualifiedName: NPCEngine.API.TextGeneration(Of NPCEngine.Components.FantasyChatbotContext).GenerateReply
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: NPCEngine.Components.FantasyChatbotContext
        name: FantasyChatbotContext
        nameWithType: FantasyChatbotContext
        qualifiedName: NPCEngine.Components.FantasyChatbotContext
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: NPCEngine.NPCEngineException
        name: NPCEngineException
        nameWithType: NPCEngineException
        qualifiedName: NPCEngine.NPCEngineException
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: NPCEngine.API.TextGeneration`1.GenerateReply(`0,System.Single,System.Int32,System.Int32,Action{System.String},Action{NPCEngine.NPCEngineException})
    parent: NPCEngine.API.TextGeneration{NPCEngine.Components.FantasyChatbotContext}
    commentId: M:NPCEngine.API.TextGeneration{NPCEngine.Components.FantasyChatbotContext}.GenerateReply(NPCEngine.Components.FantasyChatbotContext,System.Single,System.Int32,System.Int32,Action{System.String},Action{NPCEngine.NPCEngineException})
  ? NPCEngine.API.TextGeneration`1.GetSpecialTokens(Action{Dictionary{System.String,System.String}},Action{NPCEngine.NPCEngineException})
  : name:
      CSharp:
      - id: NPCEngine.API.TextGeneration`1.GetSpecialTokens(Action{Dictionary{System.String,System.String}},Action{NPCEngine.NPCEngineException})
        name: GetSpecialTokens
        nameWithType: TextGeneration<ContextType>.GetSpecialTokens
        qualifiedName: NPCEngine.API.TextGeneration<ContextType>.GetSpecialTokens
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: NPCEngine.NPCEngineException
        name: NPCEngineException
        nameWithType: NPCEngineException
        qualifiedName: NPCEngine.NPCEngineException
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: NPCEngine.API.TextGeneration`1.GetSpecialTokens(Action{Dictionary{System.String,System.String}},Action{NPCEngine.NPCEngineException})
        name: GetSpecialTokens
        nameWithType: TextGeneration(Of ContextType).GetSpecialTokens
        qualifiedName: NPCEngine.API.TextGeneration(Of ContextType).GetSpecialTokens
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: NPCEngine.NPCEngineException
        name: NPCEngineException
        nameWithType: NPCEngineException
        qualifiedName: NPCEngine.NPCEngineException
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:NPCEngine.API.TextGeneration`1.GetSpecialTokens(Action{Dictionary{System.String,System.String}},Action{NPCEngine.NPCEngineException})
  ? NPCEngine.API.TextGeneration{NPCEngine.Components.FantasyChatbotContext}.GetSpecialTokens(Action{Dictionary{System.String,System.String}},Action{NPCEngine.NPCEngineException})
  : name:
      CSharp:
      - id: NPCEngine.API.TextGeneration`1.GetSpecialTokens(Action{Dictionary{System.String,System.String}},Action{NPCEngine.NPCEngineException})
        name: GetSpecialTokens
        nameWithType: TextGeneration<FantasyChatbotContext>.GetSpecialTokens
        qualifiedName: NPCEngine.API.TextGeneration<NPCEngine.Components.FantasyChatbotContext>.GetSpecialTokens
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: NPCEngine.NPCEngineException
        name: NPCEngineException
        nameWithType: NPCEngineException
        qualifiedName: NPCEngine.NPCEngineException
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: NPCEngine.API.TextGeneration`1.GetSpecialTokens(Action{Dictionary{System.String,System.String}},Action{NPCEngine.NPCEngineException})
        name: GetSpecialTokens
        nameWithType: TextGeneration(Of FantasyChatbotContext).GetSpecialTokens
        qualifiedName: NPCEngine.API.TextGeneration(Of NPCEngine.Components.FantasyChatbotContext).GetSpecialTokens
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: NPCEngine.NPCEngineException
        name: NPCEngineException
        nameWithType: NPCEngineException
        qualifiedName: NPCEngine.NPCEngineException
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: NPCEngine.API.TextGeneration`1.GetSpecialTokens(Action{Dictionary{System.String,System.String}},Action{NPCEngine.NPCEngineException})
    parent: NPCEngine.API.TextGeneration{NPCEngine.Components.FantasyChatbotContext}
    commentId: M:NPCEngine.API.TextGeneration{NPCEngine.Components.FantasyChatbotContext}.GetSpecialTokens(Action{Dictionary{System.String,System.String}},Action{NPCEngine.NPCEngineException})
  NPCEngine.API.TextGeneration`1.GetPromptTemplate(Action{System.String},Action{NPCEngine.NPCEngineException}):
    name:
      CSharp:
      - id: NPCEngine.API.TextGeneration`1.GetPromptTemplate(Action{System.String},Action{NPCEngine.NPCEngineException})
        name: GetPromptTemplate
        nameWithType: TextGeneration<ContextType>.GetPromptTemplate
        qualifiedName: NPCEngine.API.TextGeneration<ContextType>.GetPromptTemplate
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: NPCEngine.NPCEngineException
        name: NPCEngineException
        nameWithType: NPCEngineException
        qualifiedName: NPCEngine.NPCEngineException
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: NPCEngine.API.TextGeneration`1.GetPromptTemplate(Action{System.String},Action{NPCEngine.NPCEngineException})
        name: GetPromptTemplate
        nameWithType: TextGeneration(Of ContextType).GetPromptTemplate
        qualifiedName: NPCEngine.API.TextGeneration(Of ContextType).GetPromptTemplate
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: NPCEngine.NPCEngineException
        name: NPCEngineException
        nameWithType: NPCEngineException
        qualifiedName: NPCEngine.NPCEngineException
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:NPCEngine.API.TextGeneration`1.GetPromptTemplate(Action{System.String},Action{NPCEngine.NPCEngineException})
  ? NPCEngine.API.TextGeneration{NPCEngine.Components.FantasyChatbotContext}.GetPromptTemplate(Action{System.String},Action{NPCEngine.NPCEngineException})
  : name:
      CSharp:
      - id: NPCEngine.API.TextGeneration`1.GetPromptTemplate(Action{System.String},Action{NPCEngine.NPCEngineException})
        name: GetPromptTemplate
        nameWithType: TextGeneration<FantasyChatbotContext>.GetPromptTemplate
        qualifiedName: NPCEngine.API.TextGeneration<NPCEngine.Components.FantasyChatbotContext>.GetPromptTemplate
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: NPCEngine.NPCEngineException
        name: NPCEngineException
        nameWithType: NPCEngineException
        qualifiedName: NPCEngine.NPCEngineException
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: NPCEngine.API.TextGeneration`1.GetPromptTemplate(Action{System.String},Action{NPCEngine.NPCEngineException})
        name: GetPromptTemplate
        nameWithType: TextGeneration(Of FantasyChatbotContext).GetPromptTemplate
        qualifiedName: NPCEngine.API.TextGeneration(Of NPCEngine.Components.FantasyChatbotContext).GetPromptTemplate
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: NPCEngine.NPCEngineException
        name: NPCEngineException
        nameWithType: NPCEngineException
        qualifiedName: NPCEngine.NPCEngineException
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: NPCEngine.API.TextGeneration`1.GetPromptTemplate(Action{System.String},Action{NPCEngine.NPCEngineException})
    parent: NPCEngine.API.TextGeneration{NPCEngine.Components.FantasyChatbotContext}
    commentId: M:NPCEngine.API.TextGeneration{NPCEngine.Components.FantasyChatbotContext}.GetPromptTemplate(Action{System.String},Action{NPCEngine.NPCEngineException})
  NPCEngine.Components.FantasyChatbotTextGeneration:
    name:
      CSharp:
      - id: NPCEngine.Components.FantasyChatbotTextGeneration
        name: FantasyChatbotTextGeneration
        nameWithType: FantasyChatbotTextGeneration
        qualifiedName: NPCEngine.Components.FantasyChatbotTextGeneration
      VB:
      - id: NPCEngine.Components.FantasyChatbotTextGeneration
        name: FantasyChatbotTextGeneration
        nameWithType: FantasyChatbotTextGeneration
        qualifiedName: NPCEngine.Components.FantasyChatbotTextGeneration
    isDefinition: true
    commentId: T:NPCEngine.Components.FantasyChatbotTextGeneration
  Global.String:
    name:
      CSharp:
      - id: Global.String
        name: String
        nameWithType: String
        qualifiedName: String
        isExternal: true
      VB:
      - id: Global.String
        name: String
        nameWithType: String
        qualifiedName: String
        isExternal: true
    isDefinition: true
  P:
    name:
      CSharp:
      - name: P
        nameWithType: P
        qualifiedName: P
      VB:
      - name: P
        nameWithType: P
        qualifiedName: P
    isDefinition: true
    commentId: '!:P'
  '{P}':
    name:
      CSharp:
      - name: P
        nameWithType: P
        qualifiedName: P
      VB:
      - name: P
        nameWithType: P
        qualifiedName: P
    isDefinition: false
    definition: P
    commentId: '!:P'
  Global.Action{{R}}:
    name:
      CSharp:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: R
        nameWithType: R
        qualifiedName: R
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: R
        nameWithType: R
        qualifiedName: R
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.Action`1
    commentId: '!:Global.Action{``1}'
  NPCEngine.RPC.RPCBase.Run*:
    name:
      CSharp:
      - id: NPCEngine.RPC.RPCBase.Run*
        name: Run
        nameWithType: RPCBase.Run
        qualifiedName: NPCEngine.RPC.RPCBase.Run
      VB:
      - id: NPCEngine.RPC.RPCBase.Run*
        name: Run
        nameWithType: RPCBase.Run
        qualifiedName: NPCEngine.RPC.RPCBase.Run
    isDefinition: true
    commentId: Overload:NPCEngine.RPC.RPCBase.Run
  NPCEngine.RPC.RPCBase.UpdateServerType*:
    name:
      CSharp:
      - id: NPCEngine.RPC.RPCBase.UpdateServerType*
        name: UpdateServerType
        nameWithType: RPCBase.UpdateServerType
        qualifiedName: NPCEngine.RPC.RPCBase.UpdateServerType
      VB:
      - id: NPCEngine.RPC.RPCBase.UpdateServerType*
        name: UpdateServerType
        nameWithType: RPCBase.UpdateServerType
        qualifiedName: NPCEngine.RPC.RPCBase.UpdateServerType
    isDefinition: true
    commentId: Overload:NPCEngine.RPC.RPCBase.UpdateServerType
  NPCEngine.RPC.RPCBase:
    name:
      CSharp:
      - id: NPCEngine.RPC.RPCBase
        name: RPCBase
        nameWithType: RPCBase
        qualifiedName: NPCEngine.RPC.RPCBase
      VB:
      - id: NPCEngine.RPC.RPCBase
        name: RPCBase
        nameWithType: RPCBase
        qualifiedName: NPCEngine.RPC.RPCBase
    isDefinition: true
    commentId: T:NPCEngine.RPC.RPCBase
  NPCEngine.RPC.RequestDispatcherImpl.#ctor*:
    name:
      CSharp:
      - id: NPCEngine.RPC.RequestDispatcherImpl.#ctor*
        name: RequestDispatcherImpl
        nameWithType: RequestDispatcherImpl.RequestDispatcherImpl
        qualifiedName: NPCEngine.RPC.RequestDispatcherImpl.RequestDispatcherImpl
      VB:
      - id: NPCEngine.RPC.RequestDispatcherImpl.#ctor*
        name: RequestDispatcherImpl
        nameWithType: RequestDispatcherImpl.RequestDispatcherImpl
        qualifiedName: NPCEngine.RPC.RequestDispatcherImpl.RequestDispatcherImpl
    isDefinition: true
    commentId: Overload:NPCEngine.RPC.RequestDispatcherImpl.#ctor
  NPCEngine.RPC:
    name:
      CSharp:
      - name: NPCEngine.RPC
        nameWithType: NPCEngine.RPC
        qualifiedName: NPCEngine.RPC
      VB:
      - name: NPCEngine.RPC
        nameWithType: NPCEngine.RPC
        qualifiedName: NPCEngine.RPC
    isDefinition: true
    commentId: N:NPCEngine.RPC
  NPCEngine.RPC.Request:
    name:
      CSharp:
      - id: NPCEngine.RPC.Request
        name: Request
        nameWithType: Request
        qualifiedName: NPCEngine.RPC.Request
      VB:
      - id: NPCEngine.RPC.Request
        name: Request
        nameWithType: Request
        qualifiedName: NPCEngine.RPC.Request
    isDefinition: true
    parent: NPCEngine.RPC
    commentId: T:NPCEngine.RPC.Request
  NPCEngine.RPC.RequestDispatcherImpl.DispatchRequestCoroutine*:
    name:
      CSharp:
      - id: NPCEngine.RPC.RequestDispatcherImpl.DispatchRequestCoroutine*
        name: DispatchRequestCoroutine
        nameWithType: RequestDispatcherImpl.DispatchRequestCoroutine
        qualifiedName: NPCEngine.RPC.RequestDispatcherImpl.DispatchRequestCoroutine
      VB:
      - id: NPCEngine.RPC.RequestDispatcherImpl.DispatchRequestCoroutine*
        name: DispatchRequestCoroutine
        nameWithType: RequestDispatcherImpl.DispatchRequestCoroutine
        qualifiedName: NPCEngine.RPC.RequestDispatcherImpl.DispatchRequestCoroutine
    isDefinition: true
    commentId: Overload:NPCEngine.RPC.RequestDispatcherImpl.DispatchRequestCoroutine
  NPCEngine.RPC.RequestDispatcherImpl:
    name:
      CSharp:
      - id: NPCEngine.RPC.RequestDispatcherImpl
        name: RequestDispatcherImpl
        nameWithType: RequestDispatcherImpl
        qualifiedName: NPCEngine.RPC.RequestDispatcherImpl
      VB:
      - id: NPCEngine.RPC.RequestDispatcherImpl
        name: RequestDispatcherImpl
        nameWithType: RequestDispatcherImpl
        qualifiedName: NPCEngine.RPC.RequestDispatcherImpl
    isDefinition: true
    parent: NPCEngine.RPC
    commentId: T:NPCEngine.RPC.RequestDispatcherImpl
  NPCEngine.RPC.RequestDispatcherImpl.id:
    name:
      CSharp:
      - id: NPCEngine.RPC.RequestDispatcherImpl.id
        name: id
        nameWithType: RequestDispatcherImpl.id
        qualifiedName: NPCEngine.RPC.RequestDispatcherImpl.id
      VB:
      - id: NPCEngine.RPC.RequestDispatcherImpl.id
        name: id
        nameWithType: RequestDispatcherImpl.id
        qualifiedName: NPCEngine.RPC.RequestDispatcherImpl.id
    isDefinition: true
    parent: NPCEngine.RPC.RequestDispatcherImpl
    commentId: F:NPCEngine.RPC.RequestDispatcherImpl.id
  NPCEngine.RPC.RequestDispatcherImpl.address:
    name:
      CSharp:
      - id: NPCEngine.RPC.RequestDispatcherImpl.address
        name: address
        nameWithType: RequestDispatcherImpl.address
        qualifiedName: NPCEngine.RPC.RequestDispatcherImpl.address
      VB:
      - id: NPCEngine.RPC.RequestDispatcherImpl.address
        name: address
        nameWithType: RequestDispatcherImpl.address
        qualifiedName: NPCEngine.RPC.RequestDispatcherImpl.address
    isDefinition: true
    parent: NPCEngine.RPC.RequestDispatcherImpl
    commentId: F:NPCEngine.RPC.RequestDispatcherImpl.address
  NPCEngine.RPC.APICommunicatorZMQImpl.#ctor*:
    name:
      CSharp:
      - id: NPCEngine.RPC.APICommunicatorZMQImpl.#ctor*
        name: APICommunicatorZMQImpl
        nameWithType: APICommunicatorZMQImpl.APICommunicatorZMQImpl
        qualifiedName: NPCEngine.RPC.APICommunicatorZMQImpl.APICommunicatorZMQImpl
      VB:
      - id: NPCEngine.RPC.APICommunicatorZMQImpl.#ctor*
        name: APICommunicatorZMQImpl
        nameWithType: APICommunicatorZMQImpl.APICommunicatorZMQImpl
        qualifiedName: NPCEngine.RPC.APICommunicatorZMQImpl.APICommunicatorZMQImpl
    isDefinition: true
    commentId: Overload:NPCEngine.RPC.APICommunicatorZMQImpl.#ctor
  NPCEngine.RPC.APICommunicatorZMQImpl.Finalize*:
    name:
      CSharp:
      - id: NPCEngine.RPC.APICommunicatorZMQImpl.Finalize*
        name: Finalize
        nameWithType: APICommunicatorZMQImpl.Finalize
        qualifiedName: NPCEngine.RPC.APICommunicatorZMQImpl.Finalize
      VB:
      - id: NPCEngine.RPC.APICommunicatorZMQImpl.Finalize*
        name: Finalize
        nameWithType: APICommunicatorZMQImpl.Finalize
        qualifiedName: NPCEngine.RPC.APICommunicatorZMQImpl.Finalize
    isDefinition: true
    commentId: Overload:NPCEngine.RPC.APICommunicatorZMQImpl.Finalize
  NPCEngine.RPC.RequestDispatcherImpl.DispatchRequestCoroutine(NPCEngine.RPC.Request):
    name:
      CSharp:
      - id: NPCEngine.RPC.RequestDispatcherImpl.DispatchRequestCoroutine(NPCEngine.RPC.Request)
        name: DispatchRequestCoroutine
        nameWithType: RequestDispatcherImpl.DispatchRequestCoroutine
        qualifiedName: NPCEngine.RPC.RequestDispatcherImpl.DispatchRequestCoroutine
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: NPCEngine.RPC.Request
        name: Request
        nameWithType: Request
        qualifiedName: NPCEngine.RPC.Request
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: NPCEngine.RPC.RequestDispatcherImpl.DispatchRequestCoroutine(NPCEngine.RPC.Request)
        name: DispatchRequestCoroutine
        nameWithType: RequestDispatcherImpl.DispatchRequestCoroutine
        qualifiedName: NPCEngine.RPC.RequestDispatcherImpl.DispatchRequestCoroutine
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: NPCEngine.RPC.Request
        name: Request
        nameWithType: Request
        qualifiedName: NPCEngine.RPC.Request
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: NPCEngine.RPC.RequestDispatcherImpl
    commentId: M:NPCEngine.RPC.RequestDispatcherImpl.DispatchRequestCoroutine(NPCEngine.RPC.Request)
  NPCEngine.RPC.APICommunicatorZMQImpl.DispatchRequestCoroutine*:
    name:
      CSharp:
      - id: NPCEngine.RPC.APICommunicatorZMQImpl.DispatchRequestCoroutine*
        name: DispatchRequestCoroutine
        nameWithType: APICommunicatorZMQImpl.DispatchRequestCoroutine
        qualifiedName: NPCEngine.RPC.APICommunicatorZMQImpl.DispatchRequestCoroutine
      VB:
      - id: NPCEngine.RPC.APICommunicatorZMQImpl.DispatchRequestCoroutine*
        name: DispatchRequestCoroutine
        nameWithType: APICommunicatorZMQImpl.DispatchRequestCoroutine
        qualifiedName: NPCEngine.RPC.APICommunicatorZMQImpl.DispatchRequestCoroutine
    isDefinition: true
    commentId: Overload:NPCEngine.RPC.APICommunicatorZMQImpl.DispatchRequestCoroutine
  NPCEngine.RPC.APICommunicatorZMQImpl:
    name:
      CSharp:
      - id: NPCEngine.RPC.APICommunicatorZMQImpl
        name: APICommunicatorZMQImpl
        nameWithType: APICommunicatorZMQImpl
        qualifiedName: NPCEngine.RPC.APICommunicatorZMQImpl
      VB:
      - id: NPCEngine.RPC.APICommunicatorZMQImpl
        name: APICommunicatorZMQImpl
        nameWithType: APICommunicatorZMQImpl
        qualifiedName: NPCEngine.RPC.APICommunicatorZMQImpl
    isDefinition: true
    commentId: T:NPCEngine.RPC.APICommunicatorZMQImpl
  NPCEngine.RPC.APICommunicatorHTTPImpl.#ctor*:
    name:
      CSharp:
      - id: NPCEngine.RPC.APICommunicatorHTTPImpl.#ctor*
        name: APICommunicatorHTTPImpl
        nameWithType: APICommunicatorHTTPImpl.APICommunicatorHTTPImpl
        qualifiedName: NPCEngine.RPC.APICommunicatorHTTPImpl.APICommunicatorHTTPImpl
      VB:
      - id: NPCEngine.RPC.APICommunicatorHTTPImpl.#ctor*
        name: APICommunicatorHTTPImpl
        nameWithType: APICommunicatorHTTPImpl.APICommunicatorHTTPImpl
        qualifiedName: NPCEngine.RPC.APICommunicatorHTTPImpl.APICommunicatorHTTPImpl
    isDefinition: true
    commentId: Overload:NPCEngine.RPC.APICommunicatorHTTPImpl.#ctor
  NPCEngine.RPC.APICommunicatorHTTPImpl.DispatchRequestCoroutine*:
    name:
      CSharp:
      - id: NPCEngine.RPC.APICommunicatorHTTPImpl.DispatchRequestCoroutine*
        name: DispatchRequestCoroutine
        nameWithType: APICommunicatorHTTPImpl.DispatchRequestCoroutine
        qualifiedName: NPCEngine.RPC.APICommunicatorHTTPImpl.DispatchRequestCoroutine
      VB:
      - id: NPCEngine.RPC.APICommunicatorHTTPImpl.DispatchRequestCoroutine*
        name: DispatchRequestCoroutine
        nameWithType: APICommunicatorHTTPImpl.DispatchRequestCoroutine
        qualifiedName: NPCEngine.RPC.APICommunicatorHTTPImpl.DispatchRequestCoroutine
    isDefinition: true
    commentId: Overload:NPCEngine.RPC.APICommunicatorHTTPImpl.DispatchRequestCoroutine
  NPCEngine.RPC.APICommunicatorHTTPImpl:
    name:
      CSharp:
      - id: NPCEngine.RPC.APICommunicatorHTTPImpl
        name: APICommunicatorHTTPImpl
        nameWithType: APICommunicatorHTTPImpl
        qualifiedName: NPCEngine.RPC.APICommunicatorHTTPImpl
      VB:
      - id: NPCEngine.RPC.APICommunicatorHTTPImpl
        name: APICommunicatorHTTPImpl
        nameWithType: APICommunicatorHTTPImpl
        qualifiedName: NPCEngine.RPC.APICommunicatorHTTPImpl
    isDefinition: true
    commentId: T:NPCEngine.RPC.APICommunicatorHTTPImpl
  NPCEngine.RPC.Request.#ctor*:
    name:
      CSharp:
      - id: NPCEngine.RPC.Request.#ctor*
        name: Request
        nameWithType: Request.Request
        qualifiedName: NPCEngine.RPC.Request.Request
      VB:
      - id: NPCEngine.RPC.Request.#ctor*
        name: Request
        nameWithType: Request.Request
        qualifiedName: NPCEngine.RPC.Request.Request
    isDefinition: true
    commentId: Overload:NPCEngine.RPC.Request.#ctor
  ParametersType:
    name:
      CSharp:
      - name: ParametersType
        nameWithType: ParametersType
        qualifiedName: ParametersType
      VB:
      - name: ParametersType
        nameWithType: ParametersType
        qualifiedName: ParametersType
    isDefinition: true
    commentId: '!:ParametersType'
  '{ParametersType}':
    name:
      CSharp:
      - name: ParametersType
        nameWithType: ParametersType
        qualifiedName: ParametersType
      VB:
      - name: ParametersType
        nameWithType: ParametersType
        qualifiedName: ParametersType
    isDefinition: false
    definition: ParametersType
    commentId: '!:ParametersType'
  NPCEngine.RPC.RPCRequestMessage`1.#ctor*:
    name:
      CSharp:
      - id: NPCEngine.RPC.RPCRequestMessage`1.#ctor*
        name: RPCRequestMessage
        nameWithType: RPCRequestMessage<ParametersType>.RPCRequestMessage
        qualifiedName: NPCEngine.RPC.RPCRequestMessage<ParametersType>.RPCRequestMessage
      VB:
      - id: NPCEngine.RPC.RPCRequestMessage`1.#ctor*
        name: RPCRequestMessage
        nameWithType: RPCRequestMessage(Of ParametersType).RPCRequestMessage
        qualifiedName: NPCEngine.RPC.RPCRequestMessage(Of ParametersType).RPCRequestMessage
    isDefinition: true
    commentId: Overload:NPCEngine.RPC.RPCRequestMessage`1.#ctor
  NPCEngine.RPC.RPCRequestMessage`1:
    name:
      CSharp:
      - id: NPCEngine.RPC.RPCRequestMessage`1
        name: RPCRequestMessage
        nameWithType: RPCRequestMessage
        qualifiedName: NPCEngine.RPC.RPCRequestMessage
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: ParametersType
        nameWithType: ParametersType
        qualifiedName: ParametersType
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: NPCEngine.RPC.RPCRequestMessage`1
        name: RPCRequestMessage
        nameWithType: RPCRequestMessage
        qualifiedName: NPCEngine.RPC.RPCRequestMessage
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: ParametersType
        nameWithType: ParametersType
        qualifiedName: ParametersType
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:NPCEngine.RPC.RPCRequestMessage`1
  ReturnType:
    name:
      CSharp:
      - name: ReturnType
        nameWithType: ReturnType
        qualifiedName: ReturnType
      VB:
      - name: ReturnType
        nameWithType: ReturnType
        qualifiedName: ReturnType
    isDefinition: true
    commentId: '!:ReturnType'
  '{ReturnType}':
    name:
      CSharp:
      - name: ReturnType
        nameWithType: ReturnType
        qualifiedName: ReturnType
      VB:
      - name: ReturnType
        nameWithType: ReturnType
        qualifiedName: ReturnType
    isDefinition: false
    definition: ReturnType
    commentId: '!:ReturnType'
  NPCEngine.RPC.RPCResponseError:
    name:
      CSharp:
      - id: NPCEngine.RPC.RPCResponseError
        name: RPCResponseError
        nameWithType: RPCResponseError
        qualifiedName: NPCEngine.RPC.RPCResponseError
      VB:
      - id: NPCEngine.RPC.RPCResponseError
        name: RPCResponseError
        nameWithType: RPCResponseError
        qualifiedName: NPCEngine.RPC.RPCResponseError
    isDefinition: true
    parent: NPCEngine.RPC
    commentId: T:NPCEngine.RPC.RPCResponseError
  NPCEngine.RPC.RPCResponseMessage`1.#ctor*:
    name:
      CSharp:
      - id: NPCEngine.RPC.RPCResponseMessage`1.#ctor*
        name: RPCResponseMessage
        nameWithType: RPCResponseMessage<ReturnType>.RPCResponseMessage
        qualifiedName: NPCEngine.RPC.RPCResponseMessage<ReturnType>.RPCResponseMessage
      VB:
      - id: NPCEngine.RPC.RPCResponseMessage`1.#ctor*
        name: RPCResponseMessage
        nameWithType: RPCResponseMessage(Of ReturnType).RPCResponseMessage
        qualifiedName: NPCEngine.RPC.RPCResponseMessage(Of ReturnType).RPCResponseMessage
    isDefinition: true
    commentId: Overload:NPCEngine.RPC.RPCResponseMessage`1.#ctor
  NPCEngine.RPC.RPCResponseMessage`1:
    name:
      CSharp:
      - id: NPCEngine.RPC.RPCResponseMessage`1
        name: RPCResponseMessage
        nameWithType: RPCResponseMessage
        qualifiedName: NPCEngine.RPC.RPCResponseMessage
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: ReturnType
        nameWithType: ReturnType
        qualifiedName: ReturnType
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: NPCEngine.RPC.RPCResponseMessage`1
        name: RPCResponseMessage
        nameWithType: RPCResponseMessage
        qualifiedName: NPCEngine.RPC.RPCResponseMessage
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: ReturnType
        nameWithType: ReturnType
        qualifiedName: ReturnType
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:NPCEngine.RPC.RPCResponseMessage`1
  NPCEngine.RPC.RPCResponseErrorData:
    name:
      CSharp:
      - id: NPCEngine.RPC.RPCResponseErrorData
        name: RPCResponseErrorData
        nameWithType: RPCResponseErrorData
        qualifiedName: NPCEngine.RPC.RPCResponseErrorData
      VB:
      - id: NPCEngine.RPC.RPCResponseErrorData
        name: RPCResponseErrorData
        nameWithType: RPCResponseErrorData
        qualifiedName: NPCEngine.RPC.RPCResponseErrorData
    isDefinition: true
    parent: NPCEngine.RPC
    commentId: T:NPCEngine.RPC.RPCResponseErrorData
  Global.List{String}:
    name:
      CSharp:
      - id: Global.List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.String
        name: String
        nameWithType: String
        qualifiedName: String
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.String
        name: String
        nameWithType: String
        qualifiedName: String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.List`1
    commentId: '!:Global.List{String}'
  NPCEngine.RPC.ServerType:
    name:
      CSharp:
      - id: NPCEngine.RPC.ServerType
        name: ServerType
        nameWithType: ServerType
        qualifiedName: NPCEngine.RPC.ServerType
      VB:
      - id: NPCEngine.RPC.ServerType
        name: ServerType
        nameWithType: ServerType
        qualifiedName: NPCEngine.RPC.ServerType
    isDefinition: true
    parent: NPCEngine.RPC
    commentId: T:NPCEngine.RPC.ServerType
  NPCEngine.Utility.AudioSourceQueue.PlaySound*:
    name:
      CSharp:
      - id: NPCEngine.Utility.AudioSourceQueue.PlaySound*
        name: PlaySound
        nameWithType: AudioSourceQueue.PlaySound
        qualifiedName: NPCEngine.Utility.AudioSourceQueue.PlaySound
      VB:
      - id: NPCEngine.Utility.AudioSourceQueue.PlaySound*
        name: PlaySound
        nameWithType: AudioSourceQueue.PlaySound
        qualifiedName: NPCEngine.Utility.AudioSourceQueue.PlaySound
    isDefinition: true
    commentId: Overload:NPCEngine.Utility.AudioSourceQueue.PlaySound
  NPCEngine.Utility.Singleton{NPCEngine.Utility.CoroutineUtility}:
    name:
      CSharp:
      - id: NPCEngine.Utility.Singleton`1
        name: Singleton
        nameWithType: Singleton
        qualifiedName: NPCEngine.Utility.Singleton
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: NPCEngine.Utility.CoroutineUtility
        name: CoroutineUtility
        nameWithType: CoroutineUtility
        qualifiedName: NPCEngine.Utility.CoroutineUtility
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: NPCEngine.Utility.Singleton`1
        name: Singleton
        nameWithType: Singleton
        qualifiedName: NPCEngine.Utility.Singleton
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: NPCEngine.Utility.CoroutineUtility
        name: CoroutineUtility
        nameWithType: CoroutineUtility
        qualifiedName: NPCEngine.Utility.CoroutineUtility
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: NPCEngine.Utility.Singleton`1
    parent: NPCEngine.Utility
    commentId: T:NPCEngine.Utility.Singleton{NPCEngine.Utility.CoroutineUtility}
  NPCEngine.Utility.Singleton{NPCEngine.Utility.CoroutineUtility}.Instance:
    name:
      CSharp:
      - id: NPCEngine.Utility.Singleton`1.Instance
        name: Instance
        nameWithType: Singleton<CoroutineUtility>.Instance
        qualifiedName: NPCEngine.Utility.Singleton<NPCEngine.Utility.CoroutineUtility>.Instance
      VB:
      - id: NPCEngine.Utility.Singleton`1.Instance
        name: Instance
        nameWithType: Singleton(Of CoroutineUtility).Instance
        qualifiedName: NPCEngine.Utility.Singleton(Of NPCEngine.Utility.CoroutineUtility).Instance
    isDefinition: false
    definition: NPCEngine.Utility.Singleton`1.Instance
    parent: NPCEngine.Utility.Singleton{NPCEngine.Utility.CoroutineUtility}
    commentId: P:NPCEngine.Utility.Singleton{NPCEngine.Utility.CoroutineUtility}.Instance
  NPCEngine.Utility.Singleton{NPCEngine.Utility.CoroutineUtility}.GetInstance:
    name:
      CSharp:
      - id: NPCEngine.Utility.Singleton`1.GetInstance
        name: GetInstance
        nameWithType: Singleton<CoroutineUtility>.GetInstance
        qualifiedName: NPCEngine.Utility.Singleton<NPCEngine.Utility.CoroutineUtility>.GetInstance
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: NPCEngine.Utility.Singleton`1.GetInstance
        name: GetInstance
        nameWithType: Singleton(Of CoroutineUtility).GetInstance
        qualifiedName: NPCEngine.Utility.Singleton(Of NPCEngine.Utility.CoroutineUtility).GetInstance
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: NPCEngine.Utility.Singleton`1.GetInstance
    parent: NPCEngine.Utility.Singleton{NPCEngine.Utility.CoroutineUtility}
    commentId: M:NPCEngine.Utility.Singleton{NPCEngine.Utility.CoroutineUtility}.GetInstance
  Global.MonoBehaviour:
    name:
      CSharp:
      - id: Global.MonoBehaviour
        name: MonoBehaviour
        nameWithType: MonoBehaviour
        qualifiedName: MonoBehaviour
        isExternal: true
      VB:
      - id: Global.MonoBehaviour
        name: MonoBehaviour
        nameWithType: MonoBehaviour
        qualifiedName: MonoBehaviour
        isExternal: true
    isDefinition: true
  NPCEngine.Utility.CoroutineUtility.IsRunning*:
    name:
      CSharp:
      - id: NPCEngine.Utility.CoroutineUtility.IsRunning*
        name: IsRunning
        nameWithType: CoroutineUtility.IsRunning
        qualifiedName: NPCEngine.Utility.CoroutineUtility.IsRunning
      VB:
      - id: NPCEngine.Utility.CoroutineUtility.IsRunning*
        name: IsRunning
        nameWithType: CoroutineUtility.IsRunning
        qualifiedName: NPCEngine.Utility.CoroutineUtility.IsRunning
    isDefinition: true
    commentId: Overload:NPCEngine.Utility.CoroutineUtility.IsRunning
  NPCEngine.Utility.CoroutineUtility.StartCoroutine*:
    name:
      CSharp:
      - id: NPCEngine.Utility.CoroutineUtility.StartCoroutine*
        name: StartCoroutine
        nameWithType: CoroutineUtility.StartCoroutine
        qualifiedName: NPCEngine.Utility.CoroutineUtility.StartCoroutine
      VB:
      - id: NPCEngine.Utility.CoroutineUtility.StartCoroutine*
        name: StartCoroutine
        nameWithType: CoroutineUtility.StartCoroutine
        qualifiedName: NPCEngine.Utility.CoroutineUtility.StartCoroutine
    isDefinition: true
    commentId: Overload:NPCEngine.Utility.CoroutineUtility.StartCoroutine
  NPCEngine.Utility.CoroutineUtility.StopCoroutine*:
    name:
      CSharp:
      - id: NPCEngine.Utility.CoroutineUtility.StopCoroutine*
        name: StopCoroutine
        nameWithType: CoroutineUtility.StopCoroutine
        qualifiedName: NPCEngine.Utility.CoroutineUtility.StopCoroutine
      VB:
      - id: NPCEngine.Utility.CoroutineUtility.StopCoroutine*
        name: StopCoroutine
        nameWithType: CoroutineUtility.StopCoroutine
        qualifiedName: NPCEngine.Utility.CoroutineUtility.StopCoroutine
    isDefinition: true
    commentId: Overload:NPCEngine.Utility.CoroutineUtility.StopCoroutine
  NPCEngine.Utility.CoroutineUtility.StopAllPlayingCoroutines*:
    name:
      CSharp:
      - id: NPCEngine.Utility.CoroutineUtility.StopAllPlayingCoroutines*
        name: StopAllPlayingCoroutines
        nameWithType: CoroutineUtility.StopAllPlayingCoroutines
        qualifiedName: NPCEngine.Utility.CoroutineUtility.StopAllPlayingCoroutines
      VB:
      - id: NPCEngine.Utility.CoroutineUtility.StopAllPlayingCoroutines*
        name: StopAllPlayingCoroutines
        nameWithType: CoroutineUtility.StopAllPlayingCoroutines
        qualifiedName: NPCEngine.Utility.CoroutineUtility.StopAllPlayingCoroutines
    isDefinition: true
    commentId: Overload:NPCEngine.Utility.CoroutineUtility.StopAllPlayingCoroutines
  NPCEngine.Utility.CoroutineUtility.StopAllEditorCoroutines*:
    name:
      CSharp:
      - id: NPCEngine.Utility.CoroutineUtility.StopAllEditorCoroutines*
        name: StopAllEditorCoroutines
        nameWithType: CoroutineUtility.StopAllEditorCoroutines
        qualifiedName: NPCEngine.Utility.CoroutineUtility.StopAllEditorCoroutines
      VB:
      - id: NPCEngine.Utility.CoroutineUtility.StopAllEditorCoroutines*
        name: StopAllEditorCoroutines
        nameWithType: CoroutineUtility.StopAllEditorCoroutines
        qualifiedName: NPCEngine.Utility.CoroutineUtility.StopAllEditorCoroutines
    isDefinition: true
    commentId: Overload:NPCEngine.Utility.CoroutineUtility.StopAllEditorCoroutines
  NPCEngine.Utility.CoroutineUtility.WaitForSeconds*:
    name:
      CSharp:
      - id: NPCEngine.Utility.CoroutineUtility.WaitForSeconds*
        name: WaitForSeconds
        nameWithType: CoroutineUtility.WaitForSeconds
        qualifiedName: NPCEngine.Utility.CoroutineUtility.WaitForSeconds
      VB:
      - id: NPCEngine.Utility.CoroutineUtility.WaitForSeconds*
        name: WaitForSeconds
        nameWithType: CoroutineUtility.WaitForSeconds
        qualifiedName: NPCEngine.Utility.CoroutineUtility.WaitForSeconds
    isDefinition: true
    commentId: Overload:NPCEngine.Utility.CoroutineUtility.WaitForSeconds
  NPCEngine.Utility.CoroutineUtility.GetGameObjectPath*:
    name:
      CSharp:
      - id: NPCEngine.Utility.CoroutineUtility.GetGameObjectPath*
        name: GetGameObjectPath
        nameWithType: CoroutineUtility.GetGameObjectPath
        qualifiedName: NPCEngine.Utility.CoroutineUtility.GetGameObjectPath
      VB:
      - id: NPCEngine.Utility.CoroutineUtility.GetGameObjectPath*
        name: GetGameObjectPath
        nameWithType: CoroutineUtility.GetGameObjectPath
        qualifiedName: NPCEngine.Utility.CoroutineUtility.GetGameObjectPath
    isDefinition: true
    commentId: Overload:NPCEngine.Utility.CoroutineUtility.GetGameObjectPath
  NPCEngine.Utility.CoroutineUtility.PrintCoroutines*:
    name:
      CSharp:
      - id: NPCEngine.Utility.CoroutineUtility.PrintCoroutines*
        name: PrintCoroutines
        nameWithType: CoroutineUtility.PrintCoroutines
        qualifiedName: NPCEngine.Utility.CoroutineUtility.PrintCoroutines
      VB:
      - id: NPCEngine.Utility.CoroutineUtility.PrintCoroutines*
        name: PrintCoroutines
        nameWithType: CoroutineUtility.PrintCoroutines
        qualifiedName: NPCEngine.Utility.CoroutineUtility.PrintCoroutines
    isDefinition: true
    commentId: Overload:NPCEngine.Utility.CoroutineUtility.PrintCoroutines
  NPCEngine.Utility.CoroutineUtility.PrintEditorCoroutines*:
    name:
      CSharp:
      - id: NPCEngine.Utility.CoroutineUtility.PrintEditorCoroutines*
        name: PrintEditorCoroutines
        nameWithType: CoroutineUtility.PrintEditorCoroutines
        qualifiedName: NPCEngine.Utility.CoroutineUtility.PrintEditorCoroutines
      VB:
      - id: NPCEngine.Utility.CoroutineUtility.PrintEditorCoroutines*
        name: PrintEditorCoroutines
        nameWithType: CoroutineUtility.PrintEditorCoroutines
        qualifiedName: NPCEngine.Utility.CoroutineUtility.PrintEditorCoroutines
    isDefinition: true
    commentId: Overload:NPCEngine.Utility.CoroutineUtility.PrintEditorCoroutines
  NPCEngine.Utility.CoroutineUtility.PrintRunningCoroutines*:
    name:
      CSharp:
      - id: NPCEngine.Utility.CoroutineUtility.PrintRunningCoroutines*
        name: PrintRunningCoroutines
        nameWithType: CoroutineUtility.PrintRunningCoroutines
        qualifiedName: NPCEngine.Utility.CoroutineUtility.PrintRunningCoroutines
      VB:
      - id: NPCEngine.Utility.CoroutineUtility.PrintRunningCoroutines*
        name: PrintRunningCoroutines
        nameWithType: CoroutineUtility.PrintRunningCoroutines
        qualifiedName: NPCEngine.Utility.CoroutineUtility.PrintRunningCoroutines
    isDefinition: true
    commentId: Overload:NPCEngine.Utility.CoroutineUtility.PrintRunningCoroutines
  NPCEngine.Utility.CoroutineUtility:
    name:
      CSharp:
      - id: NPCEngine.Utility.CoroutineUtility
        name: CoroutineUtility
        nameWithType: CoroutineUtility
        qualifiedName: NPCEngine.Utility.CoroutineUtility
      VB:
      - id: NPCEngine.Utility.CoroutineUtility
        name: CoroutineUtility
        nameWithType: CoroutineUtility
        qualifiedName: NPCEngine.Utility.CoroutineUtility
    isDefinition: true
    commentId: T:NPCEngine.Utility.CoroutineUtility
  NPCEngine.Utility.Singleton`1.Instance*:
    name:
      CSharp:
      - id: NPCEngine.Utility.Singleton`1.Instance*
        name: Instance
        nameWithType: Singleton<T>.Instance
        qualifiedName: NPCEngine.Utility.Singleton<T>.Instance
      VB:
      - id: NPCEngine.Utility.Singleton`1.Instance*
        name: Instance
        nameWithType: Singleton(Of T).Instance
        qualifiedName: NPCEngine.Utility.Singleton(Of T).Instance
    isDefinition: true
    commentId: Overload:NPCEngine.Utility.Singleton`1.Instance
  NPCEngine.Utility.Singleton`1.GetInstance*:
    name:
      CSharp:
      - id: NPCEngine.Utility.Singleton`1.GetInstance*
        name: GetInstance
        nameWithType: Singleton<T>.GetInstance
        qualifiedName: NPCEngine.Utility.Singleton<T>.GetInstance
      VB:
      - id: NPCEngine.Utility.Singleton`1.GetInstance*
        name: GetInstance
        nameWithType: Singleton(Of T).GetInstance
        qualifiedName: NPCEngine.Utility.Singleton(Of T).GetInstance
    isDefinition: true
    commentId: Overload:NPCEngine.Utility.Singleton`1.GetInstance
